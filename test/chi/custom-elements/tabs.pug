---
title: Tabs
---
script(type='module' src='../../js/ce/ux-chi-ce/ux-chi-ce.esm.js')

h2 Base
.-w--100
  chi-tabs(active-tab='tab-a' id='base' sliding-border data-cy='base')

//- h2 Border
//- .-w--100
//-   chi-tabs(active-tab='tab-a' border id='base' sliding-border)

h2 Horizontal
h3 Flat 
h4 Base
.-w--100 
  chi-tabs(id='horizontal-flat-base')

h4 Inverse
.-w--100.-bg--black
  chi-tabs(id='horizontal-flat-inverse' inverse)

h3 Solid 
.-w--100 
  chi-tabs(id='horizontal-flat-solid' solid size='lg' border)

h2 Vertical 
h3 Flat
h4 Base
.-w--100
  chi-tabs(id='vertical-flat-base' vertical)

h4 Inverse
.-w--100.-bg--black
  chi-tabs(id='vertical-flat-inverse' vertical inverse)

h3 Solid 
.-w--100 
  chi-tabs(id='vertical-solid' vertical solid) 

//- not suported by wc
//- h3 Subtabs 
//- .-w--100 
//-   chi-tabs(id='vertical-subtabs' vertical)

h2 Border
h3 Base
.-w--100
  chi-tabs(id='bordered-base' border)

h3 Inverse
.-w--100.-bg--black
  chi-tabs(id='bordered-inverse' inverse border)

h2 No Active Tab
h3 Base
.-w--100
  chi-tabs(id='no-active-tab-base' data-cy='no-active-tab-base')

h3 Inverse
.-w--100.-bg--black
  chi-tabs(id='no-active-tab-inverse' inverse)

h2 Additional sizes
h3 Horizontal
h4 XS
.-w--100 
  chi-tabs(id='size-XS-horizontal' size='xs')
h4 SM
.-w--100 
  chi-tabs(id='size-SM-horizontal' size='sm')
h4 MD
.-w--100 
  chi-tabs(id='size-MD-horizontal' size='md')
h4 LG
.-w--100 
  chi-tabs(id='size-LG-horizontal' size='lg')
h4 XL
.-w--100 
  chi-tabs(id='size-XL-horizontal' size='xl')
h4 SM_2
.-w--100 
  chi-tabs(id='size-SM_2-horizontal' size='sm')
h3 Vertical
h4 XS
.-w--100 
  chi-tabs(id='size-XS-vertical' vertical size='xs')
h4 SM
.-w--100 
  chi-tabs(id='size-SM-vertical' vertical size='sm')
h4 MD
.-w--100 
  chi-tabs(id='size-MD-vertical' vertical size='md')
h4 LG
.-w--100 
  chi-tabs(id='size-LG-vertical' vertical size='lg')
h4 XL
.-w--100 
  chi-tabs(id='size-XL-vertical' vertical size='xl')
h4 SM_2
.-w--100 
  chi-tabs(id='size-SM_2-vertical' vertical size='sm')

h2 Panel items
h3 Horizontal
.-w--100
  chi-tabs(id='panel-items-base' active-tab='panel-items-example-2' data-cy='panel-items-base')
    div(slot="panels")
      .chi-tabs-panel#panel-items-example-1 Panel 1
      .chi-tabs-panel#panel-items-example-2 Panel 2
      .chi-tabs-panel#panel-items-example-2-1 Panel 2-1
      .chi-tabs-panel#panel-items-example-2-1-1 Panel 2-1-1
      .chi-tabs-panel#panel-items-example-3 Panel 3

//- h2 Solid
//- .-w--100
//-   chi-tabs(active-tab='tab-a' id='solid' solid sliding-border)

//- h2 No animation
//- .-w--100
//-   chi-tabs(active-tab='tab-a' id='no-animation')

//- h2 No animation, Solid
//- .-w--100
//-   chi-tabs(active-tab='tab-a' id='no-animation-solid' solid)

//- VISUAL TESTS
h2 Horizontal
h3 Flat
.test-horizontal-flat
  each style in ['base', 'border']
    each size in ['xs', 'sm', 'md', 'lg']
      h4= `Tabs ${size} ${style}`
      chi-tabs(active-tab='test-horizontal-flat-tab-a' size=size border=style == 'border' ? true : false)

h3 Solid
.test-horizontal-solid
  each style in ['base', 'border']
    each size in ['xs', 'sm', 'md', 'lg']
      h4= `Tabs ${size} ${style}`
      chi-tabs(active-tab='test-horizontal-solid-tab-a' solid size=size border=style == 'border' ? true : false)

h2 Vertical
h3 Flat
.test-vertical-flat
  each style in ['base', 'border']
    each size in ['sm', 'md', 'lg']
      h4= `Tabs vertical ${size} ${style}`
      chi-tabs(active-tab='test-vertical-flat-tab-a' vertical size=size border=style == 'border' ? true : false)

h3 Solid
.test-vertical-solid
  each style in ['base', 'border']
    each size in ['sm', 'md', 'lg']
      h4= `Tabs vertical ${size} ${style}`
      chi-tabs(active-tab='test-vertical-solid-tab-a' vertical solid size=size border=style == 'border' ? true : false)

h2 Horizontal Inverse
h3 Flat
.test-horizontal-flat-inverse
  each style in ['base', 'border']
    each size in ['xs', 'sm', 'md', 'lg']
      h4= `Tabs ${style} ${size} inverse`
      .-bg--black.-px--3
        chi-tabs(active-tab='test-horizontal-flat-inverse-tab-a' inverse size=size border=style == 'border' ? true : false)

h3 Solid
.test-horizontal-solid-inverse
  each style in ['base', 'border']
    each size in ['xs', 'sm', 'md', 'lg']
      h4= `Tabs ${style} ${size} inverse`
      .-bg--black.-px--3.-py--1
        chi-tabs(active-tab='test-horizontal-solid-inverse-tab-a' solid inverse size=size border=style == 'border' ? true : false)

h2 Vertical Inverse
h3 Flat
.test-vertical-inverse-flat
  each style in ['base', 'border']
    each size in ['sm', 'md', 'lg']
      h4= `Tabs vertical ${size} ${style}`
      .-bg--black.-p--3
        chi-tabs(active-tab='test-vertical-inverse-flat-tab-a' vertical inverse size=size border=style == 'border' ? true : false)

h3 Solid
.test-vertical-inverse-solid
  each style in ['base', 'border']
    each size in ['sm', 'md', 'lg']
      h4= `Tabs vertical ${size} ${style}`
      .-bg--black.-p--3
        chi-tabs(active-tab='test-vertical-inverse-solid-tab-a' vertical solid inverse size=size border=style == 'border' ? true : false)

script.
  document.addEventListener('DOMContentLoaded', () => {
    //- const tabElements = document.querySelectorAll('#base, #border, #vertical, #solid, #no-animation, #no-animation-solid');
    const tabElement = document.querySelector('#base');

    if (tabElement) {
      tabElement.tabs = [
        {
          label: 'Tab A test',
          id: 'tab-a'
        },
        {
          label: 'Tab B',
          id: 'tab-b',
        },
        {
          label: 'Tab C',
          id: 'tab-c',
          children: [
            {
              label: 'C 2',
              id: 'tab-c-2'
            }
          ]
        },
        {
          label: '<chi-icon icon="settings"></chi-icon> Tab D',
          id: 'tab-d',
        },
        {
          label: '<span>Tab E &trade;</span>',
          id: 'tab-e',
          visibleItems: 3,
          children: [
            {
              label: 'Tab E 2',
              id: 'tab-e-2',
            },
            {
              label: 'Tab E 1',
              id: 'tab-e-1',
              visibleItems: 2,
              children: [
                {
                  label: '<span>Tab E 1.1 &trade;</span>',
                  id: 'tab-e-1-1',
                },
                {
                  label: 'Tab E 1.2',
                  id: 'tab-e-1-2',
                  children: [
                    {
                      label: 'Tab E 1.2.1',
                      id: 'tab-e-1-2-1',
                      children: [
                        {
                          label: 'Tab E 1.2.1.1',
                          id: 'tab-e-1-2-1-1',
                        },
                        {
                          label: 'Tab E 1.2.1.2',
                          id: 'tab-e-1-2-1-2',
                        },
                      ]
                    },
                    {
                      label: 'Tab E 1.2.2',
                      id: 'tab-e-1-2-2',
                      children: [
                      {
                          label: 'Tab E 1.2.2.1',
                          id: 'tab-e-1-2-2-1',
                        },
                        {
                          label: 'Tab E 1.2.2.2',
                          id: 'tab-e-1-2-2-2',
                        },
                      ]
                    },
                    {
                      label: 'Tab E 1.2.3',
                      id: 'tab-e-1-2-3',
                      children: [
                        {
                          label: 'Tab E 1.2.3.1',
                          id: 'tab-e-1-2-3-1',
                        },
                        {
                          label: 'Tab E 1.2.3.2',
                          id: 'tab-e-1-2-3-2',
                        },
                      ]
                    },
                  ]
                },
                {
                  label: '<span>Tab E 1.4 &trade;</span>',
                  id: 'tab-e-1-4',
                },
                {
                  label: '<span>Tab E 1.3 &trade;</span>',
                  id: 'tab-e-1-3',
                },
              ]
            },
            {
              label: 'Tab E 3',
              id: 'tab-e-3',
            },
            {
              label: 'Tab E 4',
              id: 'tab-e-4',
            },
          ]
        },
        {
          label: 'Tab F',
          id: 'tab-f'
        },
        {
          label: 'Tab G',
          id: 'tab-g'
        },
        {
          label: 'Tab H',
          id: 'tab-h'
        },
        {
          label: 'Tab I',
          id: 'tab-i'
        },
        {
          label: 'Tab J',
          id: 'tab-j',
          children: [
            {
              label: 'Tab J 2',
              id: 'tab-j-2',
            },
            {
              label: 'Tab J 1',
              id: 'tab-j-1',
              children: [
                {
                  label: 'Tab J 1.1',
                  id: 'tab-j-1-1',
                },
                {
                  label: 'Tab J 1.2',
                  id: 'tab-j-1-2',
                },
              ]
            },
          ]
        },
        {
          label: 'Tab K',
          id: 'tab-k'
        },
        {
          label: 'Tab L',
          id: 'tab-l'
        },
        {
          label: 'Tab M',
          id: 'tab-m'
        },
        {
          label: 'Tab N',
          id: 'tab-n'
        },
        {
          label: 'Tab O',
          id: 'tab-o'
        },
        {
          label: 'Tab P',
          id: 'tab-p'
        },
        {
          label: 'Google',
          id: 'tab-href',
          href: 'https://www.google.com',
          children: [
            {
              label: 'Google spain',
              id: 'tab-href-google-spain',
              href: 'www.google.es'
            },
            {
              label: 'Google uk same window',
              id: 'tab-href-google-uk',
              href: 'www.google.co.uk',
              target: '_self'
            },
            {
              label: 'Internal link',
              id: 'tab-href-internal'
            }
          ]
        },
        {
          label: 'Tab Q external',
          id: 'tab-q',
          href: 'www.google.es'
        }
      ];
    }
    tabElement.addEventListener('chiTabChange', e => {
      console.log(e);
    });

    const getExampleTabs = id => ({
      [id]: [
        {label: 'Active tab', id: `${id}-example-1`},
        {label: 'Tab Link', id: `${id}-example-2`},
        {label: 'Tab Link', id: `${id}-example-3`},
      ]
    });


    const chiTabElements = [
      'horizontal-flat-base',
      'no-active-tab-base',
      'no-active-tab-inverse',
      'horizontal-flat-inverse',
      'horizontal-flat-solid',
      'vertical-flat-base',
      'vertical-flat-inverse',
      'vertical-solid',
      'bordered-base',
      'bordered-inverse',
      'size-XS-horizontal',
      'size-XS-vertical',
      'size-SM-horizontal',
      'size-SM-vertical',
      'size-MD-horizontal',
      'size-MD-vertical',
      'size-LG-horizontal',
      'size-LG-vertical',
      'size-XL-horizontal',
      'size-XL-vertical',
      'size-SM_2-horizontal',
      'size-SM_2-vertical',
    ].reduce((acc, curr) => ({
      ...acc,
      ...(typeof(curr) === 'string' ? getExampleTabs(curr) : curr)
    }), {})

    // add tabs to elements and set event listener to show active pannel
    for (const [tabId, tabs] of Object.entries(chiTabElements)) {
      const element = document.getElementById(tabId);
      element.tabs = tabs;

      const activeTabId = tabs[0].id;

      if (!activeTabId.includes('no-active-tab')) {
        element.activeTab = activeTabId;
      }

      element.addEventListener('chiTabChange', console.log);
    }

    // panel items
    const tabPanelItemsElement = document.querySelector('#panel-items-base');

    if (tabPanelItemsElement) {
      tabPanelItemsElement.tabs = [
        {
          label: 'Tab 1',
          id: 'panel-items-example-1',
        },
        {
          label: 'Tab 2',
          id: 'panel-items-example-2',
          children: [
            {
              label: 'Tab 2-1',
              id: 'panel-items-example-2-1',
              children: [
                {
                  label: 'Tab 2-1-1',
                  id: "panel-items-example-2-1-1"
                }
              ]
            }
          ]
        },
        {
          label: 'Tab 3',
          id: 'panel-items-example-3',
          href: 'https://lib.lumen.com/chi',
          target: '_blank'
        },
      ];
    }
  
    // visual tests
    function getVisualTabs(id) {
      let visualTabs = [
        {
          label: 'Active tab',
          id: `${id}-tab-a`
        },
        {
          label: 'Tab link',
          id: `${id}-tab-b`
        },
        {
          label: 'Tab link',
          id: `${id}-tab-c`
        },
      ];

      return id.includes('vertical') 
          ? [...visualTabs, { label: 'Tab link', id: `${id}-tab-d`, overflow: false }] 
          : visualTabs;
    }

    ['test-horizontal-flat',
     'test-horizontal-solid',
     'test-vertical-flat',
     'test-vertical-solid',
     'test-vertical-inverse-solid',
     'test-vertical-inverse-flat',
     'test-horizontal-solid-inverse',
     'test-horizontal-flat-inverse'
    ].forEach((id) => {
      const visualTabsElements = document.querySelectorAll(`.${id} chi-tabs`);
      visualTabsElements.forEach((el) => el.tabs = getVisualTabs(id));
    });
  });
