{"version":3,"names":["NAMESPACE","BUILD","allRenderFn","appendChildSlotFix","asyncLoading","asyncQueue","attachStyles","cloneNodeFix","cmpDidLoad","cmpDidRender","cmpDidUnload","cmpDidUpdate","cmpShouldUpdate","cmpWillLoad","cmpWillRender","cmpWillUpdate","connectedCallback","constructableCSS","cssAnnotations","devTools","disconnectedCallback","element","event","experimentalScopedSlotChanges","experimentalSlotFixes","formAssociated","hasRenderFn","hostListener","hostListenerTarget","hostListenerTargetBody","hostListenerTargetDocument","hostListenerTargetParent","hostListenerTargetWindow","hotModuleReplacement","hydrateClientSide","hydrateServerSide","hydratedAttribute","hydratedClass","hydratedSelectorName","initializeNextTick","invisiblePrehydration","isDebug","isDev","isTesting","lazyLoad","lifecycle","lifecycleDOMEvents","member","method","mode","modernPropertyDecls","observeAttribute","profile","prop","propBoolean","propMutable","propNumber","propString","reflect","scoped","scopedSlotTextContentFix","scriptDataOpts","shadowDelegatesFocus","shadowDom","slot","slotChildNodesFix","slotRelocation","state","style","svg","taskQueue","transformTagName","updatable","vdomAttribute","vdomClass","vdomFunctional","vdomKey","vdomListener","vdomPropOrAttr","vdomRef","vdomRender","vdomStyle","vdomText","vdomXlink","watchCallback","__defProp","Object","defineProperty","__export","target","all","name","get","enumerable","SVG_NS","HTML_NS","hostRefs","WeakMap","getHostRef","ref","registerInstance","exports","lazyInstance","hostRef","set","$lazyInstance$","registerHost","hostElement","cmpMeta","$flags$","$hostElement$","$cmpMeta$","$instanceValues$","Map","$onInstancePromise$","Promise","r","$onInstanceResolve$","$onReadyPromise$","$onReadyResolve$","isMemberInElement","elm","memberName","consoleError","e","el","console","error","cmpModules","loadModule","hmrVersionId","exportName","$tagName$","replace","bundleId","$lazyBundleId$","module","import","concat","then","importedModule","styles","HYDRATED_STYLE_ID","HYDRATED_CSS","SLOT_FB_CSS","XLINK_NS","win","window","doc","document","head","plt","$resourcesUrl$","jmp","h2","raf","requestAnimationFrame","ael","eventName","listener","opts","addEventListener","rel","removeEventListener","ce","CustomEvent","supportsShadow","BUILD6","supportsListenerOptions","supportsListenerOptions2","promiseResolve","v","resolve","supportsConstructableStylesheets","CSSStyleSheet","replaceSync","queuePending","queueDomReads","queueDomWrites","queueTask","queue","write","cb","push","nextTick","flush","consume","i2","length","performance","now","writeTask","isDef","isComplexType","o","queryNonceMetaTagContent","doc2","_a","_b","_c","querySelector","getAttribute","result_exports","err","map","ok","unwrap","unwrapErr","value","isOk","isErr","result","fn","val","newVal","updateFallbackSlotVisibility","childNodes","__childNodes","tagName","includes","getHostSlotNodes","forEach","slotNode","nodeType","getHostSlotChildNodes","hidden","_i","childNodes_1","childNode","hostName","slotName","slottedNodes","__spreadArray","node","includeSlot","nextSibling","isNodeLocatedInSlot","nodeToRelocate","createTime","fnName","uniqueTime","key","measureText","h","nodeName","vnodeData","children","arguments","child","simple","lastSimple","vNodeChildren","walk","c","Array","isArray","String","$text$","newVNode","classData_1","className","class","keys","filter","k","join","vdomFnUtils","vnode","$attrs$","$children$","$key$","$name$","tag","text","$tag$","$elm$","Host","isHost","convertToPublic","convertToPrivate","vattrs","vchildren","vkey","vname","vtag","vtext","__assign","apply","parsePropertyValue","propValue","propType","parseFloat","getElement","createEvent","flags","emit","detail","emitEvent","bubbles","composed","cancelable","ev","dispatchEvent","rootAppliedStyles","registerStyle","scopeId2","cssText","allowCS","addStyle","styleContainerNode","getScopeId","appliedStyles","styleElm","Set","has","createElement","innerHTML","nonce","$nonce$","setAttribute","preconnectLinks","querySelectorAll","referenceNode2","insertBefore","parentNode","stylesheet","adoptedStyleSheets","existingStyleContainer","prepend","append","add","endAttachStyles","getRootNode","classList","cmp","setAccessor","oldValue","newValue","isSvg","initialRender","isProp","ln","toLowerCase","oldClasses_1","parseClassList","newClasses_1","remove","removeProperty","setProperty","slice","capture","endsWith","CAPTURE_EVENT_SUFFIX","CAPTURE_EVENT_REGEX","isComplex","n","__lookupSetter__","xlink","removeAttributeNS","removeAttribute","setAttributeNS","parseClassListRegex","baseVal","split","RegExp","updateElement","oldVnode","newVnode","isSvgMode2","isInitialRender","host","oldVnodeAttrs","newVnodeAttrs","_e","sortedAttrNames","_f","_g","attrNames","attr","scopeId","contentRef","hostTagName","useNativeShadowDom","checkSlotFallbackVisibility","checkSlotRelocate","isSvgMode","createElm","oldParentVNode","newParentVNode","childIndex","newVNode2","oldVNode","createTextNode","createElementNS","BUILD19","appendChild","putBackInOriginalLocation","addRemoveSlotScopedClass","parentElm","recursive","oldSlotChildNodes","from","referenceNode","addVnodes","before","parentVNode","vnodes","startIdx","endIdx","containerElm","removeVnodes","index","nullifyVNodeRefs","updateChildren","oldCh","newCh","oldStartIdx","newStartIdx","idxInOld","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","elmToMove","isSameVnode","patch","leftVNode","rightVNode","oldChildren","newChildren","defaultHolder","textContent","data","relocateNodes","markSlotContentForRelocation","hostContentNodes","j","children_1","relocateNodeData_1","find","$nodeToRelocate$","$slotRefNode$","relocateNode","some","vNode","parent","newNode","reference","parentElement","newParent","oldParent","scopeName","contains","found","renderVdom","renderFnResults","isInitialLoad","_d","hostElm","$vnode$","rootVnode","$attrsToReflect$","propName","attribute","hasAttribute","relocateNodes_1","relocateData","orgLocationNode","relocateNodes_2","slotRefNode","parentNodeRef","insertBeforeNode","previousSibling","refNode","__parentNode","__nextSibling","attachToAncestor","ancestorComponent","$onRenderResolve$","index_1","splice","scheduleUpdate","$ancestorComponent$","dispatch","dispatchHooks","endSchedule","instance","Error","maybePromise","$queuedListeners$","methodName","safeCall","enqueue","updateComponent","isPromisey","catch","err2","__awaiter","_this","endUpdate","rc","endRender","callRender","childrenPromises","postUpdate","postUpdateComponent","render","endPostUpdate","addHydratedFlag","appDidLoad","forceUpdate","isConnected","who","documentElement","namespace","arg","BUILD20","getValue","setValue","oldVal","$members$","areBothNaN","Number","isNaN","didValueChange","$watchers$","watchMethods","watchMethodName","proxyComponent","Cstr","prototype","watchers","members","entries","memberFlags","getOwnPropertyDescriptor","origGetter","origSetter_1","this","configurable","currentValue","setterSetVal_1","args","_a2","_a3","attrNameToPropName_1","attributeChangedCallback","attrName","hasOwnProperty","BUILD22","flags2","instance_1","entry","callbackName","call","propDesc","observedAttributes","_","m","initializeComponent","CstrImport","endLoad","sent","$modeName$","isProxied","endNewInstance","fireConnectedCallback","endRegisterStyles","schedule","hostRef_1","endConnected","setContentReference","addHostEventListeners","$listeners$","contentRefElm","createComment","firstChild","disconnectInstance","hostRef_2","$rmListeners$","rmListener","delete","shadowRoot","bootstrapLazy","lazyBundles","options","endBootstrap","cmpTags","exclude","customElements2","customElements","metaCharset","dataStyles","deferredConnectedCallbacks","appLoadFallback","isBootstrapping","assign","URL","resourcesUrl","baseURI","href","hasSlotRelocation","lazyBundle","compactMeta","HostElement","_super","__extends","self","hasRegisteredEventListeners","clearTimeout","Node","componentOnReady","HTMLElement","define","sort","setTimeout","Fragment","listeners","attachParentListeners","handler","hostListenerProxy","hostListenerOpts","passive","setNonce"],"sources":["@stencil/core/internal/app-data","node_modules/@stencil/core/internal/client/index.js?app-data=conditional"],"sourcesContent":["export const NAMESPACE = 'ux-chi-ce';\nexport const BUILD = /* ux-chi-ce */ { allRenderFn: true, appendChildSlotFix: false, asyncLoading: true, asyncQueue: false, attachStyles: true, cloneNodeFix: false, cmpDidLoad: true, cmpDidRender: true, cmpDidUnload: false, cmpDidUpdate: true, cmpShouldUpdate: false, cmpWillLoad: true, cmpWillRender: false, cmpWillUpdate: true, connectedCallback: true, constructableCSS: true, cssAnnotations: true, devTools: false, disconnectedCallback: true, element: false, event: true, experimentalScopedSlotChanges: false, experimentalSlotFixes: false, formAssociated: false, hasRenderFn: true, hostListener: true, hostListenerTarget: false, hostListenerTargetBody: false, hostListenerTargetDocument: false, hostListenerTargetParent: false, hostListenerTargetWindow: false, hotModuleReplacement: false, hydrateClientSide: false, hydrateServerSide: false, hydratedAttribute: false, hydratedClass: true, hydratedSelectorName: \"hydrated\", initializeNextTick: false, invisiblePrehydration: true, isDebug: false, isDev: false, isTesting: false, lazyLoad: true, lifecycle: true, lifecycleDOMEvents: false, member: true, method: true, mode: false, modernPropertyDecls: false, observeAttribute: true, profile: false, prop: true, propBoolean: true, propMutable: true, propNumber: true, propString: true, reflect: true, scoped: true, scopedSlotTextContentFix: false, scriptDataOpts: false, shadowDelegatesFocus: false, shadowDom: false, slot: true, slotChildNodesFix: false, slotRelocation: true, state: true, style: true, svg: true, taskQueue: true, transformTagName: false, updatable: true, vdomAttribute: true, vdomClass: true, vdomFunctional: true, vdomKey: true, vdomListener: true, vdomPropOrAttr: true, vdomRef: true, vdomRender: true, vdomStyle: true, vdomText: true, vdomXlink: true, watchCallback: true };\nexport const Env = /* ux-chi-ce */ {};\n","/*\n Stencil Client Platform v4.25.1 | MIT Licensed | https://stenciljs.com\n */\nvar __defProp = Object.defineProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\n\n// src/client/client-build.ts\nimport { BUILD } from \"@stencil/core/internal/app-data\";\nvar Build = {\n  isDev: BUILD.isDev ? true : false,\n  isBrowser: true,\n  isServer: false,\n  isTesting: BUILD.isTesting ? true : false\n};\n\n// src/client/client-host-ref.ts\nimport { BUILD as BUILD3 } from \"@stencil/core/internal/app-data\";\n\n// src/utils/es2022-rewire-class-members.ts\nimport { BUILD as BUILD2 } from \"@stencil/core/internal/app-data\";\n\n// src/utils/constants.ts\nvar SVG_NS = \"http://www.w3.org/2000/svg\";\nvar HTML_NS = \"http://www.w3.org/1999/xhtml\";\n\n// src/utils/es2022-rewire-class-members.ts\nvar reWireGetterSetter = (instance, hostRef) => {\n  var _a;\n  const cmpMeta = hostRef.$cmpMeta$;\n  const members = Object.entries((_a = cmpMeta.$members$) != null ? _a : {});\n  members.map(([memberName, [memberFlags]]) => {\n    if ((BUILD2.state || BUILD2.prop) && (memberFlags & 31 /* Prop */ || memberFlags & 32 /* State */)) {\n      const ogValue = instance[memberName];\n      const ogDescriptor = Object.getOwnPropertyDescriptor(Object.getPrototypeOf(instance), memberName);\n      Object.defineProperty(instance, memberName, {\n        get() {\n          return ogDescriptor.get.call(this);\n        },\n        set(newValue) {\n          ogDescriptor.set.call(this, newValue);\n        },\n        configurable: true,\n        enumerable: true\n      });\n      instance[memberName] = hostRef.$instanceValues$.has(memberName) ? hostRef.$instanceValues$.get(memberName) : ogValue;\n    }\n  });\n};\n\n// src/client/client-host-ref.ts\nvar hostRefs = BUILD3.hotModuleReplacement ? window.__STENCIL_HOSTREFS__ || (window.__STENCIL_HOSTREFS__ = /* @__PURE__ */ new WeakMap()) : /* @__PURE__ */ new WeakMap();\nvar deleteHostRef = (ref) => hostRefs.delete(ref);\nvar getHostRef = (ref) => hostRefs.get(ref);\nvar registerInstance = (lazyInstance, hostRef) => {\n  hostRefs.set(hostRef.$lazyInstance$ = lazyInstance, hostRef);\n  if (BUILD3.modernPropertyDecls && (BUILD3.state || BUILD3.prop)) {\n    reWireGetterSetter(lazyInstance, hostRef);\n  }\n};\nvar registerHost = (hostElement, cmpMeta) => {\n  const hostRef = {\n    $flags$: 0,\n    $hostElement$: hostElement,\n    $cmpMeta$: cmpMeta,\n    $instanceValues$: /* @__PURE__ */ new Map()\n  };\n  if (BUILD3.isDev) {\n    hostRef.$renderCount$ = 0;\n  }\n  if (BUILD3.method && BUILD3.lazyLoad) {\n    hostRef.$onInstancePromise$ = new Promise((r) => hostRef.$onInstanceResolve$ = r);\n  }\n  if (BUILD3.asyncLoading) {\n    hostRef.$onReadyPromise$ = new Promise((r) => hostRef.$onReadyResolve$ = r);\n    hostElement[\"s-p\"] = [];\n    hostElement[\"s-rc\"] = [];\n  }\n  const ref = hostRefs.set(hostElement, hostRef);\n  if (!BUILD3.lazyLoad && BUILD3.modernPropertyDecls && (BUILD3.state || BUILD3.prop)) {\n    reWireGetterSetter(hostElement, hostRef);\n  }\n  return ref;\n};\nvar isMemberInElement = (elm, memberName) => memberName in elm;\n\n// src/client/client-load-module.ts\nimport { BUILD as BUILD5 } from \"@stencil/core/internal/app-data\";\n\n// src/client/client-log.ts\nimport { BUILD as BUILD4 } from \"@stencil/core/internal/app-data\";\nvar customError;\nvar consoleError = (e, el) => (customError || console.error)(e, el);\nvar STENCIL_DEV_MODE = BUILD4.isTesting ? [\"STENCIL:\"] : [\n  \"%cstencil\",\n  \"color: white;background:#4c47ff;font-weight: bold; font-size:10px; padding:2px 6px; border-radius: 5px\"\n];\nvar consoleDevError = (...m) => console.error(...STENCIL_DEV_MODE, ...m);\nvar consoleDevWarn = (...m) => console.warn(...STENCIL_DEV_MODE, ...m);\nvar consoleDevInfo = (...m) => console.info(...STENCIL_DEV_MODE, ...m);\nvar setErrorHandler = (handler) => customError = handler;\n\n// src/client/client-load-module.ts\nvar cmpModules = /* @__PURE__ */ new Map();\nvar MODULE_IMPORT_PREFIX = \"./\";\nvar loadModule = (cmpMeta, hostRef, hmrVersionId) => {\n  const exportName = cmpMeta.$tagName$.replace(/-/g, \"_\");\n  const bundleId = cmpMeta.$lazyBundleId$;\n  if (BUILD5.isDev && typeof bundleId !== \"string\") {\n    consoleDevError(\n      `Trying to lazily load component <${cmpMeta.$tagName$}> with style mode \"${hostRef.$modeName$}\", but it does not exist.`\n    );\n    return void 0;\n  } else if (!bundleId) {\n    return void 0;\n  }\n  const module = !BUILD5.hotModuleReplacement ? cmpModules.get(bundleId) : false;\n  if (module) {\n    return module[exportName];\n  }\n  /*!__STENCIL_STATIC_IMPORT_SWITCH__*/\n  return import(\n    /* @vite-ignore */\n    /* webpackInclude: /\\.entry\\.js$/ */\n    /* webpackExclude: /\\.system\\.entry\\.js$/ */\n    /* webpackMode: \"lazy\" */\n    `./${bundleId}.entry.js${BUILD5.hotModuleReplacement && hmrVersionId ? \"?s-hmr=\" + hmrVersionId : \"\"}`\n  ).then(\n    (importedModule) => {\n      if (!BUILD5.hotModuleReplacement) {\n        cmpModules.set(bundleId, importedModule);\n      }\n      return importedModule[exportName];\n    },\n    (e) => {\n      consoleError(e, hostRef.$hostElement$);\n    }\n  );\n};\n\n// src/client/client-style.ts\nvar styles = /* @__PURE__ */ new Map();\nvar modeResolutionChain = [];\n\n// src/client/client-task-queue.ts\nimport { BUILD as BUILD7 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/runtime-constants.ts\nvar CONTENT_REF_ID = \"r\";\nvar ORG_LOCATION_ID = \"o\";\nvar SLOT_NODE_ID = \"s\";\nvar TEXT_NODE_ID = \"t\";\nvar COMMENT_NODE_ID = \"c\";\nvar HYDRATE_ID = \"s-id\";\nvar HYDRATED_STYLE_ID = \"sty-id\";\nvar HYDRATE_CHILD_ID = \"c-id\";\nvar HYDRATED_CSS = \"{visibility:hidden}.hydrated{visibility:inherit}\";\nvar STENCIL_DOC_DATA = \"_stencilDocData\";\nvar DEFAULT_DOC_DATA = {\n  hostIds: 0,\n  rootLevelIds: 0,\n  staticComponents: /* @__PURE__ */ new Set()\n};\nvar SLOT_FB_CSS = \"slot-fb{display:contents}slot-fb[hidden]{display:none}\";\nvar XLINK_NS = \"http://www.w3.org/1999/xlink\";\nvar FORM_ASSOCIATED_CUSTOM_ELEMENT_CALLBACKS = [\n  \"formAssociatedCallback\",\n  \"formResetCallback\",\n  \"formDisabledCallback\",\n  \"formStateRestoreCallback\"\n];\n\n// src/client/client-window.ts\nimport { BUILD as BUILD6 } from \"@stencil/core/internal/app-data\";\nvar win = typeof window !== \"undefined\" ? window : {};\nvar doc = win.document || { head: {} };\nvar H = win.HTMLElement || class {\n};\nvar plt = {\n  $flags$: 0,\n  $resourcesUrl$: \"\",\n  jmp: (h2) => h2(),\n  raf: (h2) => requestAnimationFrame(h2),\n  ael: (el, eventName, listener, opts) => el.addEventListener(eventName, listener, opts),\n  rel: (el, eventName, listener, opts) => el.removeEventListener(eventName, listener, opts),\n  ce: (eventName, opts) => new CustomEvent(eventName, opts)\n};\nvar setPlatformHelpers = (helpers) => {\n  Object.assign(plt, helpers);\n};\nvar supportsShadow = BUILD6.shadowDom;\nvar supportsListenerOptions = /* @__PURE__ */ (() => {\n  let supportsListenerOptions2 = false;\n  try {\n    doc.addEventListener(\n      \"e\",\n      null,\n      Object.defineProperty({}, \"passive\", {\n        get() {\n          supportsListenerOptions2 = true;\n        }\n      })\n    );\n  } catch (e) {\n  }\n  return supportsListenerOptions2;\n})();\nvar promiseResolve = (v) => Promise.resolve(v);\nvar supportsConstructableStylesheets = BUILD6.constructableCSS ? /* @__PURE__ */ (() => {\n  try {\n    new CSSStyleSheet();\n    return typeof new CSSStyleSheet().replaceSync === \"function\";\n  } catch (e) {\n  }\n  return false;\n})() : false;\n\n// src/client/client-task-queue.ts\nvar queueCongestion = 0;\nvar queuePending = false;\nvar queueDomReads = [];\nvar queueDomWrites = [];\nvar queueDomWritesLow = [];\nvar queueTask = (queue, write) => (cb) => {\n  queue.push(cb);\n  if (!queuePending) {\n    queuePending = true;\n    if (write && plt.$flags$ & 4 /* queueSync */) {\n      nextTick(flush);\n    } else {\n      plt.raf(flush);\n    }\n  }\n};\nvar consume = (queue) => {\n  for (let i2 = 0; i2 < queue.length; i2++) {\n    try {\n      queue[i2](performance.now());\n    } catch (e) {\n      consoleError(e);\n    }\n  }\n  queue.length = 0;\n};\nvar consumeTimeout = (queue, timeout) => {\n  let i2 = 0;\n  let ts = 0;\n  while (i2 < queue.length && (ts = performance.now()) < timeout) {\n    try {\n      queue[i2++](ts);\n    } catch (e) {\n      consoleError(e);\n    }\n  }\n  if (i2 === queue.length) {\n    queue.length = 0;\n  } else if (i2 !== 0) {\n    queue.splice(0, i2);\n  }\n};\nvar flush = () => {\n  if (BUILD7.asyncQueue) {\n    queueCongestion++;\n  }\n  consume(queueDomReads);\n  if (BUILD7.asyncQueue) {\n    const timeout = (plt.$flags$ & 6 /* queueMask */) === 2 /* appLoaded */ ? performance.now() + 14 * Math.ceil(queueCongestion * (1 / 10)) : Infinity;\n    consumeTimeout(queueDomWrites, timeout);\n    consumeTimeout(queueDomWritesLow, timeout);\n    if (queueDomWrites.length > 0) {\n      queueDomWritesLow.push(...queueDomWrites);\n      queueDomWrites.length = 0;\n    }\n    if (queuePending = queueDomReads.length + queueDomWrites.length + queueDomWritesLow.length > 0) {\n      plt.raf(flush);\n    } else {\n      queueCongestion = 0;\n    }\n  } else {\n    consume(queueDomWrites);\n    if (queuePending = queueDomReads.length > 0) {\n      plt.raf(flush);\n    }\n  }\n};\nvar nextTick = (cb) => promiseResolve().then(cb);\nvar readTask = /* @__PURE__ */ queueTask(queueDomReads, false);\nvar writeTask = /* @__PURE__ */ queueTask(queueDomWrites, true);\n\n// src/client/index.ts\nimport { BUILD as BUILD29, Env, NAMESPACE as NAMESPACE2 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/asset-path.ts\nvar getAssetPath = (path) => {\n  const assetUrl = new URL(path, plt.$resourcesUrl$);\n  return assetUrl.origin !== win.location.origin ? assetUrl.href : assetUrl.pathname;\n};\nvar setAssetPath = (path) => plt.$resourcesUrl$ = path;\n\n// src/runtime/bootstrap-custom-element.ts\nimport { BUILD as BUILD26 } from \"@stencil/core/internal/app-data\";\n\n// src/utils/helpers.ts\nvar isDef = (v) => v != null && v !== void 0;\nvar isComplexType = (o) => {\n  o = typeof o;\n  return o === \"object\" || o === \"function\";\n};\n\n// src/utils/query-nonce-meta-tag-content.ts\nfunction queryNonceMetaTagContent(doc2) {\n  var _a, _b, _c;\n  return (_c = (_b = (_a = doc2.head) == null ? void 0 : _a.querySelector('meta[name=\"csp-nonce\"]')) == null ? void 0 : _b.getAttribute(\"content\")) != null ? _c : void 0;\n}\n\n// src/utils/result.ts\nvar result_exports = {};\n__export(result_exports, {\n  err: () => err,\n  map: () => map,\n  ok: () => ok,\n  unwrap: () => unwrap,\n  unwrapErr: () => unwrapErr\n});\nvar ok = (value) => ({\n  isOk: true,\n  isErr: false,\n  value\n});\nvar err = (value) => ({\n  isOk: false,\n  isErr: true,\n  value\n});\nfunction map(result, fn) {\n  if (result.isOk) {\n    const val = fn(result.value);\n    if (val instanceof Promise) {\n      return val.then((newVal) => ok(newVal));\n    } else {\n      return ok(val);\n    }\n  }\n  if (result.isErr) {\n    const value = result.value;\n    return err(value);\n  }\n  throw \"should never get here\";\n}\nvar unwrap = (result) => {\n  if (result.isOk) {\n    return result.value;\n  } else {\n    throw result.value;\n  }\n};\nvar unwrapErr = (result) => {\n  if (result.isErr) {\n    return result.value;\n  } else {\n    throw result.value;\n  }\n};\n\n// src/runtime/connected-callback.ts\nimport { BUILD as BUILD24 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/client-hydrate.ts\nimport { BUILD as BUILD12 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/dom-extras.ts\nimport { BUILD as BUILD9 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/slot-polyfill-utils.ts\nimport { BUILD as BUILD8 } from \"@stencil/core/internal/app-data\";\nvar updateFallbackSlotVisibility = (elm) => {\n  const childNodes = elm.__childNodes || elm.childNodes;\n  if (elm.tagName && elm.tagName.includes(\"-\") && elm[\"s-cr\"] && elm.tagName !== \"SLOT-FB\") {\n    getHostSlotNodes(childNodes, elm.tagName).forEach((slotNode) => {\n      var _a;\n      if (slotNode.nodeType === 1 /* ElementNode */ && slotNode.tagName === \"SLOT-FB\") {\n        if ((_a = getHostSlotChildNodes(slotNode, slotNode[\"s-sn\"], false)) == null ? void 0 : _a.length) {\n          slotNode.hidden = true;\n        } else {\n          slotNode.hidden = false;\n        }\n      }\n    });\n  }\n  for (const childNode of childNodes) {\n    if (childNode.nodeType === 1 /* ElementNode */ && (childNode.__childNodes || childNode.childNodes).length) {\n      updateFallbackSlotVisibility(childNode);\n    }\n  }\n};\nvar getSlottedChildNodes = (childNodes) => {\n  const result = [];\n  for (let i2 = 0; i2 < childNodes.length; i2++) {\n    const slottedNode = childNodes[i2][\"s-nr\"] || void 0;\n    if (slottedNode && slottedNode.isConnected) {\n      result.push(slottedNode);\n    }\n  }\n  return result;\n};\nfunction getHostSlotNodes(childNodes, hostName, slotName) {\n  let i2 = 0;\n  let slottedNodes = [];\n  let childNode;\n  for (; i2 < childNodes.length; i2++) {\n    childNode = childNodes[i2];\n    if (childNode[\"s-sr\"] && childNode[\"s-hn\"] === hostName && (slotName === void 0 || childNode[\"s-sn\"] === slotName)) {\n      slottedNodes.push(childNode);\n      if (typeof slotName !== \"undefined\") return slottedNodes;\n    }\n    slottedNodes = [...slottedNodes, ...getHostSlotNodes(childNode.childNodes, hostName, slotName)];\n  }\n  return slottedNodes;\n}\nvar getHostSlotChildNodes = (node, slotName, includeSlot = true) => {\n  const childNodes = [];\n  if (includeSlot && node[\"s-sr\"] || !node[\"s-sr\"]) childNodes.push(node);\n  while ((node = node.nextSibling) && node[\"s-sn\"] === slotName) {\n    childNodes.push(node);\n  }\n  return childNodes;\n};\nvar isNodeLocatedInSlot = (nodeToRelocate, slotName) => {\n  if (nodeToRelocate.nodeType === 1 /* ElementNode */) {\n    if (nodeToRelocate.getAttribute(\"slot\") === null && slotName === \"\") {\n      return true;\n    }\n    if (nodeToRelocate.getAttribute(\"slot\") === slotName) {\n      return true;\n    }\n    return false;\n  }\n  if (nodeToRelocate[\"s-sn\"] === slotName) {\n    return true;\n  }\n  return slotName === \"\";\n};\nvar addSlotRelocateNode = (newChild, slotNode, prepend, position) => {\n  let slottedNodeLocation;\n  if (newChild[\"s-ol\"] && newChild[\"s-ol\"].isConnected) {\n    slottedNodeLocation = newChild[\"s-ol\"];\n  } else {\n    slottedNodeLocation = document.createTextNode(\"\");\n    slottedNodeLocation[\"s-nr\"] = newChild;\n  }\n  if (!slotNode[\"s-cr\"] || !slotNode[\"s-cr\"].parentNode) return;\n  const parent = slotNode[\"s-cr\"].parentNode;\n  const appendMethod = prepend ? parent.__prepend || parent.prepend : parent.__appendChild || parent.appendChild;\n  if (typeof position !== \"undefined\") {\n    if (BUILD8.hydrateClientSide) {\n      slottedNodeLocation[\"s-oo\"] = position;\n      const childNodes = parent.__childNodes || parent.childNodes;\n      const slotRelocateNodes = [slottedNodeLocation];\n      childNodes.forEach((n) => {\n        if (n[\"s-nr\"]) slotRelocateNodes.push(n);\n      });\n      slotRelocateNodes.sort((a, b) => {\n        if (!a[\"s-oo\"] || a[\"s-oo\"] < b[\"s-oo\"]) return -1;\n        else if (!b[\"s-oo\"] || b[\"s-oo\"] < a[\"s-oo\"]) return 1;\n        return 0;\n      });\n      slotRelocateNodes.forEach((n) => appendMethod.call(parent, n));\n    }\n  } else {\n    appendMethod.call(parent, slottedNodeLocation);\n  }\n  newChild[\"s-ol\"] = slottedNodeLocation;\n  newChild[\"s-sh\"] = slotNode[\"s-hn\"];\n};\nvar getSlotName = (node) => node[\"s-sn\"] || node.nodeType === 1 && node.getAttribute(\"slot\") || \"\";\n\n// src/runtime/dom-extras.ts\nvar patchPseudoShadowDom = (hostElementPrototype) => {\n  patchCloneNode(hostElementPrototype);\n  patchSlotAppendChild(hostElementPrototype);\n  patchSlotAppend(hostElementPrototype);\n  patchSlotPrepend(hostElementPrototype);\n  patchSlotInsertAdjacentElement(hostElementPrototype);\n  patchSlotInsertAdjacentHTML(hostElementPrototype);\n  patchSlotInsertAdjacentText(hostElementPrototype);\n  patchInsertBefore(hostElementPrototype);\n  patchTextContent(hostElementPrototype);\n  patchChildSlotNodes(hostElementPrototype);\n  patchSlotRemoveChild(hostElementPrototype);\n};\nvar patchCloneNode = (HostElementPrototype) => {\n  const orgCloneNode = HostElementPrototype.cloneNode;\n  HostElementPrototype.cloneNode = function(deep) {\n    const srcNode = this;\n    const isShadowDom = BUILD9.shadowDom ? srcNode.shadowRoot && supportsShadow : false;\n    const clonedNode = orgCloneNode.call(srcNode, isShadowDom ? deep : false);\n    if (BUILD9.slot && !isShadowDom && deep) {\n      let i2 = 0;\n      let slotted, nonStencilNode;\n      const stencilPrivates = [\n        \"s-id\",\n        \"s-cr\",\n        \"s-lr\",\n        \"s-rc\",\n        \"s-sc\",\n        \"s-p\",\n        \"s-cn\",\n        \"s-sr\",\n        \"s-sn\",\n        \"s-hn\",\n        \"s-ol\",\n        \"s-nr\",\n        \"s-si\",\n        \"s-rf\",\n        \"s-scs\"\n      ];\n      const childNodes = this.__childNodes || this.childNodes;\n      for (; i2 < childNodes.length; i2++) {\n        slotted = childNodes[i2][\"s-nr\"];\n        nonStencilNode = stencilPrivates.every((privateField) => !childNodes[i2][privateField]);\n        if (slotted) {\n          if (BUILD9.appendChildSlotFix && clonedNode.__appendChild) {\n            clonedNode.__appendChild(slotted.cloneNode(true));\n          } else {\n            clonedNode.appendChild(slotted.cloneNode(true));\n          }\n        }\n        if (nonStencilNode) {\n          clonedNode.appendChild(childNodes[i2].cloneNode(true));\n        }\n      }\n    }\n    return clonedNode;\n  };\n};\nvar patchSlotAppendChild = (HostElementPrototype) => {\n  HostElementPrototype.__appendChild = HostElementPrototype.appendChild;\n  HostElementPrototype.appendChild = function(newChild) {\n    const slotName = newChild[\"s-sn\"] = getSlotName(newChild);\n    const slotNode = getHostSlotNodes(this.__childNodes || this.childNodes, this.tagName, slotName)[0];\n    if (slotNode) {\n      addSlotRelocateNode(newChild, slotNode);\n      const slotChildNodes = getHostSlotChildNodes(slotNode, slotName);\n      const appendAfter = slotChildNodes[slotChildNodes.length - 1];\n      const parent = intrnlCall(appendAfter, \"parentNode\");\n      let insertedNode;\n      if (parent.__insertBefore) {\n        insertedNode = parent.__insertBefore(newChild, appendAfter.nextSibling);\n      } else {\n        insertedNode = parent.insertBefore(newChild, appendAfter.nextSibling);\n      }\n      updateFallbackSlotVisibility(this);\n      return insertedNode;\n    }\n    return this.__appendChild(newChild);\n  };\n};\nvar patchSlotRemoveChild = (ElementPrototype) => {\n  ElementPrototype.__removeChild = ElementPrototype.removeChild;\n  ElementPrototype.removeChild = function(toRemove) {\n    if (toRemove && typeof toRemove[\"s-sn\"] !== \"undefined\") {\n      const childNodes = this.__childNodes || this.childNodes;\n      const slotNode = getHostSlotNodes(childNodes, this.tagName, toRemove[\"s-sn\"]);\n      if (slotNode && toRemove.isConnected) {\n        toRemove.remove();\n        updateFallbackSlotVisibility(this);\n        return;\n      }\n    }\n    return this.__removeChild(toRemove);\n  };\n};\nvar patchSlotPrepend = (HostElementPrototype) => {\n  HostElementPrototype.__prepend = HostElementPrototype.prepend;\n  HostElementPrototype.prepend = function(...newChildren) {\n    newChildren.forEach((newChild) => {\n      if (typeof newChild === \"string\") {\n        newChild = this.ownerDocument.createTextNode(newChild);\n      }\n      const slotName = newChild[\"s-sn\"] = getSlotName(newChild);\n      const childNodes = this.__childNodes || this.childNodes;\n      const slotNode = getHostSlotNodes(childNodes, this.tagName, slotName)[0];\n      if (slotNode) {\n        addSlotRelocateNode(newChild, slotNode, true);\n        const slotChildNodes = getHostSlotChildNodes(slotNode, slotName);\n        const appendAfter = slotChildNodes[0];\n        const parent = intrnlCall(appendAfter, \"parentNode\");\n        if (parent.__insertBefore) {\n          return parent.__insertBefore(newChild, intrnlCall(appendAfter, \"nextSibling\"));\n        } else {\n          return parent.insertBefore(newChild, intrnlCall(appendAfter, \"nextSibling\"));\n        }\n      }\n      if (newChild.nodeType === 1 && !!newChild.getAttribute(\"slot\")) {\n        newChild.hidden = true;\n      }\n      return HostElementPrototype.__prepend(newChild);\n    });\n  };\n};\nvar patchSlotAppend = (HostElementPrototype) => {\n  HostElementPrototype.__append = HostElementPrototype.append;\n  HostElementPrototype.append = function(...newChildren) {\n    newChildren.forEach((newChild) => {\n      if (typeof newChild === \"string\") {\n        newChild = this.ownerDocument.createTextNode(newChild);\n      }\n      this.appendChild(newChild);\n    });\n  };\n};\nvar patchSlotInsertAdjacentHTML = (HostElementPrototype) => {\n  const originalInsertAdjacentHtml = HostElementPrototype.insertAdjacentHTML;\n  HostElementPrototype.insertAdjacentHTML = function(position, text) {\n    if (position !== \"afterbegin\" && position !== \"beforeend\") {\n      return originalInsertAdjacentHtml.call(this, position, text);\n    }\n    const container = this.ownerDocument.createElement(\"_\");\n    let node;\n    container.innerHTML = text;\n    if (position === \"afterbegin\") {\n      while (node = container.firstChild) {\n        this.prepend(node);\n      }\n    } else if (position === \"beforeend\") {\n      while (node = container.firstChild) {\n        this.append(node);\n      }\n    }\n  };\n};\nvar patchSlotInsertAdjacentText = (HostElementPrototype) => {\n  HostElementPrototype.insertAdjacentText = function(position, text) {\n    this.insertAdjacentHTML(position, text);\n  };\n};\nvar patchInsertBefore = (HostElementPrototype) => {\n  const eleProto = HostElementPrototype;\n  if (eleProto.__insertBefore) return;\n  eleProto.__insertBefore = HostElementPrototype.insertBefore;\n  HostElementPrototype.insertBefore = function(newChild, currentChild) {\n    const slotName = newChild[\"s-sn\"] = getSlotName(newChild);\n    const slotNode = getHostSlotNodes(this.__childNodes, this.tagName, slotName)[0];\n    const slottedNodes = this.__childNodes ? this.childNodes : getSlottedChildNodes(this.childNodes);\n    if (slotNode) {\n      let found = false;\n      slottedNodes.forEach((childNode) => {\n        if (childNode === currentChild || currentChild === null) {\n          found = true;\n          if (currentChild === null || slotName !== currentChild[\"s-sn\"]) {\n            this.appendChild(newChild);\n            return;\n          }\n          if (slotName === currentChild[\"s-sn\"]) {\n            addSlotRelocateNode(newChild, slotNode);\n            const parent = intrnlCall(currentChild, \"parentNode\");\n            if (parent.__insertBefore) {\n              parent.__insertBefore(newChild, currentChild);\n            } else {\n              parent.insertBefore(newChild, currentChild);\n            }\n          }\n          return;\n        }\n      });\n      if (found) return newChild;\n    }\n    return this.__insertBefore(newChild, currentChild);\n  };\n};\nvar patchSlotInsertAdjacentElement = (HostElementPrototype) => {\n  const originalInsertAdjacentElement = HostElementPrototype.insertAdjacentElement;\n  HostElementPrototype.insertAdjacentElement = function(position, element) {\n    if (position !== \"afterbegin\" && position !== \"beforeend\") {\n      return originalInsertAdjacentElement.call(this, position, element);\n    }\n    if (position === \"afterbegin\") {\n      this.prepend(element);\n      return element;\n    } else if (position === \"beforeend\") {\n      this.append(element);\n      return element;\n    }\n    return element;\n  };\n};\nvar patchTextContent = (hostElementPrototype) => {\n  patchHostOriginalAccessor(\"textContent\", hostElementPrototype);\n  Object.defineProperty(hostElementPrototype, \"textContent\", {\n    get: function() {\n      let text = \"\";\n      const childNodes = this.__childNodes ? this.childNodes : getSlottedChildNodes(this.childNodes);\n      childNodes.forEach((node) => text += node.textContent || \"\");\n      return text;\n    },\n    set: function(value) {\n      const childNodes = this.__childNodes ? this.childNodes : getSlottedChildNodes(this.childNodes);\n      childNodes.forEach((node) => {\n        if (node[\"s-ol\"]) node[\"s-ol\"].remove();\n        node.remove();\n      });\n      this.insertAdjacentHTML(\"beforeend\", value);\n    }\n  });\n};\nvar patchChildSlotNodes = (elm) => {\n  class FakeNodeList extends Array {\n    item(n) {\n      return this[n];\n    }\n  }\n  patchHostOriginalAccessor(\"children\", elm);\n  Object.defineProperty(elm, \"children\", {\n    get() {\n      return this.childNodes.filter((n) => n.nodeType === 1);\n    }\n  });\n  Object.defineProperty(elm, \"childElementCount\", {\n    get() {\n      return this.children.length;\n    }\n  });\n  patchHostOriginalAccessor(\"firstChild\", elm);\n  Object.defineProperty(elm, \"firstChild\", {\n    get() {\n      return this.childNodes[0];\n    }\n  });\n  patchHostOriginalAccessor(\"lastChild\", elm);\n  Object.defineProperty(elm, \"lastChild\", {\n    get() {\n      return this.childNodes[this.childNodes.length - 1];\n    }\n  });\n  patchHostOriginalAccessor(\"childNodes\", elm);\n  Object.defineProperty(elm, \"childNodes\", {\n    get() {\n      const result = new FakeNodeList();\n      result.push(...getSlottedChildNodes(this.__childNodes));\n      return result;\n    }\n  });\n};\nvar patchSlottedNode = (node) => {\n  if (!node || node.__nextSibling || !globalThis.Node) return;\n  patchNextSibling(node);\n  patchPreviousSibling(node);\n  patchParentNode(node);\n  if (node.nodeType === Node.ELEMENT_NODE) {\n    patchNextElementSibling(node);\n    patchPreviousElementSibling(node);\n  }\n};\nvar patchNextSibling = (node) => {\n  if (!node || node.__nextSibling) return;\n  patchHostOriginalAccessor(\"nextSibling\", node);\n  Object.defineProperty(node, \"nextSibling\", {\n    get: function() {\n      var _a;\n      const parentNodes = (_a = this[\"s-ol\"]) == null ? void 0 : _a.parentNode.childNodes;\n      const index = parentNodes == null ? void 0 : parentNodes.indexOf(this);\n      if (parentNodes && index > -1) {\n        return parentNodes[index + 1];\n      }\n      return this.__nextSibling;\n    }\n  });\n};\nvar patchNextElementSibling = (element) => {\n  if (!element || element.__nextElementSibling) return;\n  patchHostOriginalAccessor(\"nextElementSibling\", element);\n  Object.defineProperty(element, \"nextElementSibling\", {\n    get: function() {\n      var _a;\n      const parentEles = (_a = this[\"s-ol\"]) == null ? void 0 : _a.parentNode.children;\n      const index = parentEles == null ? void 0 : parentEles.indexOf(this);\n      if (parentEles && index > -1) {\n        return parentEles[index + 1];\n      }\n      return this.__nextElementSibling;\n    }\n  });\n};\nvar patchPreviousSibling = (node) => {\n  if (!node || node.__previousSibling) return;\n  patchHostOriginalAccessor(\"previousSibling\", node);\n  Object.defineProperty(node, \"previousSibling\", {\n    get: function() {\n      var _a;\n      const parentNodes = (_a = this[\"s-ol\"]) == null ? void 0 : _a.parentNode.childNodes;\n      const index = parentNodes == null ? void 0 : parentNodes.indexOf(this);\n      if (parentNodes && index > -1) {\n        return parentNodes[index - 1];\n      }\n      return this.__previousSibling;\n    }\n  });\n};\nvar patchPreviousElementSibling = (element) => {\n  if (!element || element.__previousElementSibling) return;\n  patchHostOriginalAccessor(\"previousElementSibling\", element);\n  Object.defineProperty(element, \"previousElementSibling\", {\n    get: function() {\n      var _a;\n      const parentNodes = (_a = this[\"s-ol\"]) == null ? void 0 : _a.parentNode.children;\n      const index = parentNodes == null ? void 0 : parentNodes.indexOf(this);\n      if (parentNodes && index > -1) {\n        return parentNodes[index - 1];\n      }\n      return this.__previousElementSibling;\n    }\n  });\n};\nvar patchParentNode = (node) => {\n  if (!node || node.__parentNode) return;\n  patchHostOriginalAccessor(\"parentNode\", node);\n  Object.defineProperty(node, \"parentNode\", {\n    get: function() {\n      var _a;\n      return ((_a = this[\"s-ol\"]) == null ? void 0 : _a.parentNode) || this.__parentNode;\n    },\n    set: function(value) {\n      this.__parentNode = value;\n    }\n  });\n};\nvar validElementPatches = [\"children\", \"nextElementSibling\", \"previousElementSibling\"];\nvar validNodesPatches = [\n  \"childNodes\",\n  \"firstChild\",\n  \"lastChild\",\n  \"nextSibling\",\n  \"previousSibling\",\n  \"textContent\",\n  \"parentNode\"\n];\nfunction patchHostOriginalAccessor(accessorName, node) {\n  let accessor;\n  if (validElementPatches.includes(accessorName)) {\n    accessor = Object.getOwnPropertyDescriptor(Element.prototype, accessorName);\n  } else if (validNodesPatches.includes(accessorName)) {\n    accessor = Object.getOwnPropertyDescriptor(Node.prototype, accessorName);\n  }\n  if (!accessor) {\n    accessor = Object.getOwnPropertyDescriptor(node, accessorName);\n  }\n  if (accessor) Object.defineProperty(node, \"__\" + accessorName, accessor);\n}\nfunction intrnlCall(node, method) {\n  if (\"__\" + method in node) {\n    return node[\"__\" + method];\n  } else {\n    return node[method];\n  }\n}\n\n// src/runtime/profile.ts\nimport { BUILD as BUILD10 } from \"@stencil/core/internal/app-data\";\nvar i = 0;\nvar createTime = (fnName, tagName = \"\") => {\n  if (BUILD10.profile && performance.mark) {\n    const key = `st:${fnName}:${tagName}:${i++}`;\n    performance.mark(key);\n    return () => performance.measure(`[Stencil] ${fnName}() <${tagName}>`, key);\n  } else {\n    return () => {\n      return;\n    };\n  }\n};\nvar uniqueTime = (key, measureText) => {\n  if (BUILD10.profile && performance.mark) {\n    if (performance.getEntriesByName(key, \"mark\").length === 0) {\n      performance.mark(key);\n    }\n    return () => {\n      if (performance.getEntriesByName(measureText, \"measure\").length === 0) {\n        performance.measure(measureText, key);\n      }\n    };\n  } else {\n    return () => {\n      return;\n    };\n  }\n};\nvar inspect = (ref) => {\n  const hostRef = getHostRef(ref);\n  if (!hostRef) {\n    return void 0;\n  }\n  const flags = hostRef.$flags$;\n  const hostElement = hostRef.$hostElement$;\n  return {\n    renderCount: hostRef.$renderCount$,\n    flags: {\n      hasRendered: !!(flags & 2 /* hasRendered */),\n      hasConnected: !!(flags & 1 /* hasConnected */),\n      isWaitingForChildren: !!(flags & 4 /* isWaitingForChildren */),\n      isConstructingInstance: !!(flags & 8 /* isConstructingInstance */),\n      isQueuedForUpdate: !!(flags & 16 /* isQueuedForUpdate */),\n      hasInitializedComponent: !!(flags & 32 /* hasInitializedComponent */),\n      hasLoadedComponent: !!(flags & 64 /* hasLoadedComponent */),\n      isWatchReady: !!(flags & 128 /* isWatchReady */),\n      isListenReady: !!(flags & 256 /* isListenReady */),\n      needsRerender: !!(flags & 512 /* needsRerender */)\n    },\n    instanceValues: hostRef.$instanceValues$,\n    ancestorComponent: hostRef.$ancestorComponent$,\n    hostElement,\n    lazyInstance: hostRef.$lazyInstance$,\n    vnode: hostRef.$vnode$,\n    modeName: hostRef.$modeName$,\n    onReadyPromise: hostRef.$onReadyPromise$,\n    onReadyResolve: hostRef.$onReadyResolve$,\n    onInstancePromise: hostRef.$onInstancePromise$,\n    onInstanceResolve: hostRef.$onInstanceResolve$,\n    onRenderResolve: hostRef.$onRenderResolve$,\n    queuedListeners: hostRef.$queuedListeners$,\n    rmListeners: hostRef.$rmListeners$,\n    [\"s-id\"]: hostElement[\"s-id\"],\n    [\"s-cr\"]: hostElement[\"s-cr\"],\n    [\"s-lr\"]: hostElement[\"s-lr\"],\n    [\"s-p\"]: hostElement[\"s-p\"],\n    [\"s-rc\"]: hostElement[\"s-rc\"],\n    [\"s-sc\"]: hostElement[\"s-sc\"]\n  };\n};\nvar installDevTools = () => {\n  if (BUILD10.devTools) {\n    const stencil = win.stencil = win.stencil || {};\n    const originalInspect = stencil.inspect;\n    stencil.inspect = (ref) => {\n      let result = inspect(ref);\n      if (!result && typeof originalInspect === \"function\") {\n        result = originalInspect(ref);\n      }\n      return result;\n    };\n  }\n};\n\n// src/runtime/vdom/h.ts\nimport { BUILD as BUILD11 } from \"@stencil/core/internal/app-data\";\nvar h = (nodeName, vnodeData, ...children) => {\n  let child = null;\n  let key = null;\n  let slotName = null;\n  let simple = false;\n  let lastSimple = false;\n  const vNodeChildren = [];\n  const walk = (c) => {\n    for (let i2 = 0; i2 < c.length; i2++) {\n      child = c[i2];\n      if (Array.isArray(child)) {\n        walk(child);\n      } else if (child != null && typeof child !== \"boolean\") {\n        if (simple = typeof nodeName !== \"function\" && !isComplexType(child)) {\n          child = String(child);\n        } else if (BUILD11.isDev && typeof nodeName !== \"function\" && child.$flags$ === void 0) {\n          consoleDevError(`vNode passed as children has unexpected type.\nMake sure it's using the correct h() function.\nEmpty objects can also be the cause, look for JSX comments that became objects.`);\n        }\n        if (simple && lastSimple) {\n          vNodeChildren[vNodeChildren.length - 1].$text$ += child;\n        } else {\n          vNodeChildren.push(simple ? newVNode(null, child) : child);\n        }\n        lastSimple = simple;\n      }\n    }\n  };\n  walk(children);\n  if (vnodeData) {\n    if (BUILD11.isDev && nodeName === \"input\") {\n      validateInputProperties(vnodeData);\n    }\n    if (BUILD11.vdomKey && vnodeData.key) {\n      key = vnodeData.key;\n    }\n    if (BUILD11.slotRelocation && vnodeData.name) {\n      slotName = vnodeData.name;\n    }\n    if (BUILD11.vdomClass) {\n      const classData = vnodeData.className || vnodeData.class;\n      if (classData) {\n        vnodeData.class = typeof classData !== \"object\" ? classData : Object.keys(classData).filter((k) => classData[k]).join(\" \");\n      }\n    }\n  }\n  if (BUILD11.isDev && vNodeChildren.some(isHost)) {\n    consoleDevError(`The <Host> must be the single root component. Make sure:\n- You are NOT using hostData() and <Host> in the same component.\n- <Host> is used once, and it's the single root component of the render() function.`);\n  }\n  if (BUILD11.vdomFunctional && typeof nodeName === \"function\") {\n    return nodeName(\n      vnodeData === null ? {} : vnodeData,\n      vNodeChildren,\n      vdomFnUtils\n    );\n  }\n  const vnode = newVNode(nodeName, null);\n  vnode.$attrs$ = vnodeData;\n  if (vNodeChildren.length > 0) {\n    vnode.$children$ = vNodeChildren;\n  }\n  if (BUILD11.vdomKey) {\n    vnode.$key$ = key;\n  }\n  if (BUILD11.slotRelocation) {\n    vnode.$name$ = slotName;\n  }\n  return vnode;\n};\nvar newVNode = (tag, text) => {\n  const vnode = {\n    $flags$: 0,\n    $tag$: tag,\n    $text$: text,\n    $elm$: null,\n    $children$: null\n  };\n  if (BUILD11.vdomAttribute) {\n    vnode.$attrs$ = null;\n  }\n  if (BUILD11.vdomKey) {\n    vnode.$key$ = null;\n  }\n  if (BUILD11.slotRelocation) {\n    vnode.$name$ = null;\n  }\n  return vnode;\n};\nvar Host = {};\nvar isHost = (node) => node && node.$tag$ === Host;\nvar vdomFnUtils = {\n  forEach: (children, cb) => children.map(convertToPublic).forEach(cb),\n  map: (children, cb) => children.map(convertToPublic).map(cb).map(convertToPrivate)\n};\nvar convertToPublic = (node) => ({\n  vattrs: node.$attrs$,\n  vchildren: node.$children$,\n  vkey: node.$key$,\n  vname: node.$name$,\n  vtag: node.$tag$,\n  vtext: node.$text$\n});\nvar convertToPrivate = (node) => {\n  if (typeof node.vtag === \"function\") {\n    const vnodeData = { ...node.vattrs };\n    if (node.vkey) {\n      vnodeData.key = node.vkey;\n    }\n    if (node.vname) {\n      vnodeData.name = node.vname;\n    }\n    return h(node.vtag, vnodeData, ...node.vchildren || []);\n  }\n  const vnode = newVNode(node.vtag, node.vtext);\n  vnode.$attrs$ = node.vattrs;\n  vnode.$children$ = node.vchildren;\n  vnode.$key$ = node.vkey;\n  vnode.$name$ = node.vname;\n  return vnode;\n};\nvar validateInputProperties = (inputElm) => {\n  const props = Object.keys(inputElm);\n  const value = props.indexOf(\"value\");\n  if (value === -1) {\n    return;\n  }\n  const typeIndex = props.indexOf(\"type\");\n  const minIndex = props.indexOf(\"min\");\n  const maxIndex = props.indexOf(\"max\");\n  const stepIndex = props.indexOf(\"step\");\n  if (value < typeIndex || value < minIndex || value < maxIndex || value < stepIndex) {\n    consoleDevWarn(`The \"value\" prop of <input> should be set after \"min\", \"max\", \"type\" and \"step\"`);\n  }\n};\n\n// src/runtime/client-hydrate.ts\nvar initializeClientHydrate = (hostElm, tagName, hostId, hostRef) => {\n  const endHydrate = createTime(\"hydrateClient\", tagName);\n  const shadowRoot = hostElm.shadowRoot;\n  const childRenderNodes = [];\n  const slotNodes = [];\n  const slottedNodes = [];\n  const shadowRootNodes = BUILD12.shadowDom && shadowRoot ? [] : null;\n  const vnode = newVNode(tagName, null);\n  vnode.$elm$ = hostElm;\n  let scopeId2;\n  if (BUILD12.scoped) {\n    const cmpMeta = hostRef.$cmpMeta$;\n    if (cmpMeta && cmpMeta.$flags$ & 10 /* needsScopedEncapsulation */ && hostElm[\"s-sc\"]) {\n      scopeId2 = hostElm[\"s-sc\"];\n      hostElm.classList.add(scopeId2 + \"-h\");\n    } else if (hostElm[\"s-sc\"]) {\n      delete hostElm[\"s-sc\"];\n    }\n  }\n  if (!plt.$orgLocNodes$) {\n    initializeDocumentHydrate(doc.body, plt.$orgLocNodes$ = /* @__PURE__ */ new Map());\n  }\n  hostElm[HYDRATE_ID] = hostId;\n  hostElm.removeAttribute(HYDRATE_ID);\n  hostRef.$vnode$ = clientHydrate(\n    vnode,\n    childRenderNodes,\n    slotNodes,\n    shadowRootNodes,\n    hostElm,\n    hostElm,\n    hostId,\n    slottedNodes\n  );\n  let crIndex = 0;\n  const crLength = childRenderNodes.length;\n  let childRenderNode;\n  for (crIndex; crIndex < crLength; crIndex++) {\n    childRenderNode = childRenderNodes[crIndex];\n    const orgLocationId = childRenderNode.$hostId$ + \".\" + childRenderNode.$nodeId$;\n    const orgLocationNode = plt.$orgLocNodes$.get(orgLocationId);\n    const node = childRenderNode.$elm$;\n    if (!shadowRoot) {\n      node[\"s-hn\"] = tagName.toUpperCase();\n      if (childRenderNode.$tag$ === \"slot\") {\n        node[\"s-cr\"] = hostElm[\"s-cr\"];\n      }\n    }\n    if (childRenderNode.$tag$ === \"slot\") {\n      if (childRenderNode.$children$) {\n        childRenderNode.$flags$ |= 2 /* isSlotFallback */;\n        if (!childRenderNode.$elm$.childNodes.length) {\n          childRenderNode.$children$.forEach((c) => {\n            childRenderNode.$elm$.appendChild(c.$elm$);\n          });\n        }\n      } else {\n        childRenderNode.$flags$ |= 1 /* isSlotReference */;\n      }\n    }\n    if (orgLocationNode && orgLocationNode.isConnected) {\n      if (shadowRoot && orgLocationNode[\"s-en\"] === \"\") {\n        orgLocationNode.parentNode.insertBefore(node, orgLocationNode.nextSibling);\n      }\n      orgLocationNode.parentNode.removeChild(orgLocationNode);\n      if (!shadowRoot) {\n        node[\"s-oo\"] = parseInt(childRenderNode.$nodeId$);\n      }\n    }\n    plt.$orgLocNodes$.delete(orgLocationId);\n  }\n  const hosts = [];\n  const snLen = slottedNodes.length;\n  let snIndex = 0;\n  let slotGroup;\n  let snGroupIdx;\n  let snGroupLen;\n  let slottedItem;\n  for (snIndex; snIndex < snLen; snIndex++) {\n    slotGroup = slottedNodes[snIndex];\n    if (!slotGroup || !slotGroup.length) continue;\n    snGroupLen = slotGroup.length;\n    snGroupIdx = 0;\n    for (snGroupIdx; snGroupIdx < snGroupLen; snGroupIdx++) {\n      slottedItem = slotGroup[snGroupIdx];\n      if (!hosts[slottedItem.hostId]) {\n        hosts[slottedItem.hostId] = plt.$orgLocNodes$.get(slottedItem.hostId);\n      }\n      if (!hosts[slottedItem.hostId]) continue;\n      const hostEle = hosts[slottedItem.hostId];\n      if (!hostEle.shadowRoot || !shadowRoot) {\n        slottedItem.slot[\"s-cr\"] = hostEle[\"s-cr\"];\n        if (!slottedItem.slot[\"s-cr\"] && hostEle.shadowRoot) {\n          slottedItem.slot[\"s-cr\"] = hostEle;\n        } else {\n          slottedItem.slot[\"s-cr\"] = (hostEle.__childNodes || hostEle.childNodes)[0];\n        }\n        addSlotRelocateNode(slottedItem.node, slottedItem.slot, false, slottedItem.node[\"s-oo\"]);\n        if (BUILD12.experimentalSlotFixes) {\n          patchSlottedNode(slottedItem.node);\n        }\n      }\n      if (hostEle.shadowRoot && slottedItem.node.parentElement !== hostEle) {\n        hostEle.appendChild(slottedItem.node);\n      }\n    }\n  }\n  if (BUILD12.scoped && scopeId2 && slotNodes.length) {\n    slotNodes.forEach((slot) => {\n      slot.$elm$.parentElement.classList.add(scopeId2 + \"-s\");\n    });\n  }\n  if (BUILD12.shadowDom && shadowRoot) {\n    let rnIdex = 0;\n    const rnLen = shadowRootNodes.length;\n    for (rnIdex; rnIdex < rnLen; rnIdex++) {\n      shadowRoot.appendChild(shadowRootNodes[rnIdex]);\n    }\n    Array.from(hostElm.childNodes).forEach((node) => {\n      if (node.nodeType === 8 /* CommentNode */ && typeof node[\"s-sn\"] !== \"string\") {\n        node.parentNode.removeChild(node);\n      }\n    });\n  }\n  hostRef.$hostElement$ = hostElm;\n  endHydrate();\n};\nvar clientHydrate = (parentVNode, childRenderNodes, slotNodes, shadowRootNodes, hostElm, node, hostId, slottedNodes = []) => {\n  let childNodeType;\n  let childIdSplt;\n  let childVNode;\n  let i2;\n  const scopeId2 = hostElm[\"s-sc\"];\n  if (node.nodeType === 1 /* ElementNode */) {\n    childNodeType = node.getAttribute(HYDRATE_CHILD_ID);\n    if (childNodeType) {\n      childIdSplt = childNodeType.split(\".\");\n      if (childIdSplt[0] === hostId || childIdSplt[0] === \"0\") {\n        childVNode = createSimpleVNode({\n          $flags$: 0,\n          $hostId$: childIdSplt[0],\n          $nodeId$: childIdSplt[1],\n          $depth$: childIdSplt[2],\n          $index$: childIdSplt[3],\n          $tag$: node.tagName.toLowerCase(),\n          $elm$: node,\n          // If we don't add the initial classes to the VNode, the first `vdom-render.ts` patch\n          // won't try to reconcile them. Classes set on the node will be blown away.\n          $attrs$: { class: node.className || \"\" }\n        });\n        childRenderNodes.push(childVNode);\n        node.removeAttribute(HYDRATE_CHILD_ID);\n        if (!parentVNode.$children$) {\n          parentVNode.$children$ = [];\n        }\n        if (BUILD12.scoped && scopeId2) {\n          node[\"s-si\"] = scopeId2;\n          childVNode.$attrs$.class += \" \" + scopeId2;\n        }\n        const slotName = childVNode.$elm$.getAttribute(\"s-sn\");\n        if (typeof slotName === \"string\") {\n          if (childVNode.$tag$ === \"slot-fb\") {\n            addSlot(\n              slotName,\n              childIdSplt[2],\n              childVNode,\n              node,\n              parentVNode,\n              childRenderNodes,\n              slotNodes,\n              shadowRootNodes,\n              slottedNodes\n            );\n            if (BUILD12.scoped && scopeId2) {\n              node.classList.add(scopeId2);\n            }\n          }\n          childVNode.$elm$[\"s-sn\"] = slotName;\n          childVNode.$elm$.removeAttribute(\"s-sn\");\n        }\n        if (childVNode.$index$ !== void 0) {\n          parentVNode.$children$[childVNode.$index$] = childVNode;\n        }\n        parentVNode = childVNode;\n        if (shadowRootNodes && childVNode.$depth$ === \"0\") {\n          shadowRootNodes[childVNode.$index$] = childVNode.$elm$;\n        }\n      }\n    }\n    if (node.shadowRoot) {\n      for (i2 = node.shadowRoot.childNodes.length - 1; i2 >= 0; i2--) {\n        clientHydrate(\n          parentVNode,\n          childRenderNodes,\n          slotNodes,\n          shadowRootNodes,\n          hostElm,\n          node.shadowRoot.childNodes[i2],\n          hostId,\n          slottedNodes\n        );\n      }\n    }\n    const nonShadowNodes = node.__childNodes || node.childNodes;\n    for (i2 = nonShadowNodes.length - 1; i2 >= 0; i2--) {\n      clientHydrate(\n        parentVNode,\n        childRenderNodes,\n        slotNodes,\n        shadowRootNodes,\n        hostElm,\n        nonShadowNodes[i2],\n        hostId,\n        slottedNodes\n      );\n    }\n  } else if (node.nodeType === 8 /* CommentNode */) {\n    childIdSplt = node.nodeValue.split(\".\");\n    if (childIdSplt[1] === hostId || childIdSplt[1] === \"0\") {\n      childNodeType = childIdSplt[0];\n      childVNode = createSimpleVNode({\n        $hostId$: childIdSplt[1],\n        $nodeId$: childIdSplt[2],\n        $depth$: childIdSplt[3],\n        $index$: childIdSplt[4] || \"0\",\n        $elm$: node,\n        $attrs$: null,\n        $children$: null,\n        $key$: null,\n        $name$: null,\n        $tag$: null,\n        $text$: null\n      });\n      if (childNodeType === TEXT_NODE_ID) {\n        childVNode.$elm$ = node.nextSibling;\n        if (childVNode.$elm$ && childVNode.$elm$.nodeType === 3 /* TextNode */) {\n          childVNode.$text$ = childVNode.$elm$.textContent;\n          childRenderNodes.push(childVNode);\n          node.remove();\n          if (hostId === childVNode.$hostId$) {\n            if (!parentVNode.$children$) {\n              parentVNode.$children$ = [];\n            }\n            parentVNode.$children$[childVNode.$index$] = childVNode;\n          }\n          if (shadowRootNodes && childVNode.$depth$ === \"0\") {\n            shadowRootNodes[childVNode.$index$] = childVNode.$elm$;\n          }\n        }\n      } else if (childNodeType === COMMENT_NODE_ID) {\n        childVNode.$elm$ = node.nextSibling;\n        if (childVNode.$elm$ && childVNode.$elm$.nodeType === 8 /* CommentNode */) {\n          childRenderNodes.push(childVNode);\n          node.remove();\n        }\n      } else if (childVNode.$hostId$ === hostId) {\n        if (childNodeType === SLOT_NODE_ID) {\n          const slotName = node[\"s-sn\"] = childIdSplt[5] || \"\";\n          addSlot(\n            slotName,\n            childIdSplt[2],\n            childVNode,\n            node,\n            parentVNode,\n            childRenderNodes,\n            slotNodes,\n            shadowRootNodes,\n            slottedNodes\n          );\n        } else if (childNodeType === CONTENT_REF_ID) {\n          if (BUILD12.shadowDom && shadowRootNodes) {\n            node.remove();\n          } else if (BUILD12.slotRelocation) {\n            hostElm[\"s-cr\"] = node;\n            node[\"s-cn\"] = true;\n          }\n        }\n      }\n    }\n  } else if (parentVNode && parentVNode.$tag$ === \"style\") {\n    const vnode = newVNode(null, node.textContent);\n    vnode.$elm$ = node;\n    vnode.$index$ = \"0\";\n    parentVNode.$children$ = [vnode];\n  }\n  return parentVNode;\n};\nvar initializeDocumentHydrate = (node, orgLocNodes) => {\n  if (node.nodeType === 1 /* ElementNode */) {\n    const componentId = node[HYDRATE_ID] || node.getAttribute(HYDRATE_ID);\n    if (componentId) {\n      orgLocNodes.set(componentId, node);\n    }\n    let i2 = 0;\n    if (node.shadowRoot) {\n      for (; i2 < node.shadowRoot.childNodes.length; i2++) {\n        initializeDocumentHydrate(node.shadowRoot.childNodes[i2], orgLocNodes);\n      }\n    }\n    const nonShadowNodes = node.__childNodes || node.childNodes;\n    for (i2 = 0; i2 < nonShadowNodes.length; i2++) {\n      initializeDocumentHydrate(nonShadowNodes[i2], orgLocNodes);\n    }\n  } else if (node.nodeType === 8 /* CommentNode */) {\n    const childIdSplt = node.nodeValue.split(\".\");\n    if (childIdSplt[0] === ORG_LOCATION_ID) {\n      orgLocNodes.set(childIdSplt[1] + \".\" + childIdSplt[2], node);\n      node.nodeValue = \"\";\n      node[\"s-en\"] = childIdSplt[3];\n    }\n  }\n};\nvar createSimpleVNode = (vnode) => {\n  const defaultVNode = {\n    $flags$: 0,\n    $hostId$: null,\n    $nodeId$: null,\n    $depth$: null,\n    $index$: \"0\",\n    $elm$: null,\n    $attrs$: null,\n    $children$: null,\n    $key$: null,\n    $name$: null,\n    $tag$: null,\n    $text$: null\n  };\n  return { ...defaultVNode, ...vnode };\n};\nfunction addSlot(slotName, slotId, childVNode, node, parentVNode, childRenderNodes, slotNodes, shadowRootNodes, slottedNodes) {\n  node[\"s-sr\"] = true;\n  childVNode.$name$ = slotName || null;\n  childVNode.$tag$ = \"slot\";\n  const parentNodeId = (parentVNode == null ? void 0 : parentVNode.$elm$) ? parentVNode.$elm$[\"s-id\"] || parentVNode.$elm$.getAttribute(\"s-id\") : \"\";\n  if (BUILD12.shadowDom && shadowRootNodes) {\n    const slot = childVNode.$elm$ = doc.createElement(childVNode.$tag$);\n    if (childVNode.$name$) {\n      childVNode.$elm$.setAttribute(\"name\", slotName);\n    }\n    if (parentNodeId && parentNodeId !== childVNode.$hostId$) {\n      parentVNode.$elm$.insertBefore(slot, parentVNode.$elm$.children[0]);\n    } else {\n      node.parentNode.insertBefore(childVNode.$elm$, node);\n    }\n    addSlottedNodes(slottedNodes, slotId, slotName, node, childVNode.$hostId$);\n    node.remove();\n    if (childVNode.$depth$ === \"0\") {\n      shadowRootNodes[childVNode.$index$] = childVNode.$elm$;\n    }\n  } else {\n    const slot = childVNode.$elm$;\n    const shouldMove = parentNodeId && parentNodeId !== childVNode.$hostId$ && parentVNode.$elm$.shadowRoot;\n    addSlottedNodes(slottedNodes, slotId, slotName, node, shouldMove ? parentNodeId : childVNode.$hostId$);\n    if (shouldMove) {\n      parentVNode.$elm$.insertBefore(slot, parentVNode.$elm$.children[0]);\n    }\n    childRenderNodes.push(childVNode);\n  }\n  slotNodes.push(childVNode);\n  if (!parentVNode.$children$) {\n    parentVNode.$children$ = [];\n  }\n  parentVNode.$children$[childVNode.$index$] = childVNode;\n}\nvar addSlottedNodes = (slottedNodes, slotNodeId, slotName, slotNode, hostId) => {\n  let slottedNode = slotNode.nextSibling;\n  slottedNodes[slotNodeId] = slottedNodes[slotNodeId] || [];\n  while (slottedNode && ((slottedNode[\"getAttribute\"] && slottedNode.getAttribute(\"slot\") || slottedNode[\"s-sn\"]) === slotName || slotName === \"\" && !slottedNode[\"s-sn\"] && (slottedNode.nodeType === 8 /* CommentNode */ && slottedNode.nodeValue.indexOf(\".\") !== 1 || slottedNode.nodeType === 3 /* TextNode */))) {\n    slottedNode[\"s-sn\"] = slotName;\n    slottedNodes[slotNodeId].push({ slot: slotNode, node: slottedNode, hostId });\n    slottedNode = slottedNode.nextSibling;\n  }\n};\n\n// src/runtime/initialize-component.ts\nimport { BUILD as BUILD23 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/mode.ts\nvar computeMode = (elm) => modeResolutionChain.map((h2) => h2(elm)).find((m) => !!m);\nvar setMode = (handler) => modeResolutionChain.push(handler);\nvar getMode = (ref) => getHostRef(ref).$modeName$;\n\n// src/runtime/proxy-component.ts\nimport { BUILD as BUILD22 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/set-value.ts\nimport { BUILD as BUILD21 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/parse-property-value.ts\nimport { BUILD as BUILD13 } from \"@stencil/core/internal/app-data\";\nvar parsePropertyValue = (propValue, propType) => {\n  if (propValue != null && !isComplexType(propValue)) {\n    if (BUILD13.propBoolean && propType & 4 /* Boolean */) {\n      return propValue === \"false\" ? false : propValue === \"\" || !!propValue;\n    }\n    if (BUILD13.propNumber && propType & 2 /* Number */) {\n      return parseFloat(propValue);\n    }\n    if (BUILD13.propString && propType & 1 /* String */) {\n      return String(propValue);\n    }\n    return propValue;\n  }\n  return propValue;\n};\n\n// src/runtime/update-component.ts\nimport { BUILD as BUILD20, NAMESPACE } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/event-emitter.ts\nimport { BUILD as BUILD15 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/element.ts\nimport { BUILD as BUILD14 } from \"@stencil/core/internal/app-data\";\nvar getElement = (ref) => BUILD14.lazyLoad ? getHostRef(ref).$hostElement$ : ref;\n\n// src/runtime/event-emitter.ts\nvar createEvent = (ref, name, flags) => {\n  const elm = getElement(ref);\n  return {\n    emit: (detail) => {\n      if (BUILD15.isDev && !elm.isConnected) {\n        consoleDevWarn(`The \"${name}\" event was emitted, but the dispatcher node is no longer connected to the dom.`);\n      }\n      return emitEvent(elm, name, {\n        bubbles: !!(flags & 4 /* Bubbles */),\n        composed: !!(flags & 2 /* Composed */),\n        cancelable: !!(flags & 1 /* Cancellable */),\n        detail\n      });\n    }\n  };\n};\nvar emitEvent = (elm, name, opts) => {\n  const ev = plt.ce(name, opts);\n  elm.dispatchEvent(ev);\n  return ev;\n};\n\n// src/runtime/styles.ts\nimport { BUILD as BUILD16 } from \"@stencil/core/internal/app-data\";\nvar rootAppliedStyles = /* @__PURE__ */ new WeakMap();\nvar registerStyle = (scopeId2, cssText, allowCS) => {\n  let style = styles.get(scopeId2);\n  if (supportsConstructableStylesheets && allowCS) {\n    style = style || new CSSStyleSheet();\n    if (typeof style === \"string\") {\n      style = cssText;\n    } else {\n      style.replaceSync(cssText);\n    }\n  } else {\n    style = cssText;\n  }\n  styles.set(scopeId2, style);\n};\nvar addStyle = (styleContainerNode, cmpMeta, mode) => {\n  var _a;\n  const scopeId2 = getScopeId(cmpMeta, mode);\n  const style = styles.get(scopeId2);\n  if (!BUILD16.attachStyles) {\n    return scopeId2;\n  }\n  styleContainerNode = styleContainerNode.nodeType === 11 /* DocumentFragment */ ? styleContainerNode : doc;\n  if (style) {\n    if (typeof style === \"string\") {\n      styleContainerNode = styleContainerNode.head || styleContainerNode;\n      let appliedStyles = rootAppliedStyles.get(styleContainerNode);\n      let styleElm;\n      if (!appliedStyles) {\n        rootAppliedStyles.set(styleContainerNode, appliedStyles = /* @__PURE__ */ new Set());\n      }\n      if (!appliedStyles.has(scopeId2)) {\n        if (BUILD16.hydrateClientSide && styleContainerNode.host && (styleElm = styleContainerNode.querySelector(`[${HYDRATED_STYLE_ID}=\"${scopeId2}\"]`))) {\n          styleElm.innerHTML = style;\n        } else {\n          styleElm = document.querySelector(`[${HYDRATED_STYLE_ID}=\"${scopeId2}\"]`) || doc.createElement(\"style\");\n          styleElm.innerHTML = style;\n          const nonce = (_a = plt.$nonce$) != null ? _a : queryNonceMetaTagContent(doc);\n          if (nonce != null) {\n            styleElm.setAttribute(\"nonce\", nonce);\n          }\n          if ((BUILD16.hydrateServerSide || BUILD16.hotModuleReplacement) && cmpMeta.$flags$ & 2 /* scopedCssEncapsulation */) {\n            styleElm.setAttribute(HYDRATED_STYLE_ID, scopeId2);\n          }\n          if (!(cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */)) {\n            if (styleContainerNode.nodeName === \"HEAD\") {\n              const preconnectLinks = styleContainerNode.querySelectorAll(\"link[rel=preconnect]\");\n              const referenceNode2 = preconnectLinks.length > 0 ? preconnectLinks[preconnectLinks.length - 1].nextSibling : styleContainerNode.querySelector(\"style\");\n              styleContainerNode.insertBefore(\n                styleElm,\n                (referenceNode2 == null ? void 0 : referenceNode2.parentNode) === styleContainerNode ? referenceNode2 : null\n              );\n            } else if (\"host\" in styleContainerNode) {\n              if (supportsConstructableStylesheets) {\n                const stylesheet = new CSSStyleSheet();\n                stylesheet.replaceSync(style);\n                styleContainerNode.adoptedStyleSheets = [stylesheet, ...styleContainerNode.adoptedStyleSheets];\n              } else {\n                const existingStyleContainer = styleContainerNode.querySelector(\"style\");\n                if (existingStyleContainer) {\n                  existingStyleContainer.innerHTML = style + existingStyleContainer.innerHTML;\n                } else {\n                  styleContainerNode.prepend(styleElm);\n                }\n              }\n            } else {\n              styleContainerNode.append(styleElm);\n            }\n          }\n          if (cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */ && styleContainerNode.nodeName !== \"HEAD\") {\n            styleContainerNode.insertBefore(styleElm, null);\n          }\n        }\n        if (cmpMeta.$flags$ & 4 /* hasSlotRelocation */) {\n          styleElm.innerHTML += SLOT_FB_CSS;\n        }\n        if (appliedStyles) {\n          appliedStyles.add(scopeId2);\n        }\n      }\n    } else if (BUILD16.constructableCSS && !styleContainerNode.adoptedStyleSheets.includes(style)) {\n      styleContainerNode.adoptedStyleSheets = [...styleContainerNode.adoptedStyleSheets, style];\n    }\n  }\n  return scopeId2;\n};\nvar attachStyles = (hostRef) => {\n  const cmpMeta = hostRef.$cmpMeta$;\n  const elm = hostRef.$hostElement$;\n  const flags = cmpMeta.$flags$;\n  const endAttachStyles = createTime(\"attachStyles\", cmpMeta.$tagName$);\n  const scopeId2 = addStyle(\n    BUILD16.shadowDom && supportsShadow && elm.shadowRoot ? elm.shadowRoot : elm.getRootNode(),\n    cmpMeta,\n    hostRef.$modeName$\n  );\n  if ((BUILD16.shadowDom || BUILD16.scoped) && BUILD16.cssAnnotations && flags & 10 /* needsScopedEncapsulation */ && flags & 2 /* scopedCssEncapsulation */) {\n    elm[\"s-sc\"] = scopeId2;\n    elm.classList.add(scopeId2 + \"-h\");\n  }\n  endAttachStyles();\n};\nvar getScopeId = (cmp, mode) => \"sc-\" + (BUILD16.mode && mode && cmp.$flags$ & 32 /* hasMode */ ? cmp.$tagName$ + \"-\" + mode : cmp.$tagName$);\n\n// src/runtime/vdom/vdom-render.ts\nimport { BUILD as BUILD19 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/vdom/update-element.ts\nimport { BUILD as BUILD18 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/vdom/set-accessor.ts\nimport { BUILD as BUILD17 } from \"@stencil/core/internal/app-data\";\nvar setAccessor = (elm, memberName, oldValue, newValue, isSvg, flags, initialRender) => {\n  if (oldValue !== newValue) {\n    let isProp = isMemberInElement(elm, memberName);\n    let ln = memberName.toLowerCase();\n    if (BUILD17.vdomClass && memberName === \"class\") {\n      const classList = elm.classList;\n      const oldClasses = parseClassList(oldValue);\n      let newClasses = parseClassList(newValue);\n      if (BUILD17.hydrateClientSide && elm[\"s-si\"] && initialRender) {\n        newClasses.push(elm[\"s-si\"]);\n        oldClasses.forEach((c) => {\n          if (c.startsWith(elm[\"s-si\"])) newClasses.push(c);\n        });\n        newClasses = [...new Set(newClasses)];\n        classList.add(...newClasses);\n      } else {\n        classList.remove(...oldClasses.filter((c) => c && !newClasses.includes(c)));\n        classList.add(...newClasses.filter((c) => c && !oldClasses.includes(c)));\n      }\n    } else if (BUILD17.vdomStyle && memberName === \"style\") {\n      if (BUILD17.updatable) {\n        for (const prop in oldValue) {\n          if (!newValue || newValue[prop] == null) {\n            if (!BUILD17.hydrateServerSide && prop.includes(\"-\")) {\n              elm.style.removeProperty(prop);\n            } else {\n              elm.style[prop] = \"\";\n            }\n          }\n        }\n      }\n      for (const prop in newValue) {\n        if (!oldValue || newValue[prop] !== oldValue[prop]) {\n          if (!BUILD17.hydrateServerSide && prop.includes(\"-\")) {\n            elm.style.setProperty(prop, newValue[prop]);\n          } else {\n            elm.style[prop] = newValue[prop];\n          }\n        }\n      }\n    } else if (BUILD17.vdomKey && memberName === \"key\") {\n    } else if (BUILD17.vdomRef && memberName === \"ref\") {\n      if (newValue) {\n        newValue(elm);\n      }\n    } else if (BUILD17.vdomListener && (BUILD17.lazyLoad ? !isProp : !elm.__lookupSetter__(memberName)) && memberName[0] === \"o\" && memberName[1] === \"n\") {\n      if (memberName[2] === \"-\") {\n        memberName = memberName.slice(3);\n      } else if (isMemberInElement(win, ln)) {\n        memberName = ln.slice(2);\n      } else {\n        memberName = ln[2] + memberName.slice(3);\n      }\n      if (oldValue || newValue) {\n        const capture = memberName.endsWith(CAPTURE_EVENT_SUFFIX);\n        memberName = memberName.replace(CAPTURE_EVENT_REGEX, \"\");\n        if (oldValue) {\n          plt.rel(elm, memberName, oldValue, capture);\n        }\n        if (newValue) {\n          plt.ael(elm, memberName, newValue, capture);\n        }\n      }\n    } else if (BUILD17.vdomPropOrAttr) {\n      const isComplex = isComplexType(newValue);\n      if ((isProp || isComplex && newValue !== null) && !isSvg) {\n        try {\n          if (!elm.tagName.includes(\"-\")) {\n            const n = newValue == null ? \"\" : newValue;\n            if (memberName === \"list\") {\n              isProp = false;\n            } else if (oldValue == null || elm[memberName] != n) {\n              if (typeof elm.__lookupSetter__(memberName) === \"function\") {\n                elm[memberName] = n;\n              } else {\n                elm.setAttribute(memberName, n);\n              }\n            }\n          } else if (elm[memberName] !== newValue) {\n            elm[memberName] = newValue;\n          }\n        } catch (e) {\n        }\n      }\n      let xlink = false;\n      if (BUILD17.vdomXlink) {\n        if (ln !== (ln = ln.replace(/^xlink\\:?/, \"\"))) {\n          memberName = ln;\n          xlink = true;\n        }\n      }\n      if (newValue == null || newValue === false) {\n        if (newValue !== false || elm.getAttribute(memberName) === \"\") {\n          if (BUILD17.vdomXlink && xlink) {\n            elm.removeAttributeNS(XLINK_NS, memberName);\n          } else {\n            elm.removeAttribute(memberName);\n          }\n        }\n      } else if ((!isProp || flags & 4 /* isHost */ || isSvg) && !isComplex) {\n        newValue = newValue === true ? \"\" : newValue;\n        if (BUILD17.vdomXlink && xlink) {\n          elm.setAttributeNS(XLINK_NS, memberName, newValue);\n        } else {\n          elm.setAttribute(memberName, newValue);\n        }\n      }\n    }\n  }\n};\nvar parseClassListRegex = /\\s/;\nvar parseClassList = (value) => {\n  if (typeof value === \"object\" && value && \"baseVal\" in value) {\n    value = value.baseVal;\n  }\n  if (!value || typeof value !== \"string\") {\n    return [];\n  }\n  return value.split(parseClassListRegex);\n};\nvar CAPTURE_EVENT_SUFFIX = \"Capture\";\nvar CAPTURE_EVENT_REGEX = new RegExp(CAPTURE_EVENT_SUFFIX + \"$\");\n\n// src/runtime/vdom/update-element.ts\nvar updateElement = (oldVnode, newVnode, isSvgMode2, isInitialRender) => {\n  const elm = newVnode.$elm$.nodeType === 11 /* DocumentFragment */ && newVnode.$elm$.host ? newVnode.$elm$.host : newVnode.$elm$;\n  const oldVnodeAttrs = oldVnode && oldVnode.$attrs$ || {};\n  const newVnodeAttrs = newVnode.$attrs$ || {};\n  if (BUILD18.updatable) {\n    for (const memberName of sortedAttrNames(Object.keys(oldVnodeAttrs))) {\n      if (!(memberName in newVnodeAttrs)) {\n        setAccessor(\n          elm,\n          memberName,\n          oldVnodeAttrs[memberName],\n          void 0,\n          isSvgMode2,\n          newVnode.$flags$,\n          isInitialRender\n        );\n      }\n    }\n  }\n  for (const memberName of sortedAttrNames(Object.keys(newVnodeAttrs))) {\n    setAccessor(\n      elm,\n      memberName,\n      oldVnodeAttrs[memberName],\n      newVnodeAttrs[memberName],\n      isSvgMode2,\n      newVnode.$flags$,\n      isInitialRender\n    );\n  }\n};\nfunction sortedAttrNames(attrNames) {\n  return attrNames.includes(\"ref\") ? (\n    // we need to sort these to ensure that `'ref'` is the last attr\n    [...attrNames.filter((attr) => attr !== \"ref\"), \"ref\"]\n  ) : (\n    // no need to sort, return the original array\n    attrNames\n  );\n}\n\n// src/runtime/vdom/vdom-render.ts\nvar scopeId;\nvar contentRef;\nvar hostTagName;\nvar useNativeShadowDom = false;\nvar checkSlotFallbackVisibility = false;\nvar checkSlotRelocate = false;\nvar isSvgMode = false;\nvar createElm = (oldParentVNode, newParentVNode, childIndex) => {\n  var _a;\n  const newVNode2 = newParentVNode.$children$[childIndex];\n  let i2 = 0;\n  let elm;\n  let childNode;\n  let oldVNode;\n  if (BUILD19.slotRelocation && !useNativeShadowDom) {\n    checkSlotRelocate = true;\n    if (newVNode2.$tag$ === \"slot\") {\n      newVNode2.$flags$ |= newVNode2.$children$ ? (\n        // slot element has fallback content\n        // still create an element that \"mocks\" the slot element\n        2 /* isSlotFallback */\n      ) : (\n        // slot element does not have fallback content\n        // create an html comment we'll use to always reference\n        // where actual slot content should sit next to\n        1 /* isSlotReference */\n      );\n    }\n  }\n  if (BUILD19.isDev && newVNode2.$elm$) {\n    consoleDevError(\n      `The JSX ${newVNode2.$text$ !== null ? `\"${newVNode2.$text$}\" text` : `\"${newVNode2.$tag$}\" element`} node should not be shared within the same renderer. The renderer caches element lookups in order to improve performance. However, a side effect from this is that the exact same JSX node should not be reused. For more information please see https://stenciljs.com/docs/templating-jsx#avoid-shared-jsx-nodes`\n    );\n  }\n  if (BUILD19.vdomText && newVNode2.$text$ !== null) {\n    elm = newVNode2.$elm$ = doc.createTextNode(newVNode2.$text$);\n  } else if (BUILD19.slotRelocation && newVNode2.$flags$ & 1 /* isSlotReference */) {\n    elm = newVNode2.$elm$ = BUILD19.isDebug || BUILD19.hydrateServerSide ? slotReferenceDebugNode(newVNode2) : doc.createTextNode(\"\");\n  } else {\n    if (BUILD19.svg && !isSvgMode) {\n      isSvgMode = newVNode2.$tag$ === \"svg\";\n    }\n    elm = newVNode2.$elm$ = BUILD19.svg ? doc.createElementNS(\n      isSvgMode ? SVG_NS : HTML_NS,\n      !useNativeShadowDom && BUILD19.slotRelocation && newVNode2.$flags$ & 2 /* isSlotFallback */ ? \"slot-fb\" : newVNode2.$tag$\n    ) : doc.createElement(\n      !useNativeShadowDom && BUILD19.slotRelocation && newVNode2.$flags$ & 2 /* isSlotFallback */ ? \"slot-fb\" : newVNode2.$tag$\n    );\n    if (BUILD19.svg && isSvgMode && newVNode2.$tag$ === \"foreignObject\") {\n      isSvgMode = false;\n    }\n    if (BUILD19.vdomAttribute) {\n      updateElement(null, newVNode2, isSvgMode);\n    }\n    if (BUILD19.scoped && isDef(scopeId) && elm[\"s-si\"] !== scopeId) {\n      elm.classList.add(elm[\"s-si\"] = scopeId);\n    }\n    if (newVNode2.$children$) {\n      for (i2 = 0; i2 < newVNode2.$children$.length; ++i2) {\n        childNode = createElm(oldParentVNode, newVNode2, i2);\n        if (childNode) {\n          elm.appendChild(childNode);\n        }\n      }\n    }\n    if (BUILD19.svg) {\n      if (newVNode2.$tag$ === \"svg\") {\n        isSvgMode = false;\n      } else if (elm.tagName === \"foreignObject\") {\n        isSvgMode = true;\n      }\n    }\n  }\n  elm[\"s-hn\"] = hostTagName;\n  if (BUILD19.slotRelocation) {\n    if (newVNode2.$flags$ & (2 /* isSlotFallback */ | 1 /* isSlotReference */)) {\n      elm[\"s-sr\"] = true;\n      elm[\"s-cr\"] = contentRef;\n      elm[\"s-sn\"] = newVNode2.$name$ || \"\";\n      elm[\"s-rf\"] = (_a = newVNode2.$attrs$) == null ? void 0 : _a.ref;\n      oldVNode = oldParentVNode && oldParentVNode.$children$ && oldParentVNode.$children$[childIndex];\n      if (oldVNode && oldVNode.$tag$ === newVNode2.$tag$ && oldParentVNode.$elm$) {\n        if (BUILD19.experimentalSlotFixes) {\n          relocateToHostRoot(oldParentVNode.$elm$);\n        } else {\n          putBackInOriginalLocation(oldParentVNode.$elm$, false);\n        }\n      }\n      if (BUILD19.scoped) {\n        addRemoveSlotScopedClass(contentRef, elm, newParentVNode.$elm$, oldParentVNode == null ? void 0 : oldParentVNode.$elm$);\n      }\n    }\n  }\n  return elm;\n};\nvar relocateToHostRoot = (parentElm) => {\n  plt.$flags$ |= 1 /* isTmpDisconnected */;\n  const host = parentElm.closest(hostTagName.toLowerCase());\n  if (host != null) {\n    const contentRefNode = Array.from(host.__childNodes || host.childNodes).find(\n      (ref) => ref[\"s-cr\"]\n    );\n    const childNodeArray = Array.from(\n      parentElm.__childNodes || parentElm.childNodes\n    );\n    for (const childNode of contentRefNode ? childNodeArray.reverse() : childNodeArray) {\n      if (childNode[\"s-sh\"] != null) {\n        insertBefore(host, childNode, contentRefNode != null ? contentRefNode : null);\n        childNode[\"s-sh\"] = void 0;\n        checkSlotRelocate = true;\n      }\n    }\n  }\n  plt.$flags$ &= ~1 /* isTmpDisconnected */;\n};\nvar putBackInOriginalLocation = (parentElm, recursive) => {\n  plt.$flags$ |= 1 /* isTmpDisconnected */;\n  const oldSlotChildNodes = Array.from(parentElm.__childNodes || parentElm.childNodes);\n  if (parentElm[\"s-sr\"] && BUILD19.experimentalSlotFixes) {\n    let node = parentElm;\n    while (node = node.nextSibling) {\n      if (node && node[\"s-sn\"] === parentElm[\"s-sn\"] && node[\"s-sh\"] === hostTagName) {\n        oldSlotChildNodes.push(node);\n      }\n    }\n  }\n  for (let i2 = oldSlotChildNodes.length - 1; i2 >= 0; i2--) {\n    const childNode = oldSlotChildNodes[i2];\n    if (childNode[\"s-hn\"] !== hostTagName && childNode[\"s-ol\"]) {\n      insertBefore(referenceNode(childNode).parentNode, childNode, referenceNode(childNode));\n      childNode[\"s-ol\"].remove();\n      childNode[\"s-ol\"] = void 0;\n      childNode[\"s-sh\"] = void 0;\n      checkSlotRelocate = true;\n    }\n    if (recursive) {\n      putBackInOriginalLocation(childNode, recursive);\n    }\n  }\n  plt.$flags$ &= ~1 /* isTmpDisconnected */;\n};\nvar addVnodes = (parentElm, before, parentVNode, vnodes, startIdx, endIdx) => {\n  let containerElm = BUILD19.slotRelocation && parentElm[\"s-cr\"] && parentElm[\"s-cr\"].parentNode || parentElm;\n  let childNode;\n  if (BUILD19.shadowDom && containerElm.shadowRoot && containerElm.tagName === hostTagName) {\n    containerElm = containerElm.shadowRoot;\n  }\n  for (; startIdx <= endIdx; ++startIdx) {\n    if (vnodes[startIdx]) {\n      childNode = createElm(null, parentVNode, startIdx);\n      if (childNode) {\n        vnodes[startIdx].$elm$ = childNode;\n        insertBefore(containerElm, childNode, BUILD19.slotRelocation ? referenceNode(before) : before);\n      }\n    }\n  }\n};\nvar removeVnodes = (vnodes, startIdx, endIdx) => {\n  for (let index = startIdx; index <= endIdx; ++index) {\n    const vnode = vnodes[index];\n    if (vnode) {\n      const elm = vnode.$elm$;\n      nullifyVNodeRefs(vnode);\n      if (elm) {\n        if (BUILD19.slotRelocation) {\n          checkSlotFallbackVisibility = true;\n          if (elm[\"s-ol\"]) {\n            elm[\"s-ol\"].remove();\n          } else {\n            putBackInOriginalLocation(elm, true);\n          }\n        }\n        elm.remove();\n      }\n    }\n  }\n};\nvar updateChildren = (parentElm, oldCh, newVNode2, newCh, isInitialRender = false) => {\n  let oldStartIdx = 0;\n  let newStartIdx = 0;\n  let idxInOld = 0;\n  let i2 = 0;\n  let oldEndIdx = oldCh.length - 1;\n  let oldStartVnode = oldCh[0];\n  let oldEndVnode = oldCh[oldEndIdx];\n  let newEndIdx = newCh.length - 1;\n  let newStartVnode = newCh[0];\n  let newEndVnode = newCh[newEndIdx];\n  let node;\n  let elmToMove;\n  while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n    if (oldStartVnode == null) {\n      oldStartVnode = oldCh[++oldStartIdx];\n    } else if (oldEndVnode == null) {\n      oldEndVnode = oldCh[--oldEndIdx];\n    } else if (newStartVnode == null) {\n      newStartVnode = newCh[++newStartIdx];\n    } else if (newEndVnode == null) {\n      newEndVnode = newCh[--newEndIdx];\n    } else if (isSameVnode(oldStartVnode, newStartVnode, isInitialRender)) {\n      patch(oldStartVnode, newStartVnode, isInitialRender);\n      oldStartVnode = oldCh[++oldStartIdx];\n      newStartVnode = newCh[++newStartIdx];\n    } else if (isSameVnode(oldEndVnode, newEndVnode, isInitialRender)) {\n      patch(oldEndVnode, newEndVnode, isInitialRender);\n      oldEndVnode = oldCh[--oldEndIdx];\n      newEndVnode = newCh[--newEndIdx];\n    } else if (isSameVnode(oldStartVnode, newEndVnode, isInitialRender)) {\n      if (BUILD19.slotRelocation && (oldStartVnode.$tag$ === \"slot\" || newEndVnode.$tag$ === \"slot\")) {\n        putBackInOriginalLocation(oldStartVnode.$elm$.parentNode, false);\n      }\n      patch(oldStartVnode, newEndVnode, isInitialRender);\n      insertBefore(parentElm, oldStartVnode.$elm$, oldEndVnode.$elm$.nextSibling);\n      oldStartVnode = oldCh[++oldStartIdx];\n      newEndVnode = newCh[--newEndIdx];\n    } else if (isSameVnode(oldEndVnode, newStartVnode, isInitialRender)) {\n      if (BUILD19.slotRelocation && (oldStartVnode.$tag$ === \"slot\" || newEndVnode.$tag$ === \"slot\")) {\n        putBackInOriginalLocation(oldEndVnode.$elm$.parentNode, false);\n      }\n      patch(oldEndVnode, newStartVnode, isInitialRender);\n      insertBefore(parentElm, oldEndVnode.$elm$, oldStartVnode.$elm$);\n      oldEndVnode = oldCh[--oldEndIdx];\n      newStartVnode = newCh[++newStartIdx];\n    } else {\n      idxInOld = -1;\n      if (BUILD19.vdomKey) {\n        for (i2 = oldStartIdx; i2 <= oldEndIdx; ++i2) {\n          if (oldCh[i2] && oldCh[i2].$key$ !== null && oldCh[i2].$key$ === newStartVnode.$key$) {\n            idxInOld = i2;\n            break;\n          }\n        }\n      }\n      if (BUILD19.vdomKey && idxInOld >= 0) {\n        elmToMove = oldCh[idxInOld];\n        if (elmToMove.$tag$ !== newStartVnode.$tag$) {\n          node = createElm(oldCh && oldCh[newStartIdx], newVNode2, idxInOld);\n        } else {\n          patch(elmToMove, newStartVnode, isInitialRender);\n          oldCh[idxInOld] = void 0;\n          node = elmToMove.$elm$;\n        }\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        node = createElm(oldCh && oldCh[newStartIdx], newVNode2, newStartIdx);\n        newStartVnode = newCh[++newStartIdx];\n      }\n      if (node) {\n        if (BUILD19.slotRelocation) {\n          insertBefore(\n            referenceNode(oldStartVnode.$elm$).parentNode,\n            node,\n            referenceNode(oldStartVnode.$elm$)\n          );\n        } else {\n          insertBefore(oldStartVnode.$elm$.parentNode, node, oldStartVnode.$elm$);\n        }\n      }\n    }\n  }\n  if (oldStartIdx > oldEndIdx) {\n    addVnodes(\n      parentElm,\n      newCh[newEndIdx + 1] == null ? null : newCh[newEndIdx + 1].$elm$,\n      newVNode2,\n      newCh,\n      newStartIdx,\n      newEndIdx\n    );\n  } else if (BUILD19.updatable && newStartIdx > newEndIdx) {\n    removeVnodes(oldCh, oldStartIdx, oldEndIdx);\n  }\n};\nvar isSameVnode = (leftVNode, rightVNode, isInitialRender = false) => {\n  if (leftVNode.$tag$ === rightVNode.$tag$) {\n    if (BUILD19.slotRelocation && leftVNode.$tag$ === \"slot\") {\n      return leftVNode.$name$ === rightVNode.$name$;\n    }\n    if (BUILD19.vdomKey && !isInitialRender) {\n      return leftVNode.$key$ === rightVNode.$key$;\n    }\n    if (isInitialRender && !leftVNode.$key$ && rightVNode.$key$) {\n      leftVNode.$key$ = rightVNode.$key$;\n    }\n    return true;\n  }\n  return false;\n};\nvar referenceNode = (node) => node && node[\"s-ol\"] || node;\nvar patch = (oldVNode, newVNode2, isInitialRender = false) => {\n  const elm = newVNode2.$elm$ = oldVNode.$elm$;\n  const oldChildren = oldVNode.$children$;\n  const newChildren = newVNode2.$children$;\n  const tag = newVNode2.$tag$;\n  const text = newVNode2.$text$;\n  let defaultHolder;\n  if (!BUILD19.vdomText || text === null) {\n    if (BUILD19.svg) {\n      isSvgMode = tag === \"svg\" ? true : tag === \"foreignObject\" ? false : isSvgMode;\n    }\n    if (BUILD19.vdomAttribute || BUILD19.reflect) {\n      if (BUILD19.slot && tag === \"slot\" && !useNativeShadowDom) {\n        if (BUILD19.experimentalSlotFixes && oldVNode.$name$ !== newVNode2.$name$) {\n          newVNode2.$elm$[\"s-sn\"] = newVNode2.$name$ || \"\";\n          relocateToHostRoot(newVNode2.$elm$.parentElement);\n        }\n      } else {\n        updateElement(oldVNode, newVNode2, isSvgMode, isInitialRender);\n      }\n    }\n    if (BUILD19.updatable && oldChildren !== null && newChildren !== null) {\n      updateChildren(elm, oldChildren, newVNode2, newChildren, isInitialRender);\n    } else if (newChildren !== null) {\n      if (BUILD19.updatable && BUILD19.vdomText && oldVNode.$text$ !== null) {\n        elm.textContent = \"\";\n      }\n      addVnodes(elm, null, newVNode2, newChildren, 0, newChildren.length - 1);\n    } else if (\n      // don't do this on initial render as it can cause non-hydrated content to be removed\n      !isInitialRender && BUILD19.updatable && oldChildren !== null\n    ) {\n      removeVnodes(oldChildren, 0, oldChildren.length - 1);\n    }\n    if (BUILD19.svg && isSvgMode && tag === \"svg\") {\n      isSvgMode = false;\n    }\n  } else if (BUILD19.vdomText && BUILD19.slotRelocation && (defaultHolder = elm[\"s-cr\"])) {\n    defaultHolder.parentNode.textContent = text;\n  } else if (BUILD19.vdomText && oldVNode.$text$ !== text) {\n    elm.data = text;\n  }\n};\nvar relocateNodes = [];\nvar markSlotContentForRelocation = (elm) => {\n  let node;\n  let hostContentNodes;\n  let j;\n  const children = elm.__childNodes || elm.childNodes;\n  for (const childNode of children) {\n    if (childNode[\"s-sr\"] && (node = childNode[\"s-cr\"]) && node.parentNode) {\n      hostContentNodes = node.parentNode.__childNodes || node.parentNode.childNodes;\n      const slotName = childNode[\"s-sn\"];\n      for (j = hostContentNodes.length - 1; j >= 0; j--) {\n        node = hostContentNodes[j];\n        if (!node[\"s-cn\"] && !node[\"s-nr\"] && node[\"s-hn\"] !== childNode[\"s-hn\"] && (!BUILD19.experimentalSlotFixes || !node[\"s-sh\"] || node[\"s-sh\"] !== childNode[\"s-hn\"])) {\n          if (isNodeLocatedInSlot(node, slotName)) {\n            let relocateNodeData = relocateNodes.find((r) => r.$nodeToRelocate$ === node);\n            checkSlotFallbackVisibility = true;\n            node[\"s-sn\"] = node[\"s-sn\"] || slotName;\n            if (relocateNodeData) {\n              relocateNodeData.$nodeToRelocate$[\"s-sh\"] = childNode[\"s-hn\"];\n              relocateNodeData.$slotRefNode$ = childNode;\n            } else {\n              node[\"s-sh\"] = childNode[\"s-hn\"];\n              relocateNodes.push({\n                $slotRefNode$: childNode,\n                $nodeToRelocate$: node\n              });\n            }\n            if (node[\"s-sr\"]) {\n              relocateNodes.map((relocateNode) => {\n                if (isNodeLocatedInSlot(relocateNode.$nodeToRelocate$, node[\"s-sn\"])) {\n                  relocateNodeData = relocateNodes.find((r) => r.$nodeToRelocate$ === node);\n                  if (relocateNodeData && !relocateNode.$slotRefNode$) {\n                    relocateNode.$slotRefNode$ = relocateNodeData.$slotRefNode$;\n                  }\n                }\n              });\n            }\n          } else if (!relocateNodes.some((r) => r.$nodeToRelocate$ === node)) {\n            relocateNodes.push({\n              $nodeToRelocate$: node\n            });\n          }\n        }\n      }\n    }\n    if (childNode.nodeType === 1 /* ElementNode */) {\n      markSlotContentForRelocation(childNode);\n    }\n  }\n};\nvar nullifyVNodeRefs = (vNode) => {\n  if (BUILD19.vdomRef) {\n    vNode.$attrs$ && vNode.$attrs$.ref && vNode.$attrs$.ref(null);\n    vNode.$children$ && vNode.$children$.map(nullifyVNodeRefs);\n  }\n};\nvar insertBefore = (parent, newNode, reference) => {\n  if (BUILD19.scoped && typeof newNode[\"s-sn\"] === \"string\" && !!newNode[\"s-sr\"] && !!newNode[\"s-cr\"]) {\n    addRemoveSlotScopedClass(newNode[\"s-cr\"], newNode, parent, newNode.parentElement);\n  } else if (BUILD19.experimentalSlotFixes && typeof newNode[\"s-sn\"] === \"string\") {\n    if (parent.getRootNode().nodeType !== 11 /* DOCUMENT_FRAGMENT_NODE */) {\n      patchParentNode(newNode);\n    }\n    return parent.insertBefore(newNode, reference);\n  }\n  if (BUILD19.experimentalSlotFixes && parent.__insertBefore) {\n    return parent.__insertBefore(newNode, reference);\n  } else {\n    return parent == null ? void 0 : parent.insertBefore(newNode, reference);\n  }\n};\nfunction addRemoveSlotScopedClass(reference, slotNode, newParent, oldParent) {\n  var _a;\n  let scopeId2;\n  if (reference && typeof slotNode[\"s-sn\"] === \"string\" && !!slotNode[\"s-sr\"] && reference.parentNode && reference.parentNode[\"s-sc\"] && (scopeId2 = slotNode[\"s-si\"] || reference.parentNode[\"s-sc\"])) {\n    const scopeName = slotNode[\"s-sn\"];\n    const hostName = slotNode[\"s-hn\"];\n    (_a = newParent.classList) == null ? void 0 : _a.add(scopeId2 + \"-s\");\n    if (oldParent && oldParent.classList.contains(scopeId2 + \"-s\")) {\n      let child = (oldParent.__childNodes || oldParent.childNodes)[0];\n      let found = false;\n      while (child) {\n        if (child[\"s-sn\"] !== scopeName && child[\"s-hn\"] === hostName && !!child[\"s-sr\"]) {\n          found = true;\n          break;\n        }\n        child = child.nextSibling;\n      }\n      if (!found) oldParent.classList.remove(scopeId2 + \"-s\");\n    }\n  }\n}\nvar renderVdom = (hostRef, renderFnResults, isInitialLoad = false) => {\n  var _a, _b, _c, _d, _e;\n  const hostElm = hostRef.$hostElement$;\n  const cmpMeta = hostRef.$cmpMeta$;\n  const oldVNode = hostRef.$vnode$ || newVNode(null, null);\n  const rootVnode = isHost(renderFnResults) ? renderFnResults : h(null, null, renderFnResults);\n  hostTagName = hostElm.tagName;\n  if (BUILD19.isDev && Array.isArray(renderFnResults) && renderFnResults.some(isHost)) {\n    throw new Error(`The <Host> must be the single root component.\nLooks like the render() function of \"${hostTagName.toLowerCase()}\" is returning an array that contains the <Host>.\n\nThe render() function should look like this instead:\n\nrender() {\n  // Do not return an array\n  return (\n    <Host>{content}</Host>\n  );\n}\n  `);\n  }\n  if (BUILD19.reflect && cmpMeta.$attrsToReflect$) {\n    rootVnode.$attrs$ = rootVnode.$attrs$ || {};\n    cmpMeta.$attrsToReflect$.map(\n      ([propName, attribute]) => rootVnode.$attrs$[attribute] = hostElm[propName]\n    );\n  }\n  if (isInitialLoad && rootVnode.$attrs$) {\n    for (const key of Object.keys(rootVnode.$attrs$)) {\n      if (hostElm.hasAttribute(key) && ![\"key\", \"ref\", \"style\", \"class\"].includes(key)) {\n        rootVnode.$attrs$[key] = hostElm[key];\n      }\n    }\n  }\n  rootVnode.$tag$ = null;\n  rootVnode.$flags$ |= 4 /* isHost */;\n  hostRef.$vnode$ = rootVnode;\n  rootVnode.$elm$ = oldVNode.$elm$ = BUILD19.shadowDom ? hostElm.shadowRoot || hostElm : hostElm;\n  if (BUILD19.scoped || BUILD19.shadowDom) {\n    scopeId = hostElm[\"s-sc\"];\n  }\n  useNativeShadowDom = supportsShadow && (cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */) !== 0;\n  if (BUILD19.slotRelocation) {\n    contentRef = hostElm[\"s-cr\"];\n    checkSlotFallbackVisibility = false;\n  }\n  patch(oldVNode, rootVnode, isInitialLoad);\n  if (BUILD19.slotRelocation) {\n    plt.$flags$ |= 1 /* isTmpDisconnected */;\n    if (checkSlotRelocate) {\n      markSlotContentForRelocation(rootVnode.$elm$);\n      for (const relocateData of relocateNodes) {\n        const nodeToRelocate = relocateData.$nodeToRelocate$;\n        if (!nodeToRelocate[\"s-ol\"]) {\n          const orgLocationNode = BUILD19.isDebug || BUILD19.hydrateServerSide ? originalLocationDebugNode(nodeToRelocate) : doc.createTextNode(\"\");\n          orgLocationNode[\"s-nr\"] = nodeToRelocate;\n          insertBefore(nodeToRelocate.parentNode, nodeToRelocate[\"s-ol\"] = orgLocationNode, nodeToRelocate);\n        }\n      }\n      for (const relocateData of relocateNodes) {\n        const nodeToRelocate = relocateData.$nodeToRelocate$;\n        const slotRefNode = relocateData.$slotRefNode$;\n        if (slotRefNode) {\n          const parentNodeRef = slotRefNode.parentNode;\n          let insertBeforeNode = slotRefNode.nextSibling;\n          if (!BUILD19.hydrateServerSide && (!BUILD19.experimentalSlotFixes || insertBeforeNode && insertBeforeNode.nodeType === 1 /* ElementNode */)) {\n            let orgLocationNode = (_a = nodeToRelocate[\"s-ol\"]) == null ? void 0 : _a.previousSibling;\n            while (orgLocationNode) {\n              let refNode = (_b = orgLocationNode[\"s-nr\"]) != null ? _b : null;\n              if (refNode && refNode[\"s-sn\"] === nodeToRelocate[\"s-sn\"] && parentNodeRef === (refNode.__parentNode || refNode.parentNode)) {\n                refNode = refNode.nextSibling;\n                while (refNode === nodeToRelocate || (refNode == null ? void 0 : refNode[\"s-sr\"])) {\n                  refNode = refNode == null ? void 0 : refNode.nextSibling;\n                }\n                if (!refNode || !refNode[\"s-nr\"]) {\n                  insertBeforeNode = refNode;\n                  break;\n                }\n              }\n              orgLocationNode = orgLocationNode.previousSibling;\n            }\n          }\n          const parent = nodeToRelocate.__parentNode || nodeToRelocate.parentNode;\n          const nextSibling = nodeToRelocate.__nextSibling || nodeToRelocate.nextSibling;\n          if (!insertBeforeNode && parentNodeRef !== parent || nextSibling !== insertBeforeNode) {\n            if (nodeToRelocate !== insertBeforeNode) {\n              if (!BUILD19.experimentalSlotFixes && !nodeToRelocate[\"s-hn\"] && nodeToRelocate[\"s-ol\"]) {\n                nodeToRelocate[\"s-hn\"] = nodeToRelocate[\"s-ol\"].parentNode.nodeName;\n              }\n              insertBefore(parentNodeRef, nodeToRelocate, insertBeforeNode);\n              if (nodeToRelocate.nodeType === 1 /* ElementNode */ && nodeToRelocate.tagName !== \"SLOT-FB\") {\n                nodeToRelocate.hidden = (_c = nodeToRelocate[\"s-ih\"]) != null ? _c : false;\n              }\n            }\n          }\n          nodeToRelocate && typeof slotRefNode[\"s-rf\"] === \"function\" && slotRefNode[\"s-rf\"](nodeToRelocate);\n        } else {\n          if (nodeToRelocate.nodeType === 1 /* ElementNode */) {\n            if (isInitialLoad) {\n              nodeToRelocate[\"s-ih\"] = (_d = nodeToRelocate.hidden) != null ? _d : false;\n            }\n            nodeToRelocate.hidden = true;\n          }\n        }\n      }\n    }\n    if (checkSlotFallbackVisibility) {\n      updateFallbackSlotVisibility(rootVnode.$elm$);\n    }\n    plt.$flags$ &= ~1 /* isTmpDisconnected */;\n    relocateNodes.length = 0;\n  }\n  if (BUILD19.experimentalScopedSlotChanges && cmpMeta.$flags$ & 2 /* scopedCssEncapsulation */) {\n    const children = rootVnode.$elm$.__childNodes || rootVnode.$elm$.childNodes;\n    for (const childNode of children) {\n      if (childNode[\"s-hn\"] !== hostTagName && !childNode[\"s-sh\"]) {\n        if (isInitialLoad && childNode[\"s-ih\"] == null) {\n          childNode[\"s-ih\"] = (_e = childNode.hidden) != null ? _e : false;\n        }\n        childNode.hidden = true;\n      }\n    }\n  }\n  contentRef = void 0;\n};\nvar slotReferenceDebugNode = (slotVNode) => doc.createComment(\n  `<slot${slotVNode.$name$ ? ' name=\"' + slotVNode.$name$ + '\"' : \"\"}> (host=${hostTagName.toLowerCase()})`\n);\nvar originalLocationDebugNode = (nodeToRelocate) => doc.createComment(\n  `org-location for ` + (nodeToRelocate.localName ? `<${nodeToRelocate.localName}> (host=${nodeToRelocate[\"s-hn\"]})` : `[${nodeToRelocate.textContent}]`)\n);\n\n// src/runtime/update-component.ts\nvar attachToAncestor = (hostRef, ancestorComponent) => {\n  if (BUILD20.asyncLoading && ancestorComponent && !hostRef.$onRenderResolve$ && ancestorComponent[\"s-p\"]) {\n    const index = ancestorComponent[\"s-p\"].push(\n      new Promise(\n        (r) => hostRef.$onRenderResolve$ = () => {\n          ancestorComponent[\"s-p\"].splice(index - 1, 1);\n          r();\n        }\n      )\n    );\n  }\n};\nvar scheduleUpdate = (hostRef, isInitialLoad) => {\n  if (BUILD20.taskQueue && BUILD20.updatable) {\n    hostRef.$flags$ |= 16 /* isQueuedForUpdate */;\n  }\n  if (BUILD20.asyncLoading && hostRef.$flags$ & 4 /* isWaitingForChildren */) {\n    hostRef.$flags$ |= 512 /* needsRerender */;\n    return;\n  }\n  attachToAncestor(hostRef, hostRef.$ancestorComponent$);\n  const dispatch = () => dispatchHooks(hostRef, isInitialLoad);\n  return BUILD20.taskQueue ? writeTask(dispatch) : dispatch();\n};\nvar dispatchHooks = (hostRef, isInitialLoad) => {\n  const elm = hostRef.$hostElement$;\n  const endSchedule = createTime(\"scheduleUpdate\", hostRef.$cmpMeta$.$tagName$);\n  const instance = BUILD20.lazyLoad ? hostRef.$lazyInstance$ : elm;\n  if (!instance) {\n    throw new Error(\n      `Can't render component <${elm.tagName.toLowerCase()} /> with invalid Stencil runtime! Make sure this imported component is compiled with a \\`externalRuntime: true\\` flag. For more information, please refer to https://stenciljs.com/docs/custom-elements#externalruntime`\n    );\n  }\n  let maybePromise;\n  if (isInitialLoad) {\n    if (BUILD20.lazyLoad && BUILD20.hostListener) {\n      hostRef.$flags$ |= 256 /* isListenReady */;\n      if (hostRef.$queuedListeners$) {\n        hostRef.$queuedListeners$.map(([methodName, event]) => safeCall(instance, methodName, event, elm));\n        hostRef.$queuedListeners$ = void 0;\n      }\n    }\n    emitLifecycleEvent(elm, \"componentWillLoad\");\n    if (BUILD20.cmpWillLoad) {\n      maybePromise = safeCall(instance, \"componentWillLoad\", void 0, elm);\n    }\n  } else {\n    emitLifecycleEvent(elm, \"componentWillUpdate\");\n    if (BUILD20.cmpWillUpdate) {\n      maybePromise = safeCall(instance, \"componentWillUpdate\", void 0, elm);\n    }\n  }\n  emitLifecycleEvent(elm, \"componentWillRender\");\n  if (BUILD20.cmpWillRender) {\n    maybePromise = enqueue(maybePromise, () => safeCall(instance, \"componentWillRender\", void 0, elm));\n  }\n  endSchedule();\n  return enqueue(maybePromise, () => updateComponent(hostRef, instance, isInitialLoad));\n};\nvar enqueue = (maybePromise, fn) => isPromisey(maybePromise) ? maybePromise.then(fn).catch((err2) => {\n  console.error(err2);\n  fn();\n}) : fn();\nvar isPromisey = (maybePromise) => maybePromise instanceof Promise || maybePromise && maybePromise.then && typeof maybePromise.then === \"function\";\nvar updateComponent = async (hostRef, instance, isInitialLoad) => {\n  var _a;\n  const elm = hostRef.$hostElement$;\n  const endUpdate = createTime(\"update\", hostRef.$cmpMeta$.$tagName$);\n  const rc = elm[\"s-rc\"];\n  if (BUILD20.style && isInitialLoad) {\n    attachStyles(hostRef);\n  }\n  const endRender = createTime(\"render\", hostRef.$cmpMeta$.$tagName$);\n  if (BUILD20.isDev) {\n    hostRef.$flags$ |= 1024 /* devOnRender */;\n  }\n  if (BUILD20.hydrateServerSide) {\n    await callRender(hostRef, instance, elm, isInitialLoad);\n  } else {\n    callRender(hostRef, instance, elm, isInitialLoad);\n  }\n  if (BUILD20.isDev) {\n    hostRef.$renderCount$ = hostRef.$renderCount$ === void 0 ? 1 : hostRef.$renderCount$ + 1;\n    hostRef.$flags$ &= ~1024 /* devOnRender */;\n  }\n  if (BUILD20.hydrateServerSide) {\n    try {\n      serverSideConnected(elm);\n      if (isInitialLoad) {\n        if (hostRef.$cmpMeta$.$flags$ & 1 /* shadowDomEncapsulation */) {\n          elm[\"s-en\"] = \"\";\n        } else if (hostRef.$cmpMeta$.$flags$ & 2 /* scopedCssEncapsulation */) {\n          elm[\"s-en\"] = \"c\";\n        }\n      }\n    } catch (e) {\n      consoleError(e, elm);\n    }\n  }\n  if (BUILD20.asyncLoading && rc) {\n    rc.map((cb) => cb());\n    elm[\"s-rc\"] = void 0;\n  }\n  endRender();\n  endUpdate();\n  if (BUILD20.asyncLoading) {\n    const childrenPromises = (_a = elm[\"s-p\"]) != null ? _a : [];\n    const postUpdate = () => postUpdateComponent(hostRef);\n    if (childrenPromises.length === 0) {\n      postUpdate();\n    } else {\n      Promise.all(childrenPromises).then(postUpdate);\n      hostRef.$flags$ |= 4 /* isWaitingForChildren */;\n      childrenPromises.length = 0;\n    }\n  } else {\n    postUpdateComponent(hostRef);\n  }\n};\nvar renderingRef = null;\nvar callRender = (hostRef, instance, elm, isInitialLoad) => {\n  const allRenderFn = BUILD20.allRenderFn ? true : false;\n  const lazyLoad = BUILD20.lazyLoad ? true : false;\n  const taskQueue = BUILD20.taskQueue ? true : false;\n  const updatable = BUILD20.updatable ? true : false;\n  try {\n    renderingRef = instance;\n    instance = allRenderFn ? instance.render() : instance.render && instance.render();\n    if (updatable && taskQueue) {\n      hostRef.$flags$ &= ~16 /* isQueuedForUpdate */;\n    }\n    if (updatable || lazyLoad) {\n      hostRef.$flags$ |= 2 /* hasRendered */;\n    }\n    if (BUILD20.hasRenderFn || BUILD20.reflect) {\n      if (BUILD20.vdomRender || BUILD20.reflect) {\n        if (BUILD20.hydrateServerSide) {\n          return Promise.resolve(instance).then((value) => renderVdom(hostRef, value, isInitialLoad));\n        } else {\n          renderVdom(hostRef, instance, isInitialLoad);\n        }\n      } else {\n        const shadowRoot = elm.shadowRoot;\n        if (hostRef.$cmpMeta$.$flags$ & 1 /* shadowDomEncapsulation */) {\n          shadowRoot.textContent = instance;\n        } else {\n          elm.textContent = instance;\n        }\n      }\n    }\n  } catch (e) {\n    consoleError(e, hostRef.$hostElement$);\n  }\n  renderingRef = null;\n  return null;\n};\nvar getRenderingRef = () => renderingRef;\nvar postUpdateComponent = (hostRef) => {\n  const tagName = hostRef.$cmpMeta$.$tagName$;\n  const elm = hostRef.$hostElement$;\n  const endPostUpdate = createTime(\"postUpdate\", tagName);\n  const instance = BUILD20.lazyLoad ? hostRef.$lazyInstance$ : elm;\n  const ancestorComponent = hostRef.$ancestorComponent$;\n  if (BUILD20.cmpDidRender) {\n    if (BUILD20.isDev) {\n      hostRef.$flags$ |= 1024 /* devOnRender */;\n    }\n    safeCall(instance, \"componentDidRender\", void 0, elm);\n    if (BUILD20.isDev) {\n      hostRef.$flags$ &= ~1024 /* devOnRender */;\n    }\n  }\n  emitLifecycleEvent(elm, \"componentDidRender\");\n  if (!(hostRef.$flags$ & 64 /* hasLoadedComponent */)) {\n    hostRef.$flags$ |= 64 /* hasLoadedComponent */;\n    if (BUILD20.asyncLoading && BUILD20.cssAnnotations) {\n      addHydratedFlag(elm);\n    }\n    if (BUILD20.cmpDidLoad) {\n      if (BUILD20.isDev) {\n        hostRef.$flags$ |= 2048 /* devOnDidLoad */;\n      }\n      safeCall(instance, \"componentDidLoad\", void 0, elm);\n      if (BUILD20.isDev) {\n        hostRef.$flags$ &= ~2048 /* devOnDidLoad */;\n      }\n    }\n    emitLifecycleEvent(elm, \"componentDidLoad\");\n    endPostUpdate();\n    if (BUILD20.asyncLoading) {\n      hostRef.$onReadyResolve$(elm);\n      if (!ancestorComponent) {\n        appDidLoad(tagName);\n      }\n    }\n  } else {\n    if (BUILD20.cmpDidUpdate) {\n      if (BUILD20.isDev) {\n        hostRef.$flags$ |= 1024 /* devOnRender */;\n      }\n      safeCall(instance, \"componentDidUpdate\", void 0, elm);\n      if (BUILD20.isDev) {\n        hostRef.$flags$ &= ~1024 /* devOnRender */;\n      }\n    }\n    emitLifecycleEvent(elm, \"componentDidUpdate\");\n    endPostUpdate();\n  }\n  if (BUILD20.method && BUILD20.lazyLoad) {\n    hostRef.$onInstanceResolve$(elm);\n  }\n  if (BUILD20.asyncLoading) {\n    if (hostRef.$onRenderResolve$) {\n      hostRef.$onRenderResolve$();\n      hostRef.$onRenderResolve$ = void 0;\n    }\n    if (hostRef.$flags$ & 512 /* needsRerender */) {\n      nextTick(() => scheduleUpdate(hostRef, false));\n    }\n    hostRef.$flags$ &= ~(4 /* isWaitingForChildren */ | 512 /* needsRerender */);\n  }\n};\nvar forceUpdate = (ref) => {\n  if (BUILD20.updatable && (Build.isBrowser || Build.isTesting)) {\n    const hostRef = getHostRef(ref);\n    const isConnected = hostRef.$hostElement$.isConnected;\n    if (isConnected && (hostRef.$flags$ & (2 /* hasRendered */ | 16 /* isQueuedForUpdate */)) === 2 /* hasRendered */) {\n      scheduleUpdate(hostRef, false);\n    }\n    return isConnected;\n  }\n  return false;\n};\nvar appDidLoad = (who) => {\n  if (BUILD20.cssAnnotations) {\n    addHydratedFlag(doc.documentElement);\n  }\n  if (BUILD20.asyncQueue) {\n    plt.$flags$ |= 2 /* appLoaded */;\n  }\n  nextTick(() => emitEvent(win, \"appload\", { detail: { namespace: NAMESPACE } }));\n  if (BUILD20.profile && performance.measure) {\n    performance.measure(`[Stencil] ${NAMESPACE} initial load (by ${who})`, \"st:app:start\");\n  }\n};\nvar safeCall = (instance, method, arg, elm) => {\n  if (instance && instance[method]) {\n    try {\n      return instance[method](arg);\n    } catch (e) {\n      consoleError(e, elm);\n    }\n  }\n  return void 0;\n};\nvar emitLifecycleEvent = (elm, lifecycleName) => {\n  if (BUILD20.lifecycleDOMEvents) {\n    emitEvent(elm, \"stencil_\" + lifecycleName, {\n      bubbles: true,\n      composed: true,\n      detail: {\n        namespace: NAMESPACE\n      }\n    });\n  }\n};\nvar addHydratedFlag = (elm) => {\n  var _a, _b;\n  return BUILD20.hydratedClass ? elm.classList.add((_a = BUILD20.hydratedSelectorName) != null ? _a : \"hydrated\") : BUILD20.hydratedAttribute ? elm.setAttribute((_b = BUILD20.hydratedSelectorName) != null ? _b : \"hydrated\", \"\") : void 0;\n};\nvar serverSideConnected = (elm) => {\n  const children = elm.children;\n  if (children != null) {\n    for (let i2 = 0, ii = children.length; i2 < ii; i2++) {\n      const childElm = children[i2];\n      if (typeof childElm.connectedCallback === \"function\") {\n        childElm.connectedCallback();\n      }\n      serverSideConnected(childElm);\n    }\n  }\n};\n\n// src/runtime/set-value.ts\nvar getValue = (ref, propName) => getHostRef(ref).$instanceValues$.get(propName);\nvar setValue = (ref, propName, newVal, cmpMeta) => {\n  const hostRef = getHostRef(ref);\n  if (BUILD21.lazyLoad && !hostRef) {\n    throw new Error(\n      `Couldn't find host element for \"${cmpMeta.$tagName$}\" as it is unknown to this Stencil runtime. This usually happens when integrating a 3rd party Stencil component with another Stencil component or application. Please reach out to the maintainers of the 3rd party Stencil component or report this on the Stencil Discord server (https://chat.stenciljs.com) or comment on this similar [GitHub issue](https://github.com/ionic-team/stencil/issues/5457).`\n    );\n  }\n  const elm = BUILD21.lazyLoad ? hostRef.$hostElement$ : ref;\n  const oldVal = hostRef.$instanceValues$.get(propName);\n  const flags = hostRef.$flags$;\n  const instance = BUILD21.lazyLoad ? hostRef.$lazyInstance$ : elm;\n  newVal = parsePropertyValue(newVal, cmpMeta.$members$[propName][0]);\n  const areBothNaN = Number.isNaN(oldVal) && Number.isNaN(newVal);\n  const didValueChange = newVal !== oldVal && !areBothNaN;\n  if ((!BUILD21.lazyLoad || !(flags & 8 /* isConstructingInstance */) || oldVal === void 0) && didValueChange) {\n    hostRef.$instanceValues$.set(propName, newVal);\n    if (BUILD21.isDev) {\n      if (hostRef.$flags$ & 1024 /* devOnRender */) {\n        consoleDevWarn(\n          `The state/prop \"${propName}\" changed during rendering. This can potentially lead to infinite-loops and other bugs.`,\n          \"\\nElement\",\n          elm,\n          \"\\nNew value\",\n          newVal,\n          \"\\nOld value\",\n          oldVal\n        );\n      } else if (hostRef.$flags$ & 2048 /* devOnDidLoad */) {\n        consoleDevWarn(\n          `The state/prop \"${propName}\" changed during \"componentDidLoad()\", this triggers extra re-renders, try to setup on \"componentWillLoad()\"`,\n          \"\\nElement\",\n          elm,\n          \"\\nNew value\",\n          newVal,\n          \"\\nOld value\",\n          oldVal\n        );\n      }\n    }\n    if (!BUILD21.lazyLoad || instance) {\n      if (BUILD21.watchCallback && cmpMeta.$watchers$ && flags & 128 /* isWatchReady */) {\n        const watchMethods = cmpMeta.$watchers$[propName];\n        if (watchMethods) {\n          watchMethods.map((watchMethodName) => {\n            try {\n              instance[watchMethodName](newVal, oldVal, propName);\n            } catch (e) {\n              consoleError(e, elm);\n            }\n          });\n        }\n      }\n      if (BUILD21.updatable && (flags & (2 /* hasRendered */ | 16 /* isQueuedForUpdate */)) === 2 /* hasRendered */) {\n        if (BUILD21.cmpShouldUpdate && instance.componentShouldUpdate) {\n          if (instance.componentShouldUpdate(newVal, oldVal, propName) === false) {\n            return;\n          }\n        }\n        scheduleUpdate(hostRef, false);\n      }\n    }\n  }\n};\n\n// src/runtime/proxy-component.ts\nvar proxyComponent = (Cstr, cmpMeta, flags) => {\n  var _a, _b;\n  const prototype = Cstr.prototype;\n  if (BUILD22.isTesting) {\n    if (prototype.done) {\n      return;\n    }\n    prototype.done = true;\n  }\n  if (BUILD22.formAssociated && cmpMeta.$flags$ & 64 /* formAssociated */ && flags & 1 /* isElementConstructor */) {\n    FORM_ASSOCIATED_CUSTOM_ELEMENT_CALLBACKS.forEach((cbName) => {\n      const originalFormAssociatedCallback = prototype[cbName];\n      Object.defineProperty(prototype, cbName, {\n        value(...args) {\n          const hostRef = getHostRef(this);\n          const instance = BUILD22.lazyLoad ? hostRef.$lazyInstance$ : this;\n          if (!instance) {\n            hostRef.$onReadyPromise$.then((asyncInstance) => {\n              const cb = asyncInstance[cbName];\n              typeof cb === \"function\" && cb.call(asyncInstance, ...args);\n            });\n          } else {\n            const cb = BUILD22.lazyLoad ? instance[cbName] : originalFormAssociatedCallback;\n            typeof cb === \"function\" && cb.call(instance, ...args);\n          }\n        }\n      });\n    });\n  }\n  if (BUILD22.member && cmpMeta.$members$ || BUILD22.watchCallback && (cmpMeta.$watchers$ || Cstr.watchers)) {\n    if (BUILD22.watchCallback && Cstr.watchers && !cmpMeta.$watchers$) {\n      cmpMeta.$watchers$ = Cstr.watchers;\n    }\n    const members = Object.entries((_a = cmpMeta.$members$) != null ? _a : {});\n    members.map(([memberName, [memberFlags]]) => {\n      if ((BUILD22.prop || BUILD22.state) && (memberFlags & 31 /* Prop */ || (!BUILD22.lazyLoad || flags & 2 /* proxyState */) && memberFlags & 32 /* State */)) {\n        const { get: origGetter, set: origSetter } = Object.getOwnPropertyDescriptor(prototype, memberName) || {};\n        if (origGetter) cmpMeta.$members$[memberName][0] |= 2048 /* Getter */;\n        if (origSetter) cmpMeta.$members$[memberName][0] |= 4096 /* Setter */;\n        if (flags & 1 /* isElementConstructor */ || !origGetter) {\n          Object.defineProperty(prototype, memberName, {\n            get() {\n              if (BUILD22.lazyLoad) {\n                if ((cmpMeta.$members$[memberName][0] & 2048 /* Getter */) === 0) {\n                  return getValue(this, memberName);\n                }\n                const ref = getHostRef(this);\n                const instance = ref ? ref.$lazyInstance$ : prototype;\n                if (!instance) return;\n                return instance[memberName];\n              }\n              if (!BUILD22.lazyLoad) {\n                return origGetter ? origGetter.apply(this) : getValue(this, memberName);\n              }\n            },\n            configurable: true,\n            enumerable: true\n          });\n        }\n        Object.defineProperty(prototype, memberName, {\n          set(newValue) {\n            const ref = getHostRef(this);\n            if (BUILD22.isDev) {\n              if (\n                // we are proxying the instance (not element)\n                (flags & 1 /* isElementConstructor */) === 0 && // if the class has a setter, then the Element can update instance values, so ignore\n                (cmpMeta.$members$[memberName][0] & 4096 /* Setter */) === 0 && // the element is not constructing\n                (ref && ref.$flags$ & 8 /* isConstructingInstance */) === 0 && // the member is a prop\n                (memberFlags & 31 /* Prop */) !== 0 && // the member is not mutable\n                (memberFlags & 1024 /* Mutable */) === 0\n              ) {\n                consoleDevWarn(\n                  `@Prop() \"${memberName}\" on <${cmpMeta.$tagName$}> is immutable but was modified from within the component.\nMore information: https://stenciljs.com/docs/properties#prop-mutability`\n                );\n              }\n            }\n            if (origSetter) {\n              const currentValue = memberFlags & 32 /* State */ ? this[memberName] : ref.$hostElement$[memberName];\n              if (typeof currentValue === \"undefined\" && ref.$instanceValues$.get(memberName)) {\n                newValue = ref.$instanceValues$.get(memberName);\n              } else if (!ref.$instanceValues$.get(memberName) && currentValue) {\n                ref.$instanceValues$.set(memberName, currentValue);\n              }\n              origSetter.apply(this, [parsePropertyValue(newValue, memberFlags)]);\n              newValue = memberFlags & 32 /* State */ ? this[memberName] : ref.$hostElement$[memberName];\n              setValue(this, memberName, newValue, cmpMeta);\n              return;\n            }\n            if (!BUILD22.lazyLoad) {\n              setValue(this, memberName, newValue, cmpMeta);\n              return;\n            }\n            if (BUILD22.lazyLoad) {\n              if ((flags & 1 /* isElementConstructor */) === 0 || (cmpMeta.$members$[memberName][0] & 4096 /* Setter */) === 0) {\n                setValue(this, memberName, newValue, cmpMeta);\n                if (flags & 1 /* isElementConstructor */ && !ref.$lazyInstance$) {\n                  ref.$onReadyPromise$.then(() => {\n                    if (cmpMeta.$members$[memberName][0] & 4096 /* Setter */ && ref.$lazyInstance$[memberName] !== ref.$instanceValues$.get(memberName)) {\n                      ref.$lazyInstance$[memberName] = newValue;\n                    }\n                  });\n                }\n                return;\n              }\n              const setterSetVal = () => {\n                const currentValue = ref.$lazyInstance$[memberName];\n                if (!ref.$instanceValues$.get(memberName) && currentValue) {\n                  ref.$instanceValues$.set(memberName, currentValue);\n                }\n                ref.$lazyInstance$[memberName] = parsePropertyValue(newValue, memberFlags);\n                setValue(this, memberName, ref.$lazyInstance$[memberName], cmpMeta);\n              };\n              if (ref.$lazyInstance$) {\n                setterSetVal();\n              } else {\n                ref.$onReadyPromise$.then(() => setterSetVal());\n              }\n            }\n          }\n        });\n      } else if (BUILD22.lazyLoad && BUILD22.method && flags & 1 /* isElementConstructor */ && memberFlags & 64 /* Method */) {\n        Object.defineProperty(prototype, memberName, {\n          value(...args) {\n            var _a2;\n            const ref = getHostRef(this);\n            return (_a2 = ref == null ? void 0 : ref.$onInstancePromise$) == null ? void 0 : _a2.then(() => {\n              var _a3;\n              return (_a3 = ref.$lazyInstance$) == null ? void 0 : _a3[memberName](...args);\n            });\n          }\n        });\n      }\n    });\n    if (BUILD22.observeAttribute && (!BUILD22.lazyLoad || flags & 1 /* isElementConstructor */)) {\n      const attrNameToPropName = /* @__PURE__ */ new Map();\n      prototype.attributeChangedCallback = function(attrName, oldValue, newValue) {\n        plt.jmp(() => {\n          var _a2;\n          const propName = attrNameToPropName.get(attrName);\n          if (this.hasOwnProperty(propName) && BUILD22.lazyLoad) {\n            newValue = this[propName];\n            delete this[propName];\n          } else if (prototype.hasOwnProperty(propName) && typeof this[propName] === \"number\" && // cast type to number to avoid TS compiler issues\n          this[propName] == newValue) {\n            return;\n          } else if (propName == null) {\n            const hostRef = getHostRef(this);\n            const flags2 = hostRef == null ? void 0 : hostRef.$flags$;\n            if (flags2 && !(flags2 & 8 /* isConstructingInstance */) && flags2 & 128 /* isWatchReady */ && newValue !== oldValue) {\n              const elm = BUILD22.lazyLoad ? hostRef.$hostElement$ : this;\n              const instance = BUILD22.lazyLoad ? hostRef.$lazyInstance$ : elm;\n              const entry = (_a2 = cmpMeta.$watchers$) == null ? void 0 : _a2[attrName];\n              entry == null ? void 0 : entry.forEach((callbackName) => {\n                if (instance[callbackName] != null) {\n                  instance[callbackName].call(instance, newValue, oldValue, attrName);\n                }\n              });\n            }\n            return;\n          }\n          const propDesc = Object.getOwnPropertyDescriptor(prototype, propName);\n          newValue = newValue === null && typeof this[propName] === \"boolean\" ? false : newValue;\n          if (newValue !== this[propName] && (!propDesc.get || !!propDesc.set)) {\n            this[propName] = newValue;\n          }\n        });\n      };\n      Cstr.observedAttributes = Array.from(\n        /* @__PURE__ */ new Set([\n          ...Object.keys((_b = cmpMeta.$watchers$) != null ? _b : {}),\n          ...members.filter(([_, m]) => m[0] & 15 /* HasAttribute */).map(([propName, m]) => {\n            var _a2;\n            const attrName = m[1] || propName;\n            attrNameToPropName.set(attrName, propName);\n            if (BUILD22.reflect && m[0] & 512 /* ReflectAttr */) {\n              (_a2 = cmpMeta.$attrsToReflect$) == null ? void 0 : _a2.push([propName, attrName]);\n            }\n            return attrName;\n          })\n        ])\n      );\n    }\n  }\n  return Cstr;\n};\n\n// src/runtime/initialize-component.ts\nvar initializeComponent = async (elm, hostRef, cmpMeta, hmrVersionId) => {\n  let Cstr;\n  if ((hostRef.$flags$ & 32 /* hasInitializedComponent */) === 0) {\n    hostRef.$flags$ |= 32 /* hasInitializedComponent */;\n    if (BUILD23.lazyLoad || BUILD23.hydrateClientSide) {\n      const CstrImport = loadModule(cmpMeta, hostRef, hmrVersionId);\n      if (CstrImport && \"then\" in CstrImport) {\n        const endLoad = uniqueTime(\n          `st:load:${cmpMeta.$tagName$}:${hostRef.$modeName$}`,\n          `[Stencil] Load module for <${cmpMeta.$tagName$}>`\n        );\n        Cstr = await CstrImport;\n        endLoad();\n      } else {\n        Cstr = CstrImport;\n      }\n      if (!Cstr) {\n        throw new Error(`Constructor for \"${cmpMeta.$tagName$}#${hostRef.$modeName$}\" was not found`);\n      }\n      if (BUILD23.member && !Cstr.isProxied) {\n        if (BUILD23.watchCallback) {\n          cmpMeta.$watchers$ = Cstr.watchers;\n        }\n        proxyComponent(Cstr, cmpMeta, 2 /* proxyState */);\n        Cstr.isProxied = true;\n      }\n      const endNewInstance = createTime(\"createInstance\", cmpMeta.$tagName$);\n      if (BUILD23.member) {\n        hostRef.$flags$ |= 8 /* isConstructingInstance */;\n      }\n      try {\n        new Cstr(hostRef);\n      } catch (e) {\n        consoleError(e, elm);\n      }\n      if (BUILD23.member) {\n        hostRef.$flags$ &= ~8 /* isConstructingInstance */;\n      }\n      if (BUILD23.watchCallback) {\n        hostRef.$flags$ |= 128 /* isWatchReady */;\n      }\n      endNewInstance();\n      fireConnectedCallback(hostRef.$lazyInstance$, elm);\n    } else {\n      Cstr = elm.constructor;\n      const cmpTag = elm.localName;\n      customElements.whenDefined(cmpTag).then(() => hostRef.$flags$ |= 128 /* isWatchReady */);\n    }\n    if (BUILD23.style && Cstr && Cstr.style) {\n      let style;\n      if (typeof Cstr.style === \"string\") {\n        style = Cstr.style;\n      } else if (BUILD23.mode && typeof Cstr.style !== \"string\") {\n        hostRef.$modeName$ = computeMode(elm);\n        if (hostRef.$modeName$) {\n          style = Cstr.style[hostRef.$modeName$];\n        }\n        if (BUILD23.hydrateServerSide && hostRef.$modeName$) {\n          elm.setAttribute(\"s-mode\", hostRef.$modeName$);\n        }\n      }\n      const scopeId2 = getScopeId(cmpMeta, hostRef.$modeName$);\n      if (!styles.has(scopeId2)) {\n        const endRegisterStyles = createTime(\"registerStyles\", cmpMeta.$tagName$);\n        if (!BUILD23.hydrateServerSide && BUILD23.shadowDom && // TODO(STENCIL-854): Remove code related to legacy shadowDomShim field\n        BUILD23.shadowDomShim && cmpMeta.$flags$ & 8 /* needsShadowDomShim */) {\n          style = await import(\"./shadow-css.js\").then((m) => m.scopeCss(style, scopeId2));\n        }\n        registerStyle(scopeId2, style, !!(cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */));\n        endRegisterStyles();\n      }\n    }\n  }\n  const ancestorComponent = hostRef.$ancestorComponent$;\n  const schedule = () => scheduleUpdate(hostRef, true);\n  if (BUILD23.asyncLoading && ancestorComponent && ancestorComponent[\"s-rc\"]) {\n    ancestorComponent[\"s-rc\"].push(schedule);\n  } else {\n    schedule();\n  }\n};\nvar fireConnectedCallback = (instance, elm) => {\n  if (BUILD23.lazyLoad && BUILD23.connectedCallback) {\n    safeCall(instance, \"connectedCallback\", void 0, elm);\n  }\n};\n\n// src/runtime/connected-callback.ts\nvar connectedCallback = (elm) => {\n  if ((plt.$flags$ & 1 /* isTmpDisconnected */) === 0) {\n    const hostRef = getHostRef(elm);\n    const cmpMeta = hostRef.$cmpMeta$;\n    const endConnected = createTime(\"connectedCallback\", cmpMeta.$tagName$);\n    if (BUILD24.hostListenerTargetParent) {\n      addHostEventListeners(elm, hostRef, cmpMeta.$listeners$, true);\n    }\n    if (!(hostRef.$flags$ & 1 /* hasConnected */)) {\n      hostRef.$flags$ |= 1 /* hasConnected */;\n      let hostId;\n      if (BUILD24.hydrateClientSide) {\n        hostId = elm.getAttribute(HYDRATE_ID);\n        if (hostId) {\n          if (BUILD24.shadowDom && supportsShadow && cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */) {\n            const scopeId2 = BUILD24.mode ? addStyle(elm.shadowRoot, cmpMeta, elm.getAttribute(\"s-mode\")) : addStyle(elm.shadowRoot, cmpMeta);\n            elm.classList.remove(scopeId2 + \"-h\", scopeId2 + \"-s\");\n          } else if (BUILD24.scoped && cmpMeta.$flags$ & 2 /* scopedCssEncapsulation */) {\n            const scopeId2 = getScopeId(cmpMeta, BUILD24.mode ? elm.getAttribute(\"s-mode\") : void 0);\n            elm[\"s-sc\"] = scopeId2;\n          }\n          initializeClientHydrate(elm, cmpMeta.$tagName$, hostId, hostRef);\n        }\n      }\n      if (BUILD24.slotRelocation && !hostId) {\n        if (BUILD24.hydrateServerSide || (BUILD24.slot || BUILD24.shadowDom) && // TODO(STENCIL-854): Remove code related to legacy shadowDomShim field\n        cmpMeta.$flags$ & (4 /* hasSlotRelocation */ | 8 /* needsShadowDomShim */)) {\n          setContentReference(elm);\n        }\n      }\n      if (BUILD24.asyncLoading) {\n        let ancestorComponent = elm;\n        while (ancestorComponent = ancestorComponent.parentNode || ancestorComponent.host) {\n          if (BUILD24.hydrateClientSide && ancestorComponent.nodeType === 1 /* ElementNode */ && ancestorComponent.hasAttribute(\"s-id\") && ancestorComponent[\"s-p\"] || ancestorComponent[\"s-p\"]) {\n            attachToAncestor(hostRef, hostRef.$ancestorComponent$ = ancestorComponent);\n            break;\n          }\n        }\n      }\n      if (BUILD24.prop && !BUILD24.hydrateServerSide && cmpMeta.$members$) {\n        Object.entries(cmpMeta.$members$).map(([memberName, [memberFlags]]) => {\n          if (memberFlags & 31 /* Prop */ && elm.hasOwnProperty(memberName)) {\n            const value = elm[memberName];\n            delete elm[memberName];\n            elm[memberName] = value;\n          }\n        });\n      }\n      if (BUILD24.initializeNextTick) {\n        nextTick(() => initializeComponent(elm, hostRef, cmpMeta));\n      } else {\n        initializeComponent(elm, hostRef, cmpMeta);\n      }\n    } else {\n      addHostEventListeners(elm, hostRef, cmpMeta.$listeners$, false);\n      if (hostRef == null ? void 0 : hostRef.$lazyInstance$) {\n        fireConnectedCallback(hostRef.$lazyInstance$, elm);\n      } else if (hostRef == null ? void 0 : hostRef.$onReadyPromise$) {\n        hostRef.$onReadyPromise$.then(() => fireConnectedCallback(hostRef.$lazyInstance$, elm));\n      }\n    }\n    endConnected();\n  }\n};\nvar setContentReference = (elm) => {\n  const contentRefElm = elm[\"s-cr\"] = doc.createComment(\n    BUILD24.isDebug ? `content-ref (host=${elm.localName})` : \"\"\n  );\n  contentRefElm[\"s-cn\"] = true;\n  insertBefore(elm, contentRefElm, elm.firstChild);\n};\n\n// src/runtime/disconnected-callback.ts\nimport { BUILD as BUILD25 } from \"@stencil/core/internal/app-data\";\nvar disconnectInstance = (instance, elm) => {\n  if (BUILD25.lazyLoad && BUILD25.disconnectedCallback) {\n    safeCall(instance, \"disconnectedCallback\", void 0, elm || instance);\n  }\n  if (BUILD25.cmpDidUnload) {\n    safeCall(instance, \"componentDidUnload\", void 0, elm || instance);\n  }\n};\nvar disconnectedCallback = async (elm) => {\n  if ((plt.$flags$ & 1 /* isTmpDisconnected */) === 0) {\n    const hostRef = getHostRef(elm);\n    if (BUILD25.hostListener) {\n      if (hostRef.$rmListeners$) {\n        hostRef.$rmListeners$.map((rmListener) => rmListener());\n        hostRef.$rmListeners$ = void 0;\n      }\n    }\n    if (!BUILD25.lazyLoad) {\n      disconnectInstance(elm);\n    } else if (hostRef == null ? void 0 : hostRef.$lazyInstance$) {\n      disconnectInstance(hostRef.$lazyInstance$, elm);\n    } else if (hostRef == null ? void 0 : hostRef.$onReadyPromise$) {\n      hostRef.$onReadyPromise$.then(() => disconnectInstance(hostRef.$lazyInstance$, elm));\n    }\n  }\n  if (rootAppliedStyles.has(elm)) {\n    rootAppliedStyles.delete(elm);\n  }\n  if (elm.shadowRoot && rootAppliedStyles.has(elm.shadowRoot)) {\n    rootAppliedStyles.delete(elm.shadowRoot);\n  }\n};\n\n// src/runtime/bootstrap-custom-element.ts\nvar defineCustomElement = (Cstr, compactMeta) => {\n  customElements.define(compactMeta[1], proxyCustomElement(Cstr, compactMeta));\n};\nvar proxyCustomElement = (Cstr, compactMeta) => {\n  const cmpMeta = {\n    $flags$: compactMeta[0],\n    $tagName$: compactMeta[1]\n  };\n  if (BUILD26.member) {\n    cmpMeta.$members$ = compactMeta[2];\n  }\n  if (BUILD26.hostListener) {\n    cmpMeta.$listeners$ = compactMeta[3];\n  }\n  if (BUILD26.watchCallback) {\n    cmpMeta.$watchers$ = Cstr.$watchers$;\n  }\n  if (BUILD26.reflect) {\n    cmpMeta.$attrsToReflect$ = [];\n  }\n  if (BUILD26.shadowDom && !supportsShadow && cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */) {\n    cmpMeta.$flags$ |= 8 /* needsShadowDomShim */;\n  }\n  if (BUILD26.experimentalSlotFixes) {\n    if (BUILD26.scoped && cmpMeta.$flags$ & 2 /* scopedCssEncapsulation */) {\n      patchPseudoShadowDom(Cstr.prototype);\n    }\n  } else {\n    if (BUILD26.slotChildNodesFix) {\n      patchChildSlotNodes(Cstr.prototype);\n    }\n    if (BUILD26.cloneNodeFix) {\n      patchCloneNode(Cstr.prototype);\n    }\n    if (BUILD26.appendChildSlotFix) {\n      patchSlotAppendChild(Cstr.prototype);\n    }\n    if (BUILD26.scopedSlotTextContentFix && cmpMeta.$flags$ & 2 /* scopedCssEncapsulation */) {\n      patchTextContent(Cstr.prototype);\n    }\n  }\n  const originalConnectedCallback = Cstr.prototype.connectedCallback;\n  const originalDisconnectedCallback = Cstr.prototype.disconnectedCallback;\n  Object.assign(Cstr.prototype, {\n    __hasHostListenerAttached: false,\n    __registerHost() {\n      registerHost(this, cmpMeta);\n    },\n    connectedCallback() {\n      if (!this.__hasHostListenerAttached) {\n        const hostRef = getHostRef(this);\n        addHostEventListeners(this, hostRef, cmpMeta.$listeners$, false);\n        this.__hasHostListenerAttached = true;\n      }\n      connectedCallback(this);\n      if (BUILD26.connectedCallback && originalConnectedCallback) {\n        originalConnectedCallback.call(this);\n      }\n    },\n    disconnectedCallback() {\n      disconnectedCallback(this);\n      if (BUILD26.disconnectedCallback && originalDisconnectedCallback) {\n        originalDisconnectedCallback.call(this);\n      }\n      plt.raf(() => {\n        var _a;\n        const hostRef = getHostRef(this);\n        if (((_a = hostRef == null ? void 0 : hostRef.$vnode$) == null ? void 0 : _a.$elm$) instanceof Node && !hostRef.$vnode$.$elm$.isConnected) {\n          delete hostRef.$vnode$;\n        }\n        if (this instanceof Node && !this.isConnected) {\n          deleteHostRef(this);\n        }\n      });\n    },\n    __attachShadow() {\n      if (supportsShadow) {\n        if (!this.shadowRoot) {\n          if (BUILD26.shadowDelegatesFocus) {\n            this.attachShadow({\n              mode: \"open\",\n              delegatesFocus: !!(cmpMeta.$flags$ & 16 /* shadowDelegatesFocus */)\n            });\n          } else {\n            this.attachShadow({ mode: \"open\" });\n          }\n        } else {\n          if (this.shadowRoot.mode !== \"open\") {\n            throw new Error(\n              `Unable to re-use existing shadow root for ${cmpMeta.$tagName$}! Mode is set to ${this.shadowRoot.mode} but Stencil only supports open shadow roots.`\n            );\n          }\n        }\n      } else {\n        this.shadowRoot = this;\n      }\n    }\n  });\n  Cstr.is = cmpMeta.$tagName$;\n  return proxyComponent(Cstr, cmpMeta, 1 /* isElementConstructor */ | 2 /* proxyState */);\n};\nvar forceModeUpdate = (elm) => {\n  if (BUILD26.style && BUILD26.mode && !BUILD26.lazyLoad) {\n    const mode = computeMode(elm);\n    const hostRef = getHostRef(elm);\n    if (hostRef.$modeName$ !== mode) {\n      const cmpMeta = hostRef.$cmpMeta$;\n      const oldScopeId = elm[\"s-sc\"];\n      const scopeId2 = getScopeId(cmpMeta, mode);\n      const style = elm.constructor.style[mode];\n      const flags = cmpMeta.$flags$;\n      if (style) {\n        if (!styles.has(scopeId2)) {\n          registerStyle(scopeId2, style, !!(flags & 1 /* shadowDomEncapsulation */));\n        }\n        hostRef.$modeName$ = mode;\n        elm.classList.remove(oldScopeId + \"-h\", oldScopeId + \"-s\");\n        attachStyles(hostRef);\n        forceUpdate(elm);\n      }\n    }\n  }\n};\n\n// src/runtime/bootstrap-lazy.ts\nimport { BUILD as BUILD27 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/hmr-component.ts\nvar hmrStart = (hostElement, cmpMeta, hmrVersionId) => {\n  const hostRef = getHostRef(hostElement);\n  hostRef.$flags$ = 1 /* hasConnected */;\n  initializeComponent(hostElement, hostRef, cmpMeta, hmrVersionId);\n};\n\n// src/runtime/bootstrap-lazy.ts\nvar bootstrapLazy = (lazyBundles, options = {}) => {\n  var _a;\n  if (BUILD27.profile && performance.mark) {\n    performance.mark(\"st:app:start\");\n  }\n  installDevTools();\n  const endBootstrap = createTime(\"bootstrapLazy\");\n  const cmpTags = [];\n  const exclude = options.exclude || [];\n  const customElements2 = win.customElements;\n  const head = doc.head;\n  const metaCharset = /* @__PURE__ */ head.querySelector(\"meta[charset]\");\n  const dataStyles = /* @__PURE__ */ doc.createElement(\"style\");\n  const deferredConnectedCallbacks = [];\n  let appLoadFallback;\n  let isBootstrapping = true;\n  Object.assign(plt, options);\n  plt.$resourcesUrl$ = new URL(options.resourcesUrl || \"./\", doc.baseURI).href;\n  if (BUILD27.asyncQueue) {\n    if (options.syncQueue) {\n      plt.$flags$ |= 4 /* queueSync */;\n    }\n  }\n  if (BUILD27.hydrateClientSide) {\n    plt.$flags$ |= 2 /* appLoaded */;\n  }\n  let hasSlotRelocation = false;\n  lazyBundles.map((lazyBundle) => {\n    lazyBundle[1].map((compactMeta) => {\n      var _a2;\n      const cmpMeta = {\n        $flags$: compactMeta[0],\n        $tagName$: compactMeta[1],\n        $members$: compactMeta[2],\n        $listeners$: compactMeta[3]\n      };\n      if (cmpMeta.$flags$ & 4 /* hasSlotRelocation */) {\n        hasSlotRelocation = true;\n      }\n      if (BUILD27.member) {\n        cmpMeta.$members$ = compactMeta[2];\n      }\n      if (BUILD27.hostListener) {\n        cmpMeta.$listeners$ = compactMeta[3];\n      }\n      if (BUILD27.reflect) {\n        cmpMeta.$attrsToReflect$ = [];\n      }\n      if (BUILD27.watchCallback) {\n        cmpMeta.$watchers$ = (_a2 = compactMeta[4]) != null ? _a2 : {};\n      }\n      if (BUILD27.shadowDom && !supportsShadow && cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */) {\n        cmpMeta.$flags$ |= 8 /* needsShadowDomShim */;\n      }\n      const tagName = BUILD27.transformTagName && options.transformTagName ? options.transformTagName(cmpMeta.$tagName$) : cmpMeta.$tagName$;\n      const HostElement = class extends HTMLElement {\n        // StencilLazyHost\n        constructor(self) {\n          super(self);\n          this.hasRegisteredEventListeners = false;\n          self = this;\n          registerHost(self, cmpMeta);\n          if (BUILD27.shadowDom && cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */) {\n            if (supportsShadow) {\n              if (!self.shadowRoot) {\n                if (BUILD27.shadowDelegatesFocus) {\n                  self.attachShadow({\n                    mode: \"open\",\n                    delegatesFocus: !!(cmpMeta.$flags$ & 16 /* shadowDelegatesFocus */)\n                  });\n                } else {\n                  self.attachShadow({ mode: \"open\" });\n                }\n              } else {\n                if (self.shadowRoot.mode !== \"open\") {\n                  throw new Error(\n                    `Unable to re-use existing shadow root for ${cmpMeta.$tagName$}! Mode is set to ${self.shadowRoot.mode} but Stencil only supports open shadow roots.`\n                  );\n                }\n              }\n            } else if (!BUILD27.hydrateServerSide && !(\"shadowRoot\" in self)) {\n              self.shadowRoot = self;\n            }\n          }\n        }\n        connectedCallback() {\n          const hostRef = getHostRef(this);\n          if (!this.hasRegisteredEventListeners) {\n            this.hasRegisteredEventListeners = true;\n            addHostEventListeners(this, hostRef, cmpMeta.$listeners$, false);\n          }\n          if (appLoadFallback) {\n            clearTimeout(appLoadFallback);\n            appLoadFallback = null;\n          }\n          if (isBootstrapping) {\n            deferredConnectedCallbacks.push(this);\n          } else {\n            plt.jmp(() => connectedCallback(this));\n          }\n        }\n        disconnectedCallback() {\n          plt.jmp(() => disconnectedCallback(this));\n          plt.raf(() => {\n            var _a3;\n            const hostRef = getHostRef(this);\n            if (((_a3 = hostRef == null ? void 0 : hostRef.$vnode$) == null ? void 0 : _a3.$elm$) instanceof Node && !hostRef.$vnode$.$elm$.isConnected) {\n              delete hostRef.$vnode$.$elm$;\n            }\n          });\n        }\n        componentOnReady() {\n          return getHostRef(this).$onReadyPromise$;\n        }\n      };\n      if (BUILD27.experimentalSlotFixes) {\n        if (BUILD27.scoped && cmpMeta.$flags$ & 2 /* scopedCssEncapsulation */) {\n          patchPseudoShadowDom(HostElement.prototype);\n        }\n      } else {\n        if (BUILD27.slotChildNodesFix) {\n          patchChildSlotNodes(HostElement.prototype);\n        }\n        if (BUILD27.cloneNodeFix) {\n          patchCloneNode(HostElement.prototype);\n        }\n        if (BUILD27.appendChildSlotFix) {\n          patchSlotAppendChild(HostElement.prototype);\n        }\n        if (BUILD27.scopedSlotTextContentFix && cmpMeta.$flags$ & 2 /* scopedCssEncapsulation */) {\n          patchTextContent(HostElement.prototype);\n        }\n      }\n      if (BUILD27.formAssociated && cmpMeta.$flags$ & 64 /* formAssociated */) {\n        HostElement.formAssociated = true;\n      }\n      if (BUILD27.hotModuleReplacement) {\n        HostElement.prototype[\"s-hmr\"] = function(hmrVersionId) {\n          hmrStart(this, cmpMeta, hmrVersionId);\n        };\n      }\n      cmpMeta.$lazyBundleId$ = lazyBundle[0];\n      if (!exclude.includes(tagName) && !customElements2.get(tagName)) {\n        cmpTags.push(tagName);\n        customElements2.define(\n          tagName,\n          proxyComponent(HostElement, cmpMeta, 1 /* isElementConstructor */)\n        );\n      }\n    });\n  });\n  if (cmpTags.length > 0) {\n    if (hasSlotRelocation) {\n      dataStyles.textContent += SLOT_FB_CSS;\n    }\n    if (BUILD27.invisiblePrehydration && (BUILD27.hydratedClass || BUILD27.hydratedAttribute)) {\n      dataStyles.textContent += cmpTags.sort() + HYDRATED_CSS;\n    }\n    if (dataStyles.innerHTML.length) {\n      dataStyles.setAttribute(\"data-styles\", \"\");\n      const nonce = (_a = plt.$nonce$) != null ? _a : queryNonceMetaTagContent(doc);\n      if (nonce != null) {\n        dataStyles.setAttribute(\"nonce\", nonce);\n      }\n      head.insertBefore(dataStyles, metaCharset ? metaCharset.nextSibling : head.firstChild);\n    }\n  }\n  isBootstrapping = false;\n  if (deferredConnectedCallbacks.length) {\n    deferredConnectedCallbacks.map((host) => host.connectedCallback());\n  } else {\n    if (BUILD27.profile) {\n      plt.jmp(() => appLoadFallback = setTimeout(appDidLoad, 30, \"timeout\"));\n    } else {\n      plt.jmp(() => appLoadFallback = setTimeout(appDidLoad, 30));\n    }\n  }\n  endBootstrap();\n};\n\n// src/runtime/fragment.ts\nvar Fragment = (_, children) => children;\n\n// src/runtime/host-listener.ts\nimport { BUILD as BUILD28 } from \"@stencil/core/internal/app-data\";\nvar addHostEventListeners = (elm, hostRef, listeners, attachParentListeners) => {\n  if (BUILD28.hostListener && listeners) {\n    if (BUILD28.hostListenerTargetParent) {\n      if (attachParentListeners) {\n        listeners = listeners.filter(([flags]) => flags & 32 /* TargetParent */);\n      } else {\n        listeners = listeners.filter(([flags]) => !(flags & 32 /* TargetParent */));\n      }\n    }\n    listeners.map(([flags, name, method]) => {\n      const target = BUILD28.hostListenerTarget ? getHostListenerTarget(elm, flags) : elm;\n      const handler = hostListenerProxy(hostRef, method);\n      const opts = hostListenerOpts(flags);\n      plt.ael(target, name, handler, opts);\n      (hostRef.$rmListeners$ = hostRef.$rmListeners$ || []).push(() => plt.rel(target, name, handler, opts));\n    });\n  }\n};\nvar hostListenerProxy = (hostRef, methodName) => (ev) => {\n  var _a;\n  try {\n    if (BUILD28.lazyLoad) {\n      if (hostRef.$flags$ & 256 /* isListenReady */) {\n        (_a = hostRef.$lazyInstance$) == null ? void 0 : _a[methodName](ev);\n      } else {\n        (hostRef.$queuedListeners$ = hostRef.$queuedListeners$ || []).push([methodName, ev]);\n      }\n    } else {\n      hostRef.$hostElement$[methodName](ev);\n    }\n  } catch (e) {\n    consoleError(e, hostRef.$hostElement$);\n  }\n};\nvar getHostListenerTarget = (elm, flags) => {\n  if (BUILD28.hostListenerTargetDocument && flags & 4 /* TargetDocument */) return doc;\n  if (BUILD28.hostListenerTargetWindow && flags & 8 /* TargetWindow */) return win;\n  if (BUILD28.hostListenerTargetBody && flags & 16 /* TargetBody */) return doc.body;\n  if (BUILD28.hostListenerTargetParent && flags & 32 /* TargetParent */ && elm.parentElement)\n    return elm.parentElement;\n  return elm;\n};\nvar hostListenerOpts = (flags) => supportsListenerOptions ? {\n  passive: (flags & 1 /* Passive */) !== 0,\n  capture: (flags & 2 /* Capture */) !== 0\n} : (flags & 2 /* Capture */) !== 0;\n\n// src/runtime/nonce.ts\nvar setNonce = (nonce) => plt.$nonce$ = nonce;\n\n// src/runtime/platform-options.ts\nvar setPlatformOptions = (opts) => Object.assign(plt, opts);\n\n// src/runtime/vdom/vdom-annotations.ts\nvar insertVdomAnnotations = (doc2, staticComponents) => {\n  if (doc2 != null) {\n    const docData = STENCIL_DOC_DATA in doc2 ? doc2[STENCIL_DOC_DATA] : { ...DEFAULT_DOC_DATA };\n    docData.staticComponents = new Set(staticComponents);\n    const orgLocationNodes = [];\n    parseVNodeAnnotations(doc2, doc2.body, docData, orgLocationNodes);\n    orgLocationNodes.forEach((orgLocationNode) => {\n      var _a;\n      if (orgLocationNode != null && orgLocationNode[\"s-nr\"]) {\n        const nodeRef = orgLocationNode[\"s-nr\"];\n        let hostId = nodeRef[\"s-host-id\"];\n        let nodeId = nodeRef[\"s-node-id\"];\n        let childId = `${hostId}.${nodeId}`;\n        if (hostId == null) {\n          hostId = 0;\n          docData.rootLevelIds++;\n          nodeId = docData.rootLevelIds;\n          childId = `${hostId}.${nodeId}`;\n          if (nodeRef.nodeType === 1 /* ElementNode */) {\n            nodeRef.setAttribute(HYDRATE_CHILD_ID, childId);\n            if (typeof nodeRef[\"s-sn\"] === \"string\" && !nodeRef.getAttribute(\"slot\")) {\n              nodeRef.setAttribute(\"s-sn\", nodeRef[\"s-sn\"]);\n            }\n          } else if (nodeRef.nodeType === 3 /* TextNode */) {\n            if (hostId === 0) {\n              const textContent = (_a = nodeRef.nodeValue) == null ? void 0 : _a.trim();\n              if (textContent === \"\") {\n                orgLocationNode.remove();\n                return;\n              }\n            }\n            const commentBeforeTextNode = doc2.createComment(childId);\n            commentBeforeTextNode.nodeValue = `${TEXT_NODE_ID}.${childId}`;\n            insertBefore(nodeRef.parentNode, commentBeforeTextNode, nodeRef);\n          } else if (nodeRef.nodeType === 8 /* CommentNode */) {\n            const commentBeforeTextNode = doc2.createComment(childId);\n            commentBeforeTextNode.nodeValue = `${COMMENT_NODE_ID}.${childId}`;\n            nodeRef.parentNode.insertBefore(commentBeforeTextNode, nodeRef);\n          }\n        }\n        let orgLocationNodeId = `${ORG_LOCATION_ID}.${childId}`;\n        const orgLocationParentNode = orgLocationNode.parentElement;\n        if (orgLocationParentNode) {\n          if (orgLocationParentNode[\"s-en\"] === \"\") {\n            orgLocationNodeId += `.`;\n          } else if (orgLocationParentNode[\"s-en\"] === \"c\") {\n            orgLocationNodeId += `.c`;\n          }\n        }\n        orgLocationNode.nodeValue = orgLocationNodeId;\n      }\n    });\n  }\n};\nvar parseVNodeAnnotations = (doc2, node, docData, orgLocationNodes) => {\n  var _a;\n  if (node == null) {\n    return;\n  }\n  if (node[\"s-nr\"] != null) {\n    orgLocationNodes.push(node);\n  }\n  if (node.nodeType === 1 /* ElementNode */) {\n    const childNodes = [...Array.from(node.childNodes), ...Array.from(((_a = node.shadowRoot) == null ? void 0 : _a.childNodes) || [])];\n    childNodes.forEach((childNode) => {\n      const hostRef = getHostRef(childNode);\n      if (hostRef != null && !docData.staticComponents.has(childNode.nodeName.toLowerCase())) {\n        const cmpData = {\n          nodeIds: 0\n        };\n        insertVNodeAnnotations(doc2, childNode, hostRef.$vnode$, docData, cmpData);\n      }\n      parseVNodeAnnotations(doc2, childNode, docData, orgLocationNodes);\n    });\n  }\n};\nvar insertVNodeAnnotations = (doc2, hostElm, vnode, docData, cmpData) => {\n  if (vnode != null) {\n    const hostId = ++docData.hostIds;\n    hostElm.setAttribute(HYDRATE_ID, hostId);\n    if (hostElm[\"s-cr\"] != null) {\n      hostElm[\"s-cr\"].nodeValue = `${CONTENT_REF_ID}.${hostId}`;\n    }\n    if (vnode.$children$ != null) {\n      const depth = 0;\n      vnode.$children$.forEach((vnodeChild, index) => {\n        insertChildVNodeAnnotations(doc2, vnodeChild, cmpData, hostId, depth, index);\n      });\n    }\n    if (hostElm && vnode && vnode.$elm$ && !hostElm.hasAttribute(HYDRATE_CHILD_ID)) {\n      const parent = hostElm.parentElement;\n      if (parent && parent.childNodes) {\n        const parentChildNodes = Array.from(parent.childNodes);\n        const comment = parentChildNodes.find(\n          (node) => node.nodeType === 8 /* CommentNode */ && node[\"s-sr\"]\n        );\n        if (comment) {\n          const index = parentChildNodes.indexOf(hostElm) - 1;\n          vnode.$elm$.setAttribute(\n            HYDRATE_CHILD_ID,\n            `${comment[\"s-host-id\"]}.${comment[\"s-node-id\"]}.0.${index}`\n          );\n        }\n      }\n    }\n  }\n};\nvar insertChildVNodeAnnotations = (doc2, vnodeChild, cmpData, hostId, depth, index) => {\n  const childElm = vnodeChild.$elm$;\n  if (childElm == null) {\n    return;\n  }\n  const nodeId = cmpData.nodeIds++;\n  const childId = `${hostId}.${nodeId}.${depth}.${index}`;\n  childElm[\"s-host-id\"] = hostId;\n  childElm[\"s-node-id\"] = nodeId;\n  if (childElm.nodeType === 1 /* ElementNode */) {\n    childElm.setAttribute(HYDRATE_CHILD_ID, childId);\n    if (typeof childElm[\"s-sn\"] === \"string\" && !childElm.getAttribute(\"slot\")) {\n      childElm.setAttribute(\"s-sn\", childElm[\"s-sn\"]);\n    }\n  } else if (childElm.nodeType === 3 /* TextNode */) {\n    const parentNode = childElm.parentNode;\n    const nodeName = parentNode == null ? void 0 : parentNode.nodeName;\n    if (nodeName !== \"STYLE\" && nodeName !== \"SCRIPT\") {\n      const textNodeId = `${TEXT_NODE_ID}.${childId}`;\n      const commentBeforeTextNode = doc2.createComment(textNodeId);\n      insertBefore(parentNode, commentBeforeTextNode, childElm);\n    }\n  } else if (childElm.nodeType === 8 /* CommentNode */) {\n    if (childElm[\"s-sr\"]) {\n      const slotName = childElm[\"s-sn\"] || \"\";\n      const slotNodeId = `${SLOT_NODE_ID}.${childId}.${slotName}`;\n      childElm.nodeValue = slotNodeId;\n    }\n  }\n  if (vnodeChild.$children$ != null) {\n    const childDepth = depth + 1;\n    vnodeChild.$children$.forEach((vnode, index2) => {\n      insertChildVNodeAnnotations(doc2, vnode, cmpData, hostId, childDepth, index2);\n    });\n  }\n};\nexport {\n  BUILD29 as BUILD,\n  Build,\n  Env,\n  Fragment,\n  H,\n  H as HTMLElement,\n  Host,\n  NAMESPACE2 as NAMESPACE,\n  STENCIL_DEV_MODE,\n  addHostEventListeners,\n  bootstrapLazy,\n  cmpModules,\n  connectedCallback,\n  consoleDevError,\n  consoleDevInfo,\n  consoleDevWarn,\n  consoleError,\n  createEvent,\n  defineCustomElement,\n  deleteHostRef,\n  disconnectedCallback,\n  doc,\n  forceModeUpdate,\n  forceUpdate,\n  getAssetPath,\n  getElement,\n  getHostRef,\n  getMode,\n  getRenderingRef,\n  getValue,\n  h,\n  insertVdomAnnotations,\n  isMemberInElement,\n  loadModule,\n  modeResolutionChain,\n  nextTick,\n  parsePropertyValue,\n  plt,\n  postUpdateComponent,\n  promiseResolve,\n  proxyComponent,\n  proxyCustomElement,\n  readTask,\n  registerHost,\n  registerInstance,\n  renderVdom,\n  setAssetPath,\n  setErrorHandler,\n  setMode,\n  setNonce,\n  setPlatformHelpers,\n  setPlatformOptions,\n  setValue,\n  styles,\n  supportsConstructableStylesheets,\n  supportsListenerOptions,\n  supportsShadow,\n  win,\n  writeTask\n};\n"],"mappings":"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","ignoreList":[]}