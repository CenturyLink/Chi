function n(n){return n?(n.binary||[]).filter((n=>n[1])).map((n=>n[0])).concat((n.prefixed||[]).filter((n=>n.value)).map((n=>(n.prefix||"")+n.value+(n.suffix||"")))).concat((n.generated||[]).map((n=>n.generator(n.value)))).filter((n=>n&&n.trim())).join(" "):""}function o(n,t){return t.parentElement===n||!!t.parentElement&&o(n,t.parentElement)}const t=n=>{const o={};for(const t in n)void 0!==n[t]&&(o[t]=n[t]);return o},r=(n,o=" ")=>n.filter(Boolean).join(o);export{n as a,t as b,o as c,r as j}