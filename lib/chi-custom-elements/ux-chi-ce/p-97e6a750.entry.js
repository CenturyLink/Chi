import{r as s,h as e}from"./p-99c091ba.js";import{S as t}from"./p-1ef4f618.js";import{S as r}from"./p-7e7b520f.js";import{v as i,w as a,x as o,y as n}from"./p-e680f502.js";import{j as d}from"./p-834de5c7.js";const l=class{constructor(e){s(this,e),this.size="md"}sizeValidation(s){if(s&&!t.includes(s))throw new Error(`${s} is not a valid size for skeleton. Valid values are: xs, sm, md, lg, xl.`)}typeValidation(s){if(s&&!r.includes(s))throw new Error(`${s} is not a valid type for skeleton. Valid values are: 'square', 'rounded', 'circle', 'rounded-square'`)}componentWillLoad(){this.sizeValidation(this.size),this.typeValidation(this.type)}getSkeletonClasses(){return d([i.SKELETON,`-${this.size}`,"rounded"===this.type&&a,"circle"===this.type&&o,"square"===this.type&&n,"rounded-square"===this.type&&`${a} ${n}`])}render(){const s=this.getSkeletonClasses();return e("div",{key:"a3d1582cc30b6154a0ea106753b396c69fb9dbfa",class:s})}static get watchers(){return{size:["sizeValidation"],type:["typeValidation"]}}};export{l as chi_skeleton}