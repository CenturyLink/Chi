import{r as s,h as t}from"./p-f7c555a7.js";import{S as e}from"./p-1ef4f618.js";import{S as i}from"./p-0019854f.js";import{s as r,t as o,u as a,v as d}from"./p-70488c96.js";import{j as n}from"./p-834de5c7.js";const l=class{constructor(t){s(this,t),this.size="md",this.type=void 0}sizeValidation(s){if(s&&!e.includes(s))throw new Error(`${s} is not a valid size for skeleton. Valid values are: xs, sm, md, lg, xl.`)}typeValidation(s){if(s&&!i.includes(s))throw new Error(`${s} is not a valid type for skeleton. Valid values are: 'square', 'rounded', 'circle', 'rounded-square'`)}componentWillLoad(){this.sizeValidation(this.size),this.typeValidation(this.type)}getSkeletonClasses(){return n([r.SKELETON,`-${this.size}`,"rounded"===this.type&&o,"circle"===this.type&&a,"square"===this.type&&d,"rounded-square"===this.type&&`${o} ${d}`])}render(){const s=this.getSkeletonClasses();return t("div",{key:"b095089d070b716c7d07f30de138ded9dd5c656f",class:s})}static get watchers(){return{size:["sizeValidation"],type:["typeValidation"]}}};export{l as chi_skeleton}