import{_ as C}from"./B1-AdL93.js";import{_ as j}from"./B5KlrkA7.js";import{_ as w}from"./LNeokCJg.js";import{_ as y}from"./rD-gEhvI.js";import{w as H,x as S}from"./Bk36u_BB.js";import{a as E}from"./DJ0opCXE.js";import{e as f,f as v,o as a,w as o,b as r,j as k,a as e,d as s,c as x,i as _,n as T,t as u,F as g,l as N,k as B}from"./-E9oTzhC.js";const A=f({__name:"_size",setup($){const i=[{name:"xl",value:["18px (1.125rem)","28px (1.75rem)"]},{name:"lg",value:["16px (1rem)","24px (1.5rem)"]},{name:"md",value:["14px (0.875rem)","24px (1.5rem)"]},{name:"sm",value:["13px (0.8125rem)","20px (1.25rem)"]},{name:"xs",value:["12px (0.75rem)","16px (1rem)"]},{name:"2xs",value:["11px (0.6875rem)","16px (1rem)"]}],p={htmlblueprint:i.map(({name:n})=>`<p class="-text--${n}">The quick brown fox jumps over the lazy dog.</p>`).join(`
`)},l=(n,t)=>E(n,t);return(n,t)=>{const d=j,m=w,c=y;return a(),v(c,{padding:"-p--0",title:"Text size",id:"text-size","title-size":"h2",showSnippetTabs:!1,additionalStyle:"border: none;"},{"example-description":o(()=>t[0]||(t[0]=[e("p",{class:"-text"},[s("Text size supports the following sizes: "),e("code",null,"-text--2xs"),s(", "),e("code",null,"-text--xs"),s(", "),e("code",null,"-text--sm"),s(", "),e("code",null,"-text--md"),s(", "),e("code",null,"-text--lg"),s(", and "),e("code",null,"-text--xl"),s(". The default size is "),e("code",null,"-text--md"),s(".")],-1)])),example:o(()=>[r(d,{data:i,columns:k(H),getContent:l,additionalClasses:"-mb-0 -bordered"},null,8,["columns"])]),"code-htmlblueprint":o(()=>[r(m,{class:"html",lang:"html",code:p.htmlblueprint},null,8,["code"])]),_:1})}}}),U=f({__name:"_headings",setup($){const i=[{name:"h1",value:["48px (3rem)","64px (4rem)"]},{name:"h2",value:["32px (2rem)","48px (3rem)"]},{name:"h3",value:["24px (1.5rem)","32px (2rem)"]},{name:"h4",value:["18px (1.125rem)","32px (2rem)"]},{name:"h5",value:["16px (1rem)","24px (1.5rem)"]},{name:"h6",value:["14px (0.875rem)","24px (1.5rem)"]}],p={htmlblueprint:i.map(({name:n})=>`<p class="-text--${n}">The quick brown fox jumps over the lazy dog.</p>`).join(`
`)},l=(n,t)=>E(n,t);return(n,t)=>{const d=j,m=w,c=y;return a(),v(c,{padding:"-p--0",title:"Text headings",id:"text-headings","title-size":"h2",showSnippetTabs:!1,additionalStyle:"border: none;"},{"example-description":o(()=>t[0]||(t[0]=[e("p",{class:"-text"},[s("Use classes "),e("code",null,"-text--h1"),s(" through "),e("code",null,"-text--h6"),s(" to match Chi's default heading sizes.")],-1)])),example:o(()=>[r(d,{data:i,columns:k(H),getContent:l,additionalClasses:"-mb-0 -bordered"},null,8,["columns"])]),"code-htmlblueprint":o(()=>[r(m,{lang:"html",code:p.htmlblueprint},null,8,["code"])]),_:1})}}}),L={class:"-m--3 -show--example"},V=f({__name:"_text-line-height",setup($){const i=["-lh--1","-lh--2","-lh--3","-lh--4","-lh--5","-lh--6","-lh--7","-lh--8","-lh--9"],p={htmlblueprint:i.map(l=>`<p class="-text ${l}">${l}</p>`).join(`
`)};return(l,n)=>{const t=w,d=y;return a(),v(d,{padding:"-p--0",title:"Text line height",id:"text-line-height","title-size":"h2",showSnippetTabs:!1},{"example-description":o(()=>n[0]||(n[0]=[e("p",{class:"-text"},[s("Use shorthand utility classes to control an element's line-height. Line height sizes are equal to "),e("code",null,"$base-unit * {size}"),s(" and illustrated in green in the example below.")],-1)])),example:o(()=>[e("div",L,[(a(),x(g,null,_(i,m=>e("p",{class:T(["-text -pl--1",m])},u(m),3)),64))])]),"code-htmlblueprint":o(()=>[r(t,{class:"html",lang:"html",code:p.htmlblueprint},null,8,["code"])]),_:1})}}}),q={class:"-m--3"},F=f({__name:"_alignment",setup($){const i=["left","center","right"],p={htmlblueprint:`<p class="-text--justify">This text will render as justified</p>
${i.map(l=>`<p class="-text--${l}">This text will render as ${l} aligned</p>`).join(`
`)}`};return(l,n)=>{const t=w,d=y;return a(),v(d,{padding:"-p--0",title:"Text alignment",id:"text-alignment","title-size":"h2",showSnippetTabs:!1},{"example-description":o(()=>n[0]||(n[0]=[e("p",{class:"-text"},"Change text alignment to justified, left, center, or right.",-1)])),example:o(()=>[e("div",q,[n[1]||(n[1]=e("p",{class:"-text -text--justify"},"This text will render as justified",-1)),(a(),x(g,null,_(i,m=>e("p",{class:T(["-text",`-text--${m}`])},"This text will render as "+u(m)+" aligned",3)),64))])]),"code-htmlblueprint":o(()=>[r(t,{class:"html",lang:"html",code:p.htmlblueprint},null,8,["code"])]),_:1})}}}),P={class:"-m--3"},O=f({__name:"_decoration",setup($){const i=[{name:"no-decoration",value:"no decoration"},{name:"underline",value:"an underline"},{name:"line-through",value:"a line through"}],p={htmlblueprint:i.map(({name:l,value:n})=>`<p class="-text--${l}">This text will render with ${n}</p>`).join(`
`)};return(l,n)=>{const t=w,d=y;return a(),v(d,{padding:"-p--0",title:"Text decoration",id:"text-decoration","title-size":"h2",showSnippetTabs:!1},{"example-description":o(()=>n[0]||(n[0]=[e("p",{class:"-text"},"Change text decoration to no-decoration, underline, or line-through.",-1)])),example:o(()=>[e("div",P,[(a(),x(g,null,_(i,({name:m,value:c})=>e("p",{class:T(["-text",`-text--${m}`])},"This text will render with "+u(c),3)),64))])]),"code-htmlblueprint":o(()=>[r(t,{class:"html",lang:"html",code:p.htmlblueprint},null,8,["code"])]),_:1})}}}),R={class:"-m--3"},D=f({__name:"_transform",setup($){const i=[{name:"lowercase",value:"render as lowercase"},{name:"uppercase",value:"render as uppercase"},{name:"capitalize",value:"render as capitalize"},{name:"capitalize-fl",value:"convert UPPERCASE TEXT to lowercase and capitalize the first letter"},{name:"italic",value:"render as italic"},{name:"no-transform",value:"render with no transform"}],p={htmlblueprint:i.map(({name:l,value:n})=>`<p class="-text--${l}">This text will ${n}</p>`).join(`
`)};return(l,n)=>{const t=w,d=y;return a(),v(d,{padding:"-p--0",title:"Text transform",id:"text-transform","title-size":"h2",showSnippetTabs:!1},{"example-description":o(()=>n[0]||(n[0]=[e("p",{class:"-text"},"Change text transform to lowercase, uppercase, or capitalize.",-1)])),example:o(()=>[e("div",R,[(a(),x(g,null,_(i,({name:m,value:c})=>e("p",{class:T(["-text",`-text--${m}`])},"This text will "+u(c),3)),64))])]),"code-htmlblueprint":o(()=>[r(t,{class:"html",lang:"html",code:p.htmlblueprint},null,8,["code"])]),_:1})}}}),M={class:"-m--3"},X=f({__name:"_weight",setup($){const i=["thin","normal","semi-bold","bold","bolder","boldest"],p={htmlblueprint:i.map(l=>`<p class="-text--${l}">This text will render as ${l}</p>`).join(`
`)};return(l,n)=>{const t=w,d=y;return a(),v(d,{padding:"-p--0",title:"Text weight",id:"text-weight","title-size":"h2",showSnippetTabs:!1},{"example-description":o(()=>n[0]||(n[0]=[e("p",{class:"-text"},"Change text weight to thin, normal, semi-bold, bold, bolder, or boldest.",-1)])),example:o(()=>[e("div",M,[(a(),x(g,null,_(i,m=>e("p",{class:T(["-text",`-text--${m}`])},"This text will render as "+u(m),3)),64))])]),"code-htmlblueprint":o(()=>[r(t,{class:"html",lang:"html",code:p.htmlblueprint},null,8,["code"])]),_:1})}}}),G=f({__name:"_wrapping",setup($){const i={htmlblueprint:`<p class="-text--nowrap">This text will render without wrapping</p>
<p class="-text--truncate">This text will truncate with an ellipsis</p>`};return(h,p)=>{const l=w,n=y;return a(),v(n,{padding:"-p--0",title:"Text wrapping",id:"text-wrapping","title-size":"h2",showSnippetTabs:!1},{"example-description":o(()=>p[0]||(p[0]=[e("p",{class:"-text"},"Prevent text wrapping with nowrap or control overflow with truncate.",-1)])),example:o(()=>p[1]||(p[1]=[e("div",{class:"-m--3"},[e("p",{class:"-text -text--nowrap",style:{width:"11rem",background:"#eeeeee"}},"This text will render without wrapping"),e("p",{class:"-text -text--truncate",style:{width:"11rem"}},"This text will truncate with an ellipsis")],-1)])),"code-htmlblueprint":o(()=>[r(l,{class:"html",lang:"html",code:i.htmlblueprint},null,8,["code"])]),_:1})}}}),I={class:"chi-grid -no-gutter"},J={class:"chi-col -w--12 -w-md--6 -p--1 -d--flex -justify-content--center"},K={class:"-p--1 -p-sm--2 -text--center"},Q={class:"chi-col -w--12 -w-md--6 -bg--black -p--1 -d--flex -justify-content--center"},W={class:"-p--1 -p-sm--2 -text--center"},Y=f({__name:"_brand",setup($){const i=["body","primary"],h=["secondary","light"],p=n=>n.map(t=>`<p class="-text--${t}">-text--${t}</p>`).join(`
`),l={htmlblueprint:`<!-- For light backgrounds -->
${p(i)}
<!-- For dark backgrounds -->
${p(h)}
`};return(n,t)=>{const d=w,m=y;return a(),v(m,{padding:"-p--0",title:"Brand",id:"text-brand",showSnippetTabs:!1},{"example-description":o(()=>t[0]||(t[0]=[e("p",{class:"-text"},"Brand text colors reinforce Lumen's brand. Use primary and secondary as accents and body and light as neutrals.",-1)])),example:o(()=>[e("div",I,[e("div",J,[(a(),x(g,null,_(i,c=>e("div",K,[e("p",{class:T(["-text",`-text--${c}`])},"-text--"+u(c),3)])),64))]),e("div",Q,[(a(),x(g,null,_(h,c=>e("div",W,[e("p",{class:T(["-text",`-text--${c}`])},"-text--"+u(c),3)])),64))])])]),"code-htmlblueprint":o(()=>[r(d,{class:"html",lang:"html",code:l.htmlblueprint},null,8,["code"])]),_:1})}}}),Z={class:"chi-grid -no-gutter"},ee={class:"chi-col -w--12 -p--1 -d--flex -justify-content--center -flex--wrap"},te={class:"-p--1 -p-sm--2 -text--center"},ne=f({__name:"_semantic",setup($){const i=["success","info","danger","warning","muted"],p={htmlblueprint:i.map(l=>`<p class="-text--${l}">-text--${l}</p>`).join(`
`)};return(l,n)=>{const t=w,d=y;return a(),v(d,{padding:"-p--0",title:"Semantic",id:"text-semantic",showSnippetTabs:!1},{"example-description":o(()=>n[0]||(n[0]=[e("p",{class:"-text"},"Use semantic text colors to communicate meaning to users. Examples include displaying alerts, form field validation, user status, application state and more. Use green (success) for positive, blue (info) for informative, red (danger) for negative, yellow (warning) for needs attention, and grey (muted) for neutral. Semantic colors should never be used for decorative purposes.",-1)])),example:o(()=>[e("div",Z,[e("div",ee,[(a(),x(g,null,_(i,m=>e("div",te,[e("p",{class:T(["-text",`-text--${m}`])},"-text--"+u(m),3)])),64))])])]),"code-htmlblueprint":o(()=>[r(t,{class:"html",lang:"html",code:p.htmlblueprint},null,8,["code"])]),_:1})}}}),le={class:"chi-grid -no-gutter"},se={class:"chi-col -w--12 -p--1 -d--flex -justify-content--center -flex--wrap"},oe={class:"-p--1 -p-sm--2 -text--center"},ie=f({__name:"_complimentary",setup($){const i={htmlblueprint:`<p class="-text--navy">-text--navy</p>
<p class="-text--orange">-text--orange</p>`};return(h,p)=>{const l=w,n=y;return a(),v(n,{padding:"-p--0",title:"Brand complimentary",id:"brand-complimentary",showSnippetTabs:!1},{"example-description":o(()=>p[0]||(p[0]=[e("p",{class:"-text"},"More text colors that can be used to compliment the primary brand palette.",-1)])),example:o(()=>[e("div",le,[e("div",se,[(a(),x(g,null,_(["navy","orange"],t=>e("div",oe,[e("p",{class:T(["-text",`-text--${t}`])},"-text--"+u(t),3)])),64))])])]),"code-htmlblueprint":o(()=>[r(l,{class:"html",lang:"html",code:i.htmlblueprint},null,8,["code"])]),_:1})}}}),ae={class:"-text"},re={class:"-text"},pe={class:"-text"},me={class:"-mb--3"},ce=f({__name:"_sizes",setup($){const i=[{className:"xs",value:"x-small"},{className:"sm",value:"small"},{className:"md",value:"medium"},{className:"lg",value:"large"},{className:"xl",value:"x-large"}],h=["md--lg","xl--xs","lg--xl"],l={htmlblueprint:h.map(n=>`<p class="-text-${n}">-text--${n}</p>`).join(`
`)};return(n,t)=>{const d=C,m=w,c=y;return a(),v(c,{padding:"-p--0",title:"Sizes",id:"text-sizes",showSnippetTabs:!1},{"example-description":o(()=>[t[11]||(t[11]=e("p",{class:"-text"},[s("Text utility classes can be defined using the format "),e("code",null,"-text[-{breakpoint}]--{size}"),s(".")],-1)),r(d,{title:"{breakpoint}",id:"text-breakpoint","title-size":"h4"}),t[12]||(t[12]=e("p",{class:"-text"},"Optionally, include -{breakpoint} to apply the utility behaviour to some breakpoints. As a mobile-first library, any applying to smaller breakpoints will also modify larger ones unless another class overrides this behaviour.",-1)),e("ul",ae,[t[4]||(t[4]=e("li",null,[s("blank - leave blank to apply "),e("code",null,"text"),s(" to all breakpoints.")],-1)),(a(!0),x(g,null,_(k(S),({name:b,value:z})=>(a(),x("li",null,[e("code",null,u(b),1),t[0]||(t[0]=s(" - use to apply ")),t[1]||(t[1]=e("code",null,"margin",-1)),t[2]||(t[2]=s(" or ")),t[3]||(t[3]=e("code",null,"padding",-1)),s(" to "+u(z)+" breakpoints.",1)]))),256))]),r(d,{title:"{size}",id:"text-sizes-inner","title-size":"h4"}),e("ul",re,[(a(),x(g,null,_(i,({className:b,value:z})=>e("li",null,[e("code",null,u(b),1),t[5]||(t[5]=s(" - use to apply an ")),e("code",null,u(z),1),t[6]||(t[6]=s(" size to ")),t[7]||(t[7]=e("code",null,"text",-1))])),64))]),e("ul",pe,[(a(),x(g,null,_([6,5,4,3,2,1],b=>e("li",{key:b},[e("code",null,"h"+u(`${b}`),1),t[8]||(t[8]=s(" - use to apply an ")),e("code",null,"h"+u(`${b}`),1),t[9]||(t[9]=s(" size to ")),t[10]||(t[10]=e("code",null,"text",-1))])),64))])]),example:o(()=>[e("div",me,[(a(),x(g,null,_(h,b=>e("p",{class:T(["-text -m--3",`-text-${b}`])},"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum lacus lacus, dictum quis mauris vel, commodo condimentum odio. Praesent lacus metus, vehicula at orci ac, fringilla mollis mauris.",2)),64))])]),"code-htmlblueprint":o(()=>[r(m,{class:"html",lang:"html",code:l.htmlblueprint},null,8,["code"])]),_:1})}}}),de={class:"-text"},ue={class:"-text"},xe={class:"-mb--3"},he={class:"-m--3 -show--example"},_e=f({__name:"_line-heights",setup($){const i=["md--2","lg--4","sm--5","xl--7"],p={htmlblueprint:i.map(l=>`<p class="-text -lh-${l}">-lh-${l}</p>`).join(`
`)};return(l,n)=>{const t=C,d=w,m=y;return a(),v(m,{padding:"-p--0",title:"Line heights",id:"text-line-heights",showSnippetTabs:!1},{"example-description":o(()=>[n[7]||(n[7]=e("p",{class:"-text"},[s("Line height sizes can be defined using the format "),e("code",null,"-lh[-{breakpoint}]--{size}"),s(".")],-1)),r(t,{title:"{breakpoint}",id:"text-breakpoint","title-size":"h4"}),n[8]||(n[8]=e("p",{class:"-text"},"Optionally, include -{breakpoint} to apply the utility behaviour to some breakpoints. As a mobile-first library, any applying to smaller breakpoints will also modify larger ones unless another class overrides this behaviour.",-1)),e("ul",de,[n[2]||(n[2]=e("li",null,[s("blank - leave blank to apply "),e("code",null,"text"),s(" to all breakpoints.")],-1)),(a(!0),x(g,null,_(k(S),({name:c,value:b})=>(a(),x("li",null,[e("code",null,u(c),1),n[0]||(n[0]=s(" - use to apply ")),n[1]||(n[1]=e("code",null,"line-height",-1)),s(" to "+u(b)+" breakpoints.",1)]))),256))]),r(t,{title:"{size}",id:"text-sizes-inner","title-size":"h4"}),e("ul",ue,[n[6]||(n[6]=e("li",null,[e("code",null,"0"),s(" - use to set "),e("code",null,"line-height"),s(" and set to "),e("code",null,"0")],-1)),(a(),x(g,null,_(9,c=>e("li",{key:c},[e("code",null,u(`${c}`),1),n[3]||(n[3]=s(" - use to set ")),n[4]||(n[4]=e("code",null,"line-height",-1)),n[5]||(n[5]=s(" to ")),e("code",null,"$base-unit * "+u(`${c}`),1)])),64))])]),example:o(()=>[e("div",xe,[e("div",he,[(a(),x(g,null,_(i,c=>e("p",{class:T(["-text -pl--1",`-lh-${c}`])},"-lh-"+u(c),3)),64))])])]),"code-htmlblueprint":o(()=>[r(d,{class:"html",lang:"html",code:p.htmlblueprint},null,8,["code"])]),_:1})}}}),ge={class:"-text"},be={class:"-text"},fe={class:"-mb--3"},ve={class:"-m--3"},$e=f({__name:"_alignment-responsiveness",setup($){const i=[{className:"md--justify",value:"justified from md and larger"},{className:"lg--left",value:"left aligned from lg and larger"},{className:"sm--center",value:"center aligned from sm and larger"},{className:"xl--right",value:"right aligned from xl and larger"}],h=["justify","center","left","right"],l={htmlblueprint:i.map(({className:n,value:t})=>`<p class="-text-${n}">This text will render as ${t} breakpoints</p>`).join(`
`)};return(n,t)=>{const d=C,m=w,c=y;return a(),v(c,{padding:"-p--0",title:"Text alignment",id:"text-alignment-responsiveness",showSnippetTabs:!1},{"example-description":o(()=>[t[6]||(t[6]=e("p",{class:"-text"},[s("Text utility classes can be aligned using the format "),e("code",null,"-text[-{breakpoint}]--{alignment}"),s(".")],-1)),r(d,{title:"{breakpoint}",id:"text-breakpoint","title-size":"h4"}),t[7]||(t[7]=e("p",{class:"-text"},"Optionally, include -{breakpoint} to apply the utility behaviour to some breakpoints. As a mobile-first library, any applying to smaller breakpoints will also modify larger ones unless another class overrides this behaviour.",-1)),e("ul",ge,[t[2]||(t[2]=e("li",null,[s("blank - leave blank to apply "),e("code",null,"alignment"),s(" to all breakpoints.")],-1)),(a(!0),x(g,null,_(k(S),({name:b,value:z})=>(a(),x("li",null,[e("code",null,u(b),1),t[0]||(t[0]=s(" - use to apply ")),t[1]||(t[1]=e("code",null,"alignment",-1)),s(" to "+u(z)+" breakpoints.",1)]))),256))]),r(d,{title:"{alignment}",id:"text-sizes-inner","title-size":"h4"}),e("ul",be,[(a(),x(g,null,_(h,b=>e("li",null,[e("code",null,u(b),1),t[3]||(t[3]=s(" - use to set ")),e("code",null,u(b),1),t[4]||(t[4]=s(" the ")),t[5]||(t[5]=e("code",null,"text",-1))])),64))])]),example:o(()=>[e("div",fe,[e("div",ve,[(a(),x(g,null,_(i,({className:b,value:z})=>e("p",{class:T(["-text",`-text-${b}`])},"This text will render as "+u(z)+" breakpoints",3)),64))])])]),"code-htmlblueprint":o(()=>[r(m,{class:"html",lang:"html",code:l.htmlblueprint},null,8,["code"])]),_:1})}}}),we={class:"chi-grid__container -pt--3"},He=f({__name:"index",setup($){const i=N();return(h,p)=>{const l=C;return a(),x("div",we,[r(A),r(U),r(V),r(F),r(O),r(D),r(X),r(G),r(l,{title:"Text colors",id:"text-colors","title-size":"h2"}),p[0]||(p[0]=e("p",{class:"-text"},"Change text colors with contextual classes.",-1)),r(Y),r(ne),k(i)==="lumen"?(a(),v(ie,{key:0})):B("",!0),r(l,{title:"Responsiveness",id:"text-responsiveness","title-size":"h2"}),r(ce),r(_e),r($e)])}}});export{He as _};
