import{e as p,o as s,c as r,a as e,d as o,F as d,i,a4 as b,t as n}from"./CEIPSiTs.js";const m={class:"-text"},y={class:"-text"},k={class:"-text"},f=p({__name:"_notation",setup(v){const a=["sm","md","lg","xl"],u=[{value:"t",name:"border-top"},{value:"b",name:"border-bottom"},{value:"l",name:"border-left"},{value:"r",name:"border-right"}];return(x,l)=>(s(),r("div",null,[l[9]||(l[9]=e("h2",null,"Notation",-1)),l[10]||(l[10]=e("p",{class:"-text"},[o("Border utility classes can be defined using the format "),e("code",null,"-b{sides}[-{breakpoint}]--{size}"),o(".")],-1)),l[11]||(l[11]=e("h4",null,"{sides}",-1)),e("ul",m,[(s(),r(d,null,i(u,t=>e("li",null,[e("code",null,n(t.value),1),l[0]||(l[0]=o(" - use to apply ")),e("code",null,n(t.name),1)])),64)),l[1]||(l[1]=b("<li><code>x</code> - use to apply <code>border-left</code> and <code>border-right</code></li><li><code>y</code> - use to apply <code>border-top</code> and <code>border-bottom</code></li><li>blank - leave blank to apply <code>border</code> to all 4 sides.</li>",3))]),l[12]||(l[12]=e("h4",null,"{breakpoint}",-1)),l[13]||(l[13]=e("p",{class:"-text"},"Optionally, include -{breakpoint} to apply the utility behaviour to some breakpoints. As a mobile-first library, any applying to smaller breakpoints will also modify larger ones unless another class overrides this behaviour.",-1)),e("ul",y,[l[4]||(l[4]=e("li",null,[o("blank - leave blank to apply "),e("code",null,"border"),o(" to all breakpoints.")],-1)),(s(),r(d,null,i(a,t=>e("li",null,[e("code",null,n(t),1),l[2]||(l[2]=o(" - use to apply ")),l[3]||(l[3]=e("code",null,"border",-1)),o(" to "+n(t)+" "+n(`${t==="xl"?"":"and larger"}`)+" breakpoints.",1)])),64))]),l[14]||(l[14]=e("h4",null,"{size}",-1)),e("ul",k,[l[8]||(l[8]=e("li",null,[e("code",null,"0"),o(" - use to eliminate existing "),e("code",null,"border"),o(" and set to "),e("code",null,"0")],-1)),(s(),r(d,null,i(4,t=>e("li",{key:t},[e("code",null,n(t),1),l[5]||(l[5]=o(" - use to set ")),l[6]||(l[6]=e("code",null,"border",-1)),l[7]||(l[7]=o(" to ")),e("code",null,n(t)+"px",1)])),64))])]))}});export{f as _};
