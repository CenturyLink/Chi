import{_ as o}from"./BJfyOiY6.js";import{o as i,c as r,b as s,a4 as n}from"./CEIPSiTs.js";import{_ as a}from"./DlAUqK2U.js";import"./NAah3XrW.js";function c(p,e){const t=o;return i(),r("div",null,[s(t,{title:"Responsive Layout",id:"responsive-layout",titleSize:"h2"}),e[0]||(e[0]=n('<p class="-text">Chi defines 5 different viewports: XS, SM, MD, LG and XL. By default, columns in a grid container behave the same across viewport sizes. You will often want to change the layout based on the user&#39;s current viewport. You may accomplish this by setting viewport-specific classes to each of your columns that denote sizing or layout preferences for the viewport or viewports you are concerned with changing.<br><br>It is important to note that viewport-specific classes apply to their respective viewport and any larger viewport (unless overridden by a larger viewport class). For example, specifying <code>-w-md--6</code> would apply a width of 6 units to the column in MD, LG and XL viewports.</p><div class="chi-alert -info -my--3"><i class="chi-alert__icon chi-icon icon-circle-info"></i><div class="chi-alert__content"><p class="chi-alert__text">Try resizing your browser window to see the following examples in action as you change the viewport size.</p></div></div>',2))])}const l={},f=a(l,[["render",c]]);export{f as default};
