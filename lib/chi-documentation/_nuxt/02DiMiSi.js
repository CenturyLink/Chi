import{_ as p}from"./4a9mslvX.js";import{_ as v}from"./YUHzHwGP.js";import{T as a}from"./DmOWWIWS.js";import{e as l,c as m,o as d,m as i,a as t,d as s,j as r,F as b,f as g,w as o,b as n}from"./-E9oTzhC.js";import"./DJZW7nqp.js";import"./zoIYZcmM.js";import"./B5KlrkA7.js";import"./CXpDRGsh.js";import"./DlAUqK2U.js";import"./LNeokCJg.js";import"./rD-gEhvI.js";import"./B1-AdL93.js";const f={class:"-text"},_=["href"],w={class:"-text"},y=["href"],A=l({__name:"_accessibility",setup(c){return(h,e)=>(d(),m(b,null,[e[2]||(e[2]=i('<h2>Accessibility</h2><h3>Keyboard Navigation</h3><table class="chi-table"><thead><tr><th>Key</th><th>Function</th></tr></thead><tbody><tr><td><code>Tab</code></td><td>Moves focus to the next interactive element. Dividers should not receive focus.</td></tr><tr><td><code>Shift + Tab</code></td><td>Moves focus to the previous focusable element. The divider should not disrupt navigation.</td></tr></tbody></table>',3)),t("p",f,[e[0]||(e[0]=s("For detailed keyboard interactions, refer to our ")),t("a",{href:`${r(a)}/foundations/accessibility/using-keyboard/`,target:"_blank"},"Keyboard Control Guide.",8,_)]),e[3]||(e[3]=i('<p class="-text">Visit <a href="https://webaim.org/techniques/keyboard/" target="_blank">WebAIM</a> for general keyboard techniques.</p><div class="chi-grid"><div class="chi-col -w-sm--12 -w-md--6 -w-lg--6 -mb--3"><div class="chi-card -widget"><div class="chi-card__header"><div class="chi-card__title -text--normal">Guidance for developers</div></div><div class="chi-card__content"><div class="chi-card__caption"><ul class="-text"><li>Ensure that dividers are not focusable by setting <code>tabindex=&quot;-1&quot;</code> if necessary.</li><li>Dividers should use the correct semantic HTML, such as the <code>&lt;hr&gt;</code> element, to provide structural meaning.</li><li>If a divider is purely decorative, use <code>aria-hidden=&quot;true&quot;</code> to remove it from assistive technologies.</li><li>Provide appropriate heading levels or landmarks near dividers to aid screen reader navigation.</li><li>Avoid using dividers as interactive elements; if additional functionality is required, consider alternative solutions.</li></ul></div></div></div></div><div class="chi-col -w-sm--12 -w-md--6 -w-lg--6 -mb--3"><div class="chi-card -widget"><div class="chi-card__header"><div class="chi-card__title -text--normal">Guidance for designers</div></div><div class="chi-card__content"><div class="chi-card__caption"><ul class="-text"><li>Use dividers consistently to improve content readability and visual separation.</li><li>Ensure sufficient contrast between the divider and the background for users with low vision.</li><li>Avoid using dividers excessively, as they may create visual clutter.</li><li>Consider using spacing and typography instead of dividers when appropriate for better UX.</li></ul></div></div></div></div></div><p class="-text"> Explore live examples in the <a href="https://www.w3.org/WAI/ARIA/apg/patterns/" target="_blank">ARIA Practices Guide</a>. </p><h3>Resources</h3><ul class="-text"><li><a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/hr" target="_blank">MDN HTML hr Element: </a>Best practices for using the hr tag semantically.</li><li><a href="https://www.a11yproject.com/checklist/" target="_blank">A11Y Project Checklist: </a>Comprehensive guide for accessibility best practices. </li></ul><h3>Other recommendations</h3>',6)),t("p",w,[e[1]||(e[1]=s("Find additional accessibility tips in our ")),t("a",{href:`${r(a)}/foundations/accessibility/overview`,target:"_blank"},"Accessibility Guide.",8,y)]),e[4]||(e[4]=i('<h3>WCAG 2.2 Guidelines</h3><ul class="-text"><li><a href="https://www.w3.org/WAI/WCAG22/quickref/?versions=2.2#non-text-content" target="_blank">Non-text Content: </a>All non-text content that is presented to the user has a text alternative that serves the equivalent purpose. (Level A)</li><li><a href="https://www.w3.org/WAI/WCAG22/quickref/?versions=2.2#qr-content-structure-separation-programmatic" target="_blank">Info and Relationships: </a>Information, structure, and relationships conveyed through presentation can be programmatically determined or are available in text. (Level A)</li><li><a href="https://www.w3.org/WAI/WCAG22/quickref/?versions=2.2#qr-navigation-mechanisms-descriptive" target="_blank">Headings and Labels: </a>Headings and labels describe topic or purpose. (Level AA)</li><li><a href="https://www.w3.org/WAI/WCAG22/quickref/?versions=2.2#qr-minimize-error-cues" target="_blank">Labels or Instructions: </a>Labels or instructions are provided when content requires user input. (Level A)</li><li><a href="https://www.w3.org/WAI/WCAG22/quickref/?versions=2.2#qr-ensure-compat-rsv" target="_blank">Name, Role, Value: </a>For all user interface components (including but not limited to: form elements, links and components generated by scripts), the name and role can be programmatically determined; states, properties, and values that can be set by the user can be programmatically set; and notification of changes to these items is available to user agents, including assistive technologies. (Level A) </li></ul>',2))],64))}}),F=l({__name:"index",setup(c){return(h,e)=>{const u=p;return d(),g(u,{"hide-builder":"",title:"Divider",description:"Dividers are lines that render a break or separation between content."},{examples:o(()=>[n(v)]),accessibility:o(()=>[n(A)]),_:1})}}});export{F as default};
