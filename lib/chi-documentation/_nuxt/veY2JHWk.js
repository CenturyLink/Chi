import{V as _,N as u}from"./NAah3XrW.js";import{_ as h}from"./onyWiYp2.js";import{_ as b}from"./CAQzZ0uH.js";import{o as f,h as g,w as s,a as r,d as c,b as m}from"./CEIPSiTs.js";import{_ as x}from"./DlAUqK2U.js";import"./CnZFJwg2.js";import"./BJfyOiY6.js";import"./DtNz156Q.js";var v=Object.defineProperty,w=Object.getOwnPropertyDescriptor,P=(a,e,i,l)=>{for(var t=l>1?void 0:l?w(e,i):e,n=a.length-1,o;n>=0;n--)(o=a[n])&&(t=(l?o(e,i,t):o(t))||t);return l&&t&&v(e,i,t),t};let p=class extends _{};p=P([u({data:()=>({exampleTabs:[{active:!0,id:"webcomponent",label:"Web Component"},{id:"htmlblueprint",label:"HTML Blueprint"}],codeSnippets:{webcomponent:`<div class="chi-form__item">
  <chi-label for="example__danger">Name</chi-label>
  <chi-text-input id="example__danger" state="danger" helper-message="Please enter a name"></chi-text-input>
</div>`,htmlblueprint:`<div class="chi-form__item">
  <label class="chi-label" for="example__portal-danger">Name</label>
  <input type="text" class="chi-input -danger" id="example__portal-danger">
  <div class="chi-label -status -danger">
    <i class="chi-icon icon-circle-warning -icon--danger" aria-hidden="true"></i>
    Please enter a name
  </div>
</div>`}})})],p);function N(a,e,i,l,t,n){const o=h,d=b;return f(),g(d,{title:"Error",id:"error-portal",tabs:a.exampleTabs},{"example-description":s(()=>e[0]||(e[0]=[r("p",{class:"-text"},[c("Use the "),r("code",null,"danger"),c(" state to provide feedback to users when input data fails to validate. To meet accessibility requirements, danger inputs must include an error message explaining the failure and/or how to correct it.")],-1)])),example:s(()=>e[1]||(e[1]=[r("div",{class:"chi-grid"},[r("div",{class:"chi-col -w--12 -w-sm--8 -w-md--6 -w-lg--5"},[r("div",{class:"chi-form__item"},[r("chi-label",{for:"example__portal-danger"},"Name"),r("chi-text-input",{id:"example__portal-danger",state:"danger","helper-message":"Please enter a name"})])])],-1)])),"code-webcomponent":s(()=>[m(o,{class:"html",lang:"html",code:a.codeSnippets.webcomponent},null,8,["code"])]),"code-htmlblueprint":s(()=>[m(o,{class:"html",lang:"html",code:a.codeSnippets.htmlblueprint},null,8,["code"])]),_:1},8,["tabs"])}const j=x(p,[["render",N]]);export{j as default};
