import{_ as m}from"./Bxs95XXX.js";import{_ as f}from"./-KoY3-nf.js";import{e as d,o as r,c as b,b as l,a as s,f as u,w as x,q as h}from"./CRBsHPO5.js";import{_ as g}from"./Di-ELn2D.js";import{_ as k}from"./Cx7J_iiN.js";const v=d({__name:"_specific-breakpoints",setup(p){const n=[{title:"Flex-basis Class",key:"cell1",width:"40%"},{title:"Value",key:"cell2",width:""}],i=["auto","0","*"],o=["sm","md","lg","xl"],t=()=>o.map(e=>i.map(a=>({cell1:`<code>-flex-basis-${e}--${a}</code>`,cell2:`Visible only from <code>${e}</code>${a==="*"?", can be incremented by 5%":""}`}))).flat();return(e,a)=>{const c=m,_=f;return r(),b("div",null,[l(c,{title:"Target specific breakpoints",id:"basis-specific-breakpoints",titleSize:"h4"}),a[0]||(a[0]=s("p",{class:"-text"},"To target a specific breakpoint, add the breakpoint abbreviation to the class.",-1)),l(_,{data:t(),columns:n,additionalClasses:"-bordered"},null,8,["data"])])}}}),y=d({__name:"_all-breakpoints",setup(p){const n=[{title:"Flex-basis Class",key:"cell1",width:"40%"},{title:"Value",key:"cell2",width:""}],i=["auto","0","*"],o=()=>i.map(t=>({cell1:`<code>-flex-basis--${t}</code>`,cell2:t==="*"?"can be incremented by 5%":`<code>flex-basis: ${t};</code>`}));return(t,e)=>{const a=m,c=f;return r(),b("div",null,[l(a,{title:"Target all breakpoints",id:"basis-all-breakpoints",titleSize:"h4"}),e[0]||(e[0]=s("p",{class:"-text"},"Flex-basis utility classes with no breakpoint defined apply to all screen sizes.",-1)),l(c,{data:o(),columns:n,additionalClasses:"-bordered"},null,8,["data"])])}}}),w=d({__name:"_examples",setup(p){const n=[{comment:"<!-- flex-basis 25% on all breakpoints -->",classSuffix:"-25"},{comment:"<!-- flex-basis 50% on all breakpoints -->",classSuffix:"-50"},{comment:"<!-- flex-basis 75% from md -->",classSuffix:"md--75"},{comment:"<!-- flex-basis 50% from xl -->",classSuffix:"xl--50"}],i=[{active:!0,id:"htmlblueprint",label:"HTML Blueprint"}],o=()=>n.map(({comment:t,classSuffix:e})=>`${t}
<div class="-d--flex">
  <div class="-flex-basis-${e}"></div>
</div>`).join(`
`);return(t,e)=>{const a=g,c=k;return r(),u(c,{title:"Examples",id:"basis-examples",titleSize:"h4",padding:"-p--0",tabs:i,showSnippetTabs:!1},{example:x(()=>e[0]||(e[0]=[s("div",{class:"-p--3"},[s("div",{class:"-mb--2 -d--flex -show--example -bg--grey-10"},[s("div",{class:"-text -p--2 -flex-basis--25"},"-flex-basis--25")]),s("div",{class:"-mb--2 -d--flex -show--example -bg--grey-10"},[s("div",{class:"-text -p--2 -flex-basis--50"},"-flex-basis--50")]),s("div",{class:"-mb--2 -d--flex -show--example -bg--grey-10"},[s("div",{class:"-text -p--2 -flex-basis-md--75"},"-flex-basis-md--75")]),s("div",{class:"-d--flex -show--example -bg--grey-10"},[s("div",{class:"-text -p--2 -flex-basis-xl--50"},"-flex-basis-xl--50")])],-1)])),"code-htmlblueprint":x(()=>[l(a,{class:"html",lang:"html",code:o()},null,8,["code"])]),_:1})}}}),z=d({__name:"index",setup(p){return(n,i)=>{const o=m;return r(),b("div",null,[l(o,{title:"Basis",id:"basis",titleSize:"h3"}),i[0]||(i[0]=h('<p class="-text">Use the <code>-flex--basis*</code> class to specify the initial size of the flex item, before any available space is distributed according to the flex factors.</p><p class="-text">Flex-basis utility classes can be defined using the format <code>-flex-basis-{breakpoint}--{value}</code>. Breakpoints supported are <code>sm</code>, <code>md</code>, <code>lg</code>, and <code>xl</code>.</p>',2)),l(y),l(v),l(w)])}}});export{z as _};
