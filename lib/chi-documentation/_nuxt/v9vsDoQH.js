import{V as p,N as h}from"./NAah3XrW.js";import{_ as v}from"./_tbI9m6B.js";import{_ as m}from"./onyWiYp2.js";import{o as b,c as y,a as e,b as s,a4 as f,d as u}from"./CEIPSiTs.js";import{_ as x}from"./DlAUqK2U.js";import"./CnZFJwg2.js";var P=Object.defineProperty,g=Object.getOwnPropertyDescriptor,w=(l,t,a,o)=>{for(var n=o>1?void 0:o?g(t,a):t,i=l.length-1,d;i>=0;i--)(d=l[i])&&(n=(o?d(t,a,n):d(n))||n);return o&&n&&P(t,a,n),n};let r=class extends p{};r=w([h({data:()=>({code1:`var elemArray = document.querySelectorAll('[data-chi-epanel-group="groupName"]');
var expansionPanelsArray = chi.expansionPanel(elemArray);
// do stuff
expansionPanelsArray.forEach(function (expansionPanel) {
  expansionPanel.dispose();
});`,code2:`var elem = document.getElementById('expansion-panel-1');
var expansionPanelComponent = chi.expansionPanel(elem);
var elem2 = document.getElementById('expansion-panel-1');
var expansionPanelComponent2 = chi.expansionPanel(elem2);
expansionPanelComponent === expansionPanelComponent2; // returns true

expansionPanelComponent.dispose(); // Only have to do it once.`})})],r);function A(l,t,a,o,n,i){const d=v,c=m;return b(),y("div",null,[t[0]||(t[0]=e("h2",null,"Web Component",-1)),s(d,{tag:"chi-expansion-panel"}),t[1]||(t[1]=e("h2",null,"Chi Vue",-1)),t[2]||(t[2]=e("h3",null,"Props",-1)),t[3]||(t[3]=e("section",{class:"chi-table chi-table__options -bordered -my--3"},[e("div",{style:{"overflow-x":"auto"}},[e("table",{class:"-text",cellpadding:"0",cellspacing:"0"},[e("thead",null,[e("tr",null,[e("th",null,[e("div",null,"Property")]),e("th",null,[e("div",null,"Description")]),e("th",null,[e("div",null,"Type")]),e("th",null,[e("div",null,"Default")])])]),e("tbody",null,[e("tr",null,[e("td",null,[e("div",null,[e("code",null,"bordered")])]),e("td",null,[e("div",null,"to set the panel style to bordered")]),e("td",null,[e("div",null,[e("code",null,"boolean")])]),e("td",null,[e("div",null,[e("em",null,"undefined")])])]),e("tr",null,[e("td",null,[e("div",null,[e("code",null,"state")])]),e("td",null,[e("div",null,"to set expansion panel state. Possible values are: {'done', 'active', 'pending' (default value), and 'disabled'}")]),e("td",null,[e("div",null,[e("code",null,"string")])]),e("td",null,[e("div",null,[e("code",null,"'pending'")])])]),e("tr",null,[e("td",null,[e("div",null,[e("code",null,"stateIcon")])]),e("td",null,[e("div",null,"to render a state icon within the panel")]),e("td",null,[e("div",null,[e("code",null,"boolean")])]),e("td",null,[e("div",null,[e("code",null,"false")])])]),e("tr",null,[e("td",null,[e("div",null,[e("code",null,"step")])]),e("td",null,[e("div",null,"to set a step number next to the title of the panel")]),e("td",null,[e("div",null,[e("code",null,"string")])]),e("td",null,[e("div",null,[e("em",null,"undefined")])])]),e("tr",null,[e("td",null,[e("div",null,[e("code",null,"title")])]),e("td",null,[e("div",null,"to define expansion panel title")]),e("td",null,[e("div",null,[e("code",null,"string")])]),e("td",null,[e("div",null,[e("em",null,"undefined")])])]),e("tr",null,[e("td",null,[e("div",null,[e("code",null,"stateIconTooltip")])]),e("td",null,[e("div",null,"to define a content for state icon tooltip")]),e("td",null,[e("div",null,[e("code",null,"string")])]),e("td",null,[e("div",null,[e("em",null,"Done")])])])])])])],-1)),t[4]||(t[4]=f('<h2>JavaScript</h2><h3>Actions</h3><p class="-text">You can bind actions to activators inside the expansion panel with the <code>data-chi-epanel-action</code> attribute.</p><table class="chi-table chi-table__options -bordered"><thead><tr><th>Action</th><th>Description</th></tr></thead><tbody><tr><td><code style="word-break:initial;">pending</code></td><td>Sets the panel to the pending state. All the contents under the <code>-active--only</code> and the <code>-done--only</code> will not be visible.</td></tr><tr><td><code style="word-break:initial;">active</code></td><td>Sets the panel to the active state. All the contents under the <code>-active--only</code> will be visible.</td></tr><tr><td><code style="word-break:initial;">toggle</code></td><td>In the case the panel is previously set to active, this action sets it to pending. It sets to active state otherwise.</td></tr><tr><td><code style="word-break:initial;">done</code></td><td>Sets the panel to the done state. All the contents under the <code>-done--only</code> will be visible.</td></tr><tr><td><code style="word-break:initial;">disabled</code></td><td>Sets the panel to the disabled state. All the contents under the <code>-active--only</code> and the <code>-done--only</code> will not be visible, and the title will render in a soft grey color.</td></tr><tr><td><code style="word-break:initial;">inactive</code></td><td>Is a synonym for <code>pending</code>.</td></tr><tr><td><code style="word-break:initial;">next</code></td><td>Sets the next panel in <code>active</code> status.</td></tr><tr><td><code style="word-break:initial;">previous</code></td><td>Sets the previous panel in <code>active</code> status.</td></tr></tbody></table><p class="-text">You can freely add, remove or change the <code>data-chi-epanel-action</code> attribute on the fly, as is the main element with the <code>chi-epanel</code> class, the one which listens for the events.</p><h3>Preventing memory leaks</h3><p class="-text">Expansion panel components have a dispose function to free all resources attached to the element, such as event listeners and object data. You should call this method when you want to remove the component.</p>',7)),s(c,{lang:"javascript",code:l.code1},null,8,["code"]),t[5]||(t[5]=e("p",{class:"-text"},[u("It is safe to call the "),e("code",null,"expansionPanel"),u(" method more than once, as it will return any previously created expansion panel component associated to the element.")],-1)),s(c,{lang:"javascript",code:l.code2},null,8,["code"])])}const D=x(r,[["render",A]]);export{D as default};
