import{_ as v}from"./B1-AdL93.js";import{_ as g}from"./LNeokCJg.js";import{_ as w}from"./rD-gEhvI.js";import{e as m,f as y,o as i,w as u,b as s,a as t,c as p,i as h,n as k,t as d,F as b,d as l}from"./-E9oTzhC.js";const $={class:"chi-grid -text -no-gutter -text--center -p--2 -bg--grey-15"},S=m({__name:"_default",setup(_){const n=[0,1,2,3,4,5],o={htmlblueprint:n.map(e=>`<div class="-s--${e}"></div>`).join(`
`)};return(e,r)=>{const a=g,x=w;return i(),y(x,{title:"Default",id:"default",padding:"-p--0",showSnippetTabs:!1},{example:u(()=>[t("div",$,[(i(),p(b,null,h(n,f=>t("div",{class:k(["-p--5 -m--2 -bg--white","-s--"+f])},"-s--"+d(f),3)),64))])]),"code-htmlblueprint":u(()=>[s(a,{class:"html",lang:"html",code:o.htmlblueprint},null,8,["code"])]),_:1})}}}),C={class:"chi-grid -text -no-gutter -text--center -p--2 -bg--grey-15"},z=m({__name:"_responsive",setup(_){const n=["-s--5 -s-md--0","-s-md--5 -s-xl--0","-s-xl--5"],c={htmlblueprint:n.map(o=>`<div class="${o}"></div>`).join(`
`)};return(o,e)=>{const r=g,a=w;return i(),y(a,{title:"Responsive",id:"responsive",padding:"-p--0",showSnippetTabs:!1},{"example-description":u(()=>e[0]||(e[0]=[t("p",{class:"-text"},"Change viewport size to view the effect. You can do it by resizing your browser window.",-1)])),example:u(()=>[t("div",C,[(i(),p(b,null,h(n,x=>t("div",{class:k(["-p--5 -m--2 -bg--white",x])},d(x),3)),64))])]),"code-htmlblueprint":u(()=>[s(r,{class:"html",lang:"html",code:c.htmlblueprint},null,8,["code"])]),_:1})}}}),T={class:"-mb--4"},A=m({__name:"_sass",setup(_){const n={htmlblueprint:`@import '@centurylink/chi/src/chi/_global-variables';

.example {
  box-shadow: map-get($shadow, 1);
}`};return(c,o)=>{const e=v,r=g;return i(),p("div",T,[s(e,{title:"SASS",id:"sass","title-size":"h2"}),o[0]||(o[0]=t("p",{class:"-text"},[l("Chi defines shadows with Saas maps. The following example will render a shadow equivalent to "),t("code",null,"-s--1"),l(" / "),t("code",null,"1px"),l(".")],-1)),s(r,{lang:"html",code:n.htmlblueprint},null,8,["code"])])}}}),B={class:"-pt--3"},E={class:"-text"},N={class:"-text"},V=m({__name:"_notation",setup(_){const n=[{class:"0",value:"none"},{class:"1",value:"1px"},{class:"2",value:"4px"},{class:"3",value:"6px"},{class:"4",value:"8px"},{class:"5",value:"12px"}],c=[{class:"sm",value:"sm and larger"},{class:"md",value:"md and larger"},{class:"lg",value:"lg and larger"},{class:"xl",value:"xl"}];return(o,e)=>{const r=v;return i(),p("div",B,[s(r,{title:"Notation",id:"notation"}),e[6]||(e[6]=t("p",{class:"-text"},[l("Shadow utility classes can be defined using the format "),t("code",null,"-s[-{breakpoint}]--{size}"),l(".")],-1)),s(r,{title:"{size}",id:"size"}),t("ul",E,[(i(),p(b,null,h(n,a=>t("li",null,[t("code",null,d(a.class),1),e[0]||(e[0]=l(" - use to set ")),e[1]||(e[1]=t("code",null,"box-shadow",-1)),e[2]||(e[2]=l(" to ")),t("code",null,d(a.value),1)])),64))]),s(r,{title:"{breakpoint}",id:"breakpoint"}),e[7]||(e[7]=t("p",{class:"-text"},"Optionally, include -{breakpoint} to apply the utility behaviour to some breakpoints. As a mobile-first library, any applying to smaller breakpoints will also modify larger ones unless another class overrides this behaviour.",-1)),t("ul",N,[e[5]||(e[5]=t("li",null,[l("blank - leave blank to apply "),t("code",null,"shadow"),l(" to all breakpoints.")],-1)),(i(),p(b,null,h(c,a=>t("li",null,[t("code",null,d(a.class),1),e[3]||(e[3]=l(" - use to apply ")),e[4]||(e[4]=t("code",null,"shadow",-1)),l(" to "+d(a.value)+" breakpoints.",1)])),64))])])}}}),j={class:"chi-grid__container"},L=m({__name:"index",setup(_){return(n,c)=>{const o=v;return i(),p("div",j,[s(V),s(o,{title:"Examples",id:"examples","title-size":"h2"}),s(S),s(z),s(A)])}}});export{L as _};
