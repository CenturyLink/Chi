import{e as p,o as c,f as k,w as u,a as n,c as d,i as x,n as v,F as y,b as i,j as S,k as E,t as R,P as w,l as I,d as h}from"./CRBsHPO5.js";import{_ as T}from"./Di-ELn2D.js";import{_ as $}from"./Cx7J_iiN.js";import{_ as C}from"./-KoY3-nf.js";import{g as N}from"./CMnas7rG.js";import{b as s}from"./CioVcaN-.js";import{j as G}from"./BYS4_xFx.js";const L={class:"chi-grid -no-gutter"},B={class:"chi-col -w--12 -w-md--6 -p--1 -d--flex -justify-content--center"},H={class:"chi-col -w--12 -w-md--6 -bg--black -p--1 -d--flex -justify-content--center"},U=p({__name:"_brand-icon-color",setup(_){const l=[{active:!0,id:"htmlblueprint",label:"HTML Blueprint"}],r=["icon--dark","icon--primary","icon--grey"],t=["icon--secondary","icon--light"],e=a=>a.map(m=>`<i class="chi-icon icon-atom -md -${m}" aria-hidden="true"></i>`).join(`
`),o={htmlblueprint:`<!-- For light backgrounds -->
${e(r)}
<!-- For dark backgrounds -->
${e(t)}
`};return(a,m)=>{const g=T,f=$;return c(),k(f,{title:"Brand",id:"brand-icon-color",titleSize:"h4",tabs:l,showSnippetTabs:!1,padding:"-p--0"},{"example-description":u(()=>m[0]||(m[0]=[n("p",{class:"-text"},"Brand icon colors reinforce Lumen's brand. Use primary and secondary as accents, and dark, grey, and light as neutrals.",-1)])),example:u(()=>[n("div",L,[n("div",B,[(c(),d(y,null,x(r,b=>n("i",{class:v(`chi-icon icon-atom -md -${b} -m--1`),"aria-hidden":"true"},null,2)),64))]),n("div",H,[(c(),d(y,null,x(t,b=>n("i",{class:v(`chi-icon icon-atom -md -${b} -m--1`),"aria-hidden":"true"},null,2)),64))])])]),"code-htmlblueprint":u(()=>[i(g,{class:"html",lang:"html",code:o.htmlblueprint},null,8,["code"])]),_:1})}}}),A={class:"chi-grid -no-gutter"},Y={class:"chi-col -w--12-text--center -p--1 -d--flex -justify-content--center"},M=p({__name:"_semantic-icon-color",setup(_){const l=[{active:!0,id:"htmlblueprint",label:"HTML Blueprint"}],r=["icon--success","icon--info","icon--warning","icon--danger","icon--muted"],e={htmlblueprint:r.map(o=>`<i class="chi-icon icon-atom -md -${o}" aria-hidden="true"></i>`).join(`
`)};return(o,a)=>{const m=T,g=$;return c(),k(g,{title:"Semantic",id:"semantic-icon-color",titleSize:"h4",tabs:l,showSnippetTabs:!1,padding:"-p--0"},{"example-description":u(()=>a[0]||(a[0]=[n("p",{class:"-text"},"Use semantic text colors to communicate meaning to users. Examples include displaying alerts, form field validation, user status, application state and more. Use green (success) for positive, blue (info) for informative, red (danger) for negative, yellow (warning) for needs attention, and grey (muted) for neutral. Semantic colors should never be used for decorative purposes.",-1)])),example:u(()=>[n("div",A,[n("div",Y,[(c(),d(y,null,x(r,f=>n("i",{class:v(`chi-icon icon-atom -md -${f} -m--1`),"aria-hidden":"true"},null,2)),64))])])]),"code-htmlblueprint":u(()=>[i(m,{class:"html",lang:"html",code:e.htmlblueprint},null,8,["code"])]),_:1})}}}),z={class:"chi-grid -no-gutter"},D={class:"chi-col -w--12-text--center -p--1 -d--flex -justify-content--center"},j=p({__name:"_brand-complimentary-icon-color",setup(_){const l=[{active:!0,id:"htmlblueprint",label:"HTML Blueprint"}],r=["icon--navy","icon--orange"],t={htmlblueprint:`<i class="chi-icon icon-atom -md -icon--navy" aria-hidden="true"></i>
<i class="chi-icon icon-atom -md -icon--orange" aria-hidden="true"></i>`};return(e,o)=>{const a=T,m=$;return c(),k(m,{title:"Brand complimentary",id:"brand-complimentary-icon-color",titleSize:"h4",tabs:l,showSnippetTabs:!1,padding:"-p--0"},{"example-description":u(()=>o[0]||(o[0]=[n("p",{class:"-text"},"More icon colors that can be used to compliment the primary brand palette.",-1)])),example:u(()=>[n("div",z,[n("div",D,[(c(),d(y,null,x(r,g=>n("i",{class:v(`chi-icon icon-atom -md -${g} -m--1`),"aria-hidden":"true"},null,2)),64))])])]),"code-htmlblueprint":u(()=>[i(a,{class:"html",lang:"html",code:t.htmlblueprint},null,8,["code"])]),_:1})}}}),F=p({__name:"_brand-complimentary-background-color",setup(_){const l=[s.NAVY,s.GREY],r=(t,e)=>N(t,e);return(t,e)=>{const o=C;return c(),d("div",null,[e[0]||(e[0]=n("h4",null,"Brand complimentary",-1)),e[1]||(e[1]=n("p",{class:"-text"},"More background-colors that can be used to compliment the primary brand palette.",-1)),i(o,{data:l,getContent:r})])}}}),O=p({__name:"_brand-background-color",setup(_){const l=S(),r=[{name:s.PRIMARY.name,value:l.value!=="centurylink"?s.PRIMARY.value:s.PRIMARY_CENTURYLINK.value},{name:s.SECONDARY.name,value:l.value!=="centurylink"?s.SECONDARY.value:s.SECONDARY_CENTURYLINK.value},s.BLACK,s.WHITE],t=(e,o)=>N(e,o);return(e,o)=>{const a=C;return c(),d("div",null,[o[0]||(o[0]=n("h4",null,"Brand",-1)),o[1]||(o[1]=n("p",{class:"-text"},"More background-colors that can be used to compliment the primary brand palette.",-1)),i(a,{title:"Color Class",data:r,getContent:t})])}}}),V=p({__name:"_neutral-background-color",setup(_){const l=[s.GREY_20,s.GREY_15,s.GREY_25,s.GREY_30],r=(t,e)=>N(t,e);return(t,e)=>{const o=C;return c(),d("div",null,[e[0]||(e[0]=n("h4",null,"Neutral",-1)),e[1]||(e[1]=n("p",{class:"-text"},"Neutral background-colors provide low-contrast backgrounds for application containers, cards, and more.",-1)),i(o,{title:"Color Class",data:l,getContent:r})])}}}),P=p({__name:"_semantic-background-color",setup(_){const l=[s.SUCCESS,s.SUCCESS_LIGHT,s.SUCCESS_LIGHTER,s.INFO,s.INFO_LIGHT,s.INFO_LIGHTER,s.WARNING,s.WARNING_LIGHT,s.WARNING_LIGHTER,s.DANGER,s.DANGER_LIGHT,s.DANGER_LIGHTER,s.MUTED,s.MUTED_LIGHT,s.MUTED_LIGHTER],r=(t,e)=>N(t,e);return(t,e)=>{const o=C;return c(),d("div",null,[e[0]||(e[0]=n("h4",null,"Semantic",-1)),e[1]||(e[1]=n("p",{class:"-text"},"Use semantic background-colors to communicate meaning to users. Examples include displaying alerts, form field validation, user status, application state and more. Use green (success) for positive, blue (info) for informative, red (danger) for negative, yellow (warning) for needs attention, and grey (muted) for neutral. Semantic colors should never be used for decorative purposes.",-1)),i(o,{title:"Color Class",data:l,getContent:r})])}}}),W=p({__name:"_none-background-color",setup(_){const l=[s.BG_NONE],r=(t,e)=>N(t,e);return(t,e)=>{const o=C;return c(),d("div",null,[e[0]||(e[0]=n("h4",null,"None",-1)),e[1]||(e[1]=n("p",{class:"-text"},"Use to render an element with no background-color.",-1)),i(o,{title:"Color Class",data:l,getContent:r})])}}}),K=p({__name:"_target-specific-breakpoints",setup(_){const l=["sm","md","lg","xl"],r=["none","primary","secondary","white","black","muted","grey","grey-20","grey-30","success","info","warning","danger"],t=l.map(o=>r.map(a=>({name:`${o}--${a}`,value:o}))).flat(),e=(o,a)=>{switch(o.key){case"class":return`<code>-bg--${a.name}</code>`;case"value":return`<div class="-text">Visible only from <code>${a.value}</code></div>`;default:return""}};return(o,a)=>{const m=C;return c(),d("div",null,[a[0]||(a[0]=n("h4",null,"Target specific breakpoints",-1)),a[1]||(a[1]=n("p",{class:"-text"},"To target a specific breakpoint, add the breakpoint abbreviation to the class.",-1)),i(m,{data:E(t),columns:E(G),getContent:e},null,8,["data","columns"])])}}}),q=p({__name:"_responsive-background-examples",setup(_){const l=[{active:!0,id:"htmlblueprint",label:"HTML Blueprint"}],r=[{className:"primary",size:"on all breakpoints",additionalClassName:""},{className:"secondary",textColor:"black",additionalClassName:"sm",size:"from sm"},{className:"warning",additionalClassName:"md",size:"from md"},{className:"danger",additionalClassName:"lg",size:"from lg"},{className:"black",additionalClassName:"xl",size:"from xl"},{className:"none",textColor:"black",size:"on all breakpoints",additionalClassName:"",noColor:!0}],t=(a="",m="")=>`-bg${m?`-${m}`:""}--${a}`,o={htmlblueprint:r.map(({className:a,size:m,additionalClassName:g,noColor:f})=>`<!-- background${f?"":"-color"} ${a} ${m} -->
<div class="${t(a,g)}"></div>`).join(`
`)};return(a,m)=>{const g=T,f=$;return c(),k(f,{title:"Responsive background-color examples",id:"responsive-background-examples",titleSize:"h4",tabs:l,showSnippetTabs:!1},{example:u(()=>[(c(),d(y,null,x(r,b=>n("div",{class:v(["-text -b--1 -p--3 -m--1",t(b.className,b.additionalClassName)]),style:w(`color:${b.textColor?b.textColor:"white"}`)},R(t(b.className,b.additionalClassName)),7)),64))]),"code-htmlblueprint":u(()=>[i(g,{class:"html",lang:"html",code:o.htmlblueprint},null,8,["code"])]),_:1})}}}),J={class:"chi-grid__container -pt--3"},se=p({__name:"index",setup(_){const l=S();return(r,t)=>(c(),d("div",J,[t[0]||(t[0]=n("h2",null,"Icon color",-1)),t[1]||(t[1]=n("p",{class:"-text"},"Change icon colors with contextual classes.",-1)),i(U),i(M),E(l)!=="centurylink"?(c(),k(j,{key:0})):I("",!0),t[2]||(t[2]=n("h2",null,"Background-color",-1)),t[3]||(t[3]=n("p",{class:"-text"},[h("Define background-color classes using the format "),n("code",null,"-bg-{breakpoint}--{value}"),h(". Breakpoints supported are "),n("code",null,"sm"),h(", "),n("code",null,"md"),h(", "),n("code",null,"lg"),h(", and "),n("code",null,"xl"),h(".")],-1)),i(O),i(F),i(V),i(P),i(W),i(K),i(q)]))}});export{se as _};
