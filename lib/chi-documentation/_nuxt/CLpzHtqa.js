import{_ as h}from"./Dg5y4kC1.js";import{_ as m}from"./DyUKBX1V.js";import{T as i}from"./DhIYcLiR.js";import{e as l,c as v,o as c,m as a,a as t,d as s,j as r,F as b,f as g,w as o,b as n}from"./BnvmtQYM.js";import"./Bk5Nr_bJ.js";import"./CfKaToPi.js";import"./CpGl5nKs.js";import"./8Rn8z3Rm.js";import"./DlAUqK2U.js";import"./Cr4Krhex.js";import"./Zvpnuh4B.js";import"./DD5d-mQ_.js";import"./im4g4M07.js";const f={class:"-text"},_=["href"],w={class:"-text"},A=["href"],k=l({__name:"_accessibility",setup(d){return(u,e)=>(c(),v(b,null,[e[2]||(e[2]=a('<h2>Accessibility</h2><h3>Keyboard Navigation</h3><table class="chi-table"><thead><tr><th>Key</th><th>Function</th></tr></thead><tbody><tr><td><code>Tab</code></td><td>Moves focus to the avatar element if it is interactive (e.g., a button or link).</td></tr><tr><td><code>Shift + Tab</code></td><td>Moves focus to the previous focusable element if it is interactive.</td></tr><tr><td><code>Enter</code>,<code>Space</code></td><td>Activates the avatar action if it is a button or link.</td></tr><tr><td><code>Esc</code></td><td>Closes any associated popovers or tooltips.</td></tr></tbody></table>',3)),t("p",f,[e[0]||(e[0]=s("For detailed keyboard interactions, refer to our ")),t("a",{href:`${r(i)}/foundations/accessibility/using-keyboard/`,target:"_blank"},"Keyboard Control Guide.",8,_)]),e[3]||(e[3]=a('<p class="-text">Visit <a href="https://webaim.org/techniques/keyboard/" target="_blank">WebAIM</a> for general keyboard techniques.</p><div class="chi-grid"><div class="chi-col -w-sm--12 -w-md--6 -w-lg--6 -mb--3"><div class="chi-card -widget"><div class="chi-card__header"><div class="chi-card__title -text--normal">Guidance for developers</div></div><div class="chi-card__content"><div class="chi-card__caption"><ul class="-text"><li>If the avatar acts as a button or link, ensure it has the appropriate <code>role</code> and is keyboard-focusable.</li><li>Use <code>aria-label</code> or <code>aria-labelledby</code> to provide a meaningful description for screen readers.</li><li>If the avatar represents a user, ensure there is alternative text via <code>alt</code> on the <code>img</code> element or an <code>aria-label</code>.</li><li>Implement ARIA live regions for dynamic avatar updates, such as changes in profile images.</li><li>Ensure high contrast between avatar content and background to support low-vision users.</li></ul></div></div></div></div><div class="chi-col -w-sm--12 -w-md--6 -w-lg--6 -mb--3"><div class="chi-card -widget"><div class="chi-card__header"><div class="chi-card__title -text--normal">Guidance for designers</div></div><div class="chi-card__content"><div class="chi-card__caption"><ul class="-text"><li>Ensure avatars are distinguishable from other elements and maintain a minimum size of 44x44 pixels, as recommended by WCAG 2.5.5.</li><li>Provide alternative visual indicators for avatars (e.g., initials, icons) when an image is unavailable.</li><li>Use sufficient contrast between avatar background and foreground elements.</li><li>Ensure avatars have clear focus states when interactive (e.g., a visible outline or border).</li><li>Maintain consistent spacing and alignment to enhance visual clarity.</li></ul></div></div></div></div></div><p class="-text"> Explore live examples in the <a href="https://www.w3.org/WAI/ARIA/apg/patterns/" target="_blank">ARIA Practices Guide</a>. </p><h3>Resources</h3><ul class="-text"><li><a href="https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/img_role" target="_blank">Mozilla Resources for Developers:</a> Information about the <code>img</code> role and accessible image usage.</li><li><a href="https://www.w3.org/WAI/tutorials/images/decision-tree/" target="_blank">W3C Decision Tree:</a> A guide to choosing appropriate alt text for images.</li></ul><h3>Other recommendations</h3>',6)),t("p",w,[e[1]||(e[1]=s("Find additional accessibility tips in our ")),t("a",{href:`${r(i)}/foundations/accessibility/overview`,target:"_blank"},"Accessibility Guide.",8,A)]),e[4]||(e[4]=a('<h3>WCAG 2.2 Guidelines</h3><ul class="-text"><li><a href="https://www.w3.org/WAI/WCAG22/quickref/?versions=2.2#non-text-content" target="_blank">Non-text Content: </a>All non-text content that is presented to the user has a text alternative that serves the equivalent purpose. (Level A)</li><li><a href="https://www.w3.org/WAI/WCAG22/quickref/?versions=2.2#qr-content-structure-separation-programmatic" target="_blank">Info and Relationships: </a>Information, structure, and relationships conveyed through presentation can be programmatically determined or are available in text. (Level A)</li><li><a href="https://www.w3.org/WAI/WCAG22/quickref/?versions=2.2#qr-navigation-mechanisms-descriptive" target="_blank">Headings and Labels: </a>Headings and labels describe topic or purpose. (Level AA)</li><li><a href="https://www.w3.org/WAI/WCAG22/quickref/?versions=2.2#qr-minimize-error-cues" target="_blank">Labels or Instructions: </a>Labels or instructions are provided when content requires user input. (Level A)</li><li><a href="https://www.w3.org/WAI/WCAG22/quickref/?versions=2.2#qr-ensure-compat-rsv" target="_blank">Name, Role, Value: </a>For all user interface components (including but not limited to: form elements, links and components generated by scripts), the name and role can be programmatically determined; states, properties, and values that can be set by the user can be programmatically set; and notification of changes to these items is available to user agents, including assistive technologies. (Level A)</li></ul>',2))],64))}}),T=l({__name:"index",setup(d){return(u,e)=>{const p=h;return c(),g(p,{"hide-builder":"",title:"Avatar",description:"Avatars are used to represent users, groups, and entities."},{examples:o(()=>[n(m)]),accessibility:o(()=>[n(k)]),_:1})}}});export{T as default};
