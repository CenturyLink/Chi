import{e as g,c as b,o as i,a as e,d as s,m as $,F as h,i as v,t as p,f,w as o,b as c,n as N}from"./-E9oTzhC.js";import{_ as w}from"./LNeokCJg.js";import{_ as k}from"./rD-gEhvI.js";const C={class:"-text"},T={class:"-text"},B={class:"-text"},S=g({__name:"_notation",setup(x){const a=["sm","md","lg","xl"],n=[{value:"t",name:"border-top"},{value:"b",name:"border-bottom"},{value:"l",name:"border-left"},{value:"r",name:"border-right"}];return(u,t)=>(i(),b("div",null,[t[9]||(t[9]=e("h2",null,"Notation",-1)),t[10]||(t[10]=e("p",{class:"-text"},[s("Border utility classes can be defined using the format "),e("code",null,"-b{sides}[-{breakpoint}]--{size}"),s(".")],-1)),t[11]||(t[11]=e("h4",null,"{sides}",-1)),e("ul",C,[(i(),b(h,null,v(n,l=>e("li",null,[e("code",null,p(l.value),1),t[0]||(t[0]=s(" - use to apply ")),e("code",null,p(l.name),1)])),64)),t[1]||(t[1]=$("<li><code>x</code> - use to apply <code>border-left</code> and <code>border-right</code></li><li><code>y</code> - use to apply <code>border-top</code> and <code>border-bottom</code></li><li>blank - leave blank to apply <code>border</code> to all 4 sides.</li>",3))]),t[12]||(t[12]=e("h4",null,"{breakpoint}",-1)),t[13]||(t[13]=e("p",{class:"-text"},"Optionally, include -{breakpoint} to apply the utility behaviour to some breakpoints. As a mobile-first library, any applying to smaller breakpoints will also modify larger ones unless another class overrides this behaviour.",-1)),e("ul",T,[t[4]||(t[4]=e("li",null,[s("blank - leave blank to apply "),e("code",null,"border"),s(" to all breakpoints.")],-1)),(i(),b(h,null,v(a,l=>e("li",null,[e("code",null,p(l),1),t[2]||(t[2]=s(" - use to apply ")),t[3]||(t[3]=e("code",null,"border",-1)),s(" to "+p(l)+" "+p(`${l==="xl"?"":"and larger"}`)+" breakpoints.",1)])),64))]),t[14]||(t[14]=e("h4",null,"{size}",-1)),e("ul",B,[t[8]||(t[8]=e("li",null,[e("code",null,"0"),s(" - use to eliminate existing "),e("code",null,"border"),s(" and set to "),e("code",null,"0")],-1)),(i(),b(h,null,v(4,l=>e("li",{key:l},[e("code",null,p(l),1),t[5]||(t[5]=s(" - use to set ")),t[6]||(t[6]=e("code",null,"border",-1)),t[7]||(t[7]=s(" to ")),e("code",null,p(l)+"px",1)])),64))])]))}}),z={class:"chi-grid -text -no-gutter -text--center"},L={class:"chi-col -w--6 -w-md--3 -w-xl--2"},H=g({__name:"_border-sides",setup(x){const a=[{active:!0,id:"htmlblueprint",label:"HTML Blueprint"}],n=["-bt--1","-br--1","-bb--1","-bl--1","-bx--1","-by--1"],t={htmlblueprint:n.map(l=>`<div class="${l}"></div>`).join(`
`)};return(l,r)=>{const m=w,y=k;return i(),f(y,{title:"Border Sides",id:"border-sides","title-size":"h4",tabs:a,showSnippetTabs:!1},{"example-description":o(()=>r[0]||(r[0]=[e("p",{class:"-text"},[s("Apply borders to specific sides of an element by adding "),e("code",null,"t"),s(", "),e("code",null,"b"),s(", "),e("code",null,"l"),s(", "),e("code",null,"r"),s(", "),e("code",null,"x"),s(" or "),e("code",null,"y"),s(" to the class name.")],-1)])),example:o(()=>[e("div",z,[(i(),b(h,null,v(n,d=>e("div",L,[e("div",{class:N(["-m--1 -p--1 -py--5 -bg--grey-10",d])},p(d),3)])),64))])]),"code-htmlblueprint":o(()=>[c(m,{class:"html",lang:"html",code:t.htmlblueprint},null,8,["code"])]),_:1})}}}),E=g({__name:"_breakpoints",setup(x){const a=[{active:!0,id:"htmlblueprint",label:"HTML Blueprint"}],n={htmlblueprint:`<div class="-bx--0 -by--4 -bx-lg--4 -by-lg--0"></div>
<div class="-b--0 -b-sm--1 -b-md--2 -b-lg--3 -b-xl--4"></div>`};return(u,t)=>{const l=w,r=k;return i(),f(r,{title:"Breakpoints",id:"breakpoints","title-size":"h4",padding:"-p--2",tabs:a,showSnippetTabs:!1},{"example-description":o(()=>t[0]||(t[0]=[e("p",{class:"-text"},"Target specific breakpoints with responsive classes.",-1)])),example:o(()=>t[1]||(t[1]=[e("div",{class:"chi-grid -text -no-gutter -text--center"},[e("div",{class:"chi-col -w--6 -d--flex"},[e("div",{class:"-d--flex -flex--grow1 -align-items--center -justify-content--center -m--1 -p--1 -py--5 -bx--0 -by--4 -bx-lg--4 -by-lg--0 -bg--grey-10"},[s("-bx--0 -by--4"),e("br"),s("-bx-lg--4 -by-lg--0")])]),e("div",{class:"chi-col -w--6"},[e("div",{class:"-d--flex -flex--grow1 -align-items--center -justify-content--center -m--1 -p--1 -py--5 -b--0 -b-sm--1 -b-md--2 -b-lg--3 -b-xl--4 -bg--grey-10"},[s("-b--0 -b-sm--1"),e("br"),s("-b-md--2 -b-lg--3"),e("br"),s("-b-xl--4")])])],-1)])),"code-htmlblueprint":o(()=>[c(l,{class:"html",lang:"html",code:n.htmlblueprint},null,8,["code"])]),_:1})}}}),j={class:"chi-grid -text -no-gutter -text--center"},M={class:"chi-col -w--6 -w-md--3 -w-xl--2"},U=g({__name:"_border-sizes",setup(x){const a=[{active:!0,id:"htmlblueprint",label:"HTML Blueprint"}],n=["-b--0","-b--1","-b--2","-b--3","-b--4"],t={htmlblueprint:n.map(l=>`<div class="${l}"></div>`).join(`
`)};return(l,r)=>{const m=w,y=k;return i(),f(y,{title:"Border Sizes",id:"border-sizes","title-size":"h4",padding:"-p--2",tabs:a,showSnippetTabs:!1},{"example-description":o(()=>r[0]||(r[0]=[e("p",{class:"-text"},[s("Control an element's border size by adjusting the size from "),e("code",null,"0"),s(" - "),e("code",null,"4"),s(".")],-1)])),example:o(()=>[e("div",j,[(i(),b(h,null,v(n,d=>e("div",M,[e("div",{class:N(["-m--1 -p--1 -py--5 -bg--grey-10",d])},p(d),3)])),64))])]),"code-htmlblueprint":o(()=>[c(m,{class:"html",lang:"html",code:t.htmlblueprint},null,8,["code"])]),_:1})}}}),F={class:"chi-grid -text -no-gutter -text--center -mb--2"},D={class:"chi-grid -no-gutter -text -text--center -bg--black -text--white"},V=g({__name:"_border-color-brand",setup(x){const a=[{active:!0,id:"htmlblueprint",label:"HTML Blueprint"}],n=[{className:"base-light",title:"Base Light"},{className:"base",title:"Base"},{className:"base-dark",title:"Base Dark"},{className:"primary",title:"Primary"},{className:"black",title:"Black"}],u=[{className:"secondary",title:"Secondary"},{className:"white",title:"White"}],t=r=>r.map(({className:m})=>`<div class="-b--1 -b--${m}"></div>`).join(`
`),l={htmlblueprint:`<!-- For light backgrounds -->
${t(n)}
<!-- For dark backgrounds -->
${t(u)}
`};return(r,m)=>{const y=w,d=k;return i(),f(d,{title:"Brand",id:"brand","title-size":"h4",padding:"-p--2",tabs:a,showSnippetTabs:!1},{"example-description":o(()=>m[0]||(m[0]=[e("p",{class:"-text"},"Brand border colors reinforce Lumen's brand. Use primary and secondary as accents and base, black, and white as neutrals.",-1)])),example:o(()=>[e("div",F,[(i(),b(h,null,v(n,_=>e("div",{class:"chi-col -w--6 -w-md--3 -w-xl--2",key:_.className},[e("div",{class:N(["-m--1 -p--1 -py--5 -b--1 -b-- -bg--grey-10",`-b--${_.className==="base"?"":_.className}`])},p(_.title),3)])),64))]),e("div",D,[(i(),b(h,null,v(u,_=>e("div",{class:"chi-col -w--6 -w-md--3 -w-xl--2",key:_.className},[e("div",{class:N(["-m--1 -p--1 -py--5 -b--1",`-b--${_.className}`])},p(_.title),3)])),64))])]),"code-htmlblueprint":o(()=>[c(y,{class:"html",lang:"html",code:l.htmlblueprint},null,8,["code"])]),_:1})}}}),W={class:"chi-grid -no-gutter -text -text--center"},A=g({__name:"_border-color-semantic",setup(x){const a=[{active:!0,id:"htmlblueprint",label:"HTML Blueprint"}],n=[{className:"success",title:"Success"},{className:"success-light",secondClassName:"-bg--success-lighter",title:"Success Light"},{className:"info",title:"Info"},{className:"info-light",secondClassName:"-bg--info-lighter",title:"Info Light"},{className:"danger",title:"Danger"},{className:"danger-light",secondClassName:"-bg--danger-lighter",title:"Danger Light"},{className:"warning",title:"Warning"},{className:"warning-light",secondClassName:"-bg--warning-lighter",title:"Warning Light"}],t={htmlblueprint:n.map(({className:l})=>`<div class="-b--1 -b--${l}"></div>`).join(`
`)};return(l,r)=>{const m=w,y=k;return i(),f(y,{title:"Semantic",id:"semantic","title-size":"h4",tabs:a,showSnippetTabs:!1},{"example-description":o(()=>r[0]||(r[0]=[e("p",{class:"-text"},"Use semantic border colors to communicate meaning to users. Use green (success) for positive, blue (info) for informative, red (danger) for negative, and yellow (warning) for needs attention.",-1)])),example:o(()=>[e("div",W,[(i(),b(h,null,v(n,d=>e("div",{class:"chi-col -w--6 -w-md--3 -w-xl--2",key:d.className},[e("div",{class:N(["-m--1 -p--1 -py--5 -b--1",`-b--${d.className} ${d.secondClassName?d.secondClassName:""}`])},p(d.title),3)])),64))])]),"code-htmlblueprint":o(()=>[c(m,{class:"html",lang:"html",code:t.htmlblueprint},null,8,["code"])]),_:1})}}}),I=g({__name:"_border-color-transparent",setup(x){const a=[{active:!0,id:"htmlblueprint",label:"HTML Blueprint"}],n={htmlblueprint:'<div class="-b--1 -b--transparent"></div>'};return(u,t)=>{const l=w,r=k;return i(),f(r,{title:"Transparent",id:"transparent","title-size":"h4",tabs:a,showSnippetTabs:!1},{"example-description":o(()=>t[0]||(t[0]=[e("p",{class:"-text"},"Use the transparent border color as a method to hide an element's border without altering its size.",-1)])),example:o(()=>t[1]||(t[1]=[e("div",{class:"chi-grid -no-gutter -text -text--center"},[e("div",{class:"chi-col -w--6 -w-md--3 -w-xl--2"},[e("div",{class:"-m--1 -p--1 -py--5 -b--1 -b--transparent -bg--grey-10"},"Transparent")])],-1)])),"code-htmlblueprint":o(()=>[c(l,{class:"html",lang:"html",code:n.htmlblueprint},null,8,["code"])]),_:1})}}}),O=g({__name:"_border-color-responsive",setup(x){const a=[{active:!0,id:"htmlblueprint",label:"HTML Blueprint"}],n={htmlblueprint:'<div class="-b--1 -b--primary -b-sm--dark -b-md--danger -b-lg--success -b-xl--warning"></div>'};return(u,t)=>{const l=w,r=k;return i(),f(r,{title:"Responsive",id:"responsive","title-size":"h4",padding:"-p--2",tabs:a,showSnippetTabs:!1},{"example-description":o(()=>t[0]||(t[0]=[e("p",{class:"-text"},[s("Use breakpoint classes to change an element's border color on different viewports. Follow the format "),e("code",null,"-b[-{breakpoint}]--{color}"),s(".")],-1)])),example:o(()=>t[1]||(t[1]=[e("div",{class:"chi-grid -no-gutter -text -text--center"},[e("div",{class:"chi-col -w--8"},[e("div",{class:"-m--1 -p--1 -py--4 -b--1 -b--primary -b-sm--dark -b-md--danger -b-lg--success -b-xl--warning -bg--grey-10"},"-b--primary -b-sm--dark -b-md--danger -b-lg--success -b-xl--warning")])],-1)])),"code-htmlblueprint":o(()=>[c(l,{class:"html",lang:"html",code:n.htmlblueprint},null,8,["code"])]),_:1})}}}),P={class:"chi-grid__container -pt--3"},J=g({__name:"index",setup(x){return(a,n)=>(i(),b("div",P,[c(S),n[0]||(n[0]=e("h2",null,"Examples",-1)),c(H),c(E),c(U),n[1]||(n[1]=e("h3",null,"Border Colors",-1)),n[2]||(n[2]=e("p",{class:"-text"},"Use contextual color classes to change a border's color.",-1)),c(V),c(A),c(I),c(O)]))}});export{J as _};
