import{_ as m}from"./BJfyOiY6.js";import{_}from"./BQrEJqwa.js";import{l as c}from"./Cq1bO1Ih.js";import{e as u,o as b,c as f,b as o,a as l,k as a}from"./CEIPSiTs.js";const x=u({__name:"_width",setup(k){const n=["auto","*"],r=["sm","md","lg","xl"],p=n.map(e=>({class:`<code>-w--${e}</code>`,value:e==="*"?"can be incremented by 5%":`<code>width: ${e};</code>`})),d=r.map(e=>n.map(t=>({class:`<code>-w-${e}--${t}</code>`,value:`Visible only from <code>${e}</code>${t==="*"?", can be incremented by 5%":""}`}))).flat();return(e,t)=>{const s=m,i=_;return b(),f("div",null,[o(s,{title:"Width",id:"width",titleSize:"h2"}),o(s,{title:"Target all breakpoints",id:"target-all-breakpoints"}),t[0]||(t[0]=l("p",{class:"-text"},"Sizing utility classes with no breakpoint defined apply to all screen sizes.",-1)),o(i,{data:a(p),columns:a(c)},null,8,["data","columns"]),o(s,{title:"Target specific breakpoints",id:"target-specific-breakpoints"}),t[1]||(t[1]=l("p",{class:"-text"},"To target a specific breakpoint, add the breakpoint abbreviation to the class.",-1)),o(i,{data:a(d),columns:a(c)},null,8,["data","columns"])])}}});export{x as _};
