import{_ as g}from"./Di-ELn2D.js";import{_ as b}from"./Cx7J_iiN.js";import{e as _,o as l,c as s,a as e,F as o,i as r,t as d,b as p,w as c,d as u}from"./CRBsHPO5.js";const v={class:"-mb--3"},w=_({__name:"_specific-breakpoints",setup(x){const i=["sm","md","lg","xl"];return(m,a)=>(l(),s("div",null,[a[0]||(a[0]=e("p",{class:"-text"},"Target specific breakpoints with Fill responsive classes.",-1)),e("ul",v,[(l(),s(o,null,r(2,t=>e("li",null,[e("code",null,d(`-flex--grow${t-1}`),1)])),64)),(l(),s(o,null,r(i,t=>(l(),s(o,null,[(l(),s(o,null,r(2,n=>e("li",null,[e("code",null,d(`-flex-${t}--grow${n-1}`),1)])),64))],64))),64))])]))}}),T=_({__name:"index",setup(x){const i=[{active:!0,id:"htmlblueprint",label:"HTML Blueprint"}],m=()=>`<div class="-d--flex">
${Array(3).fill(0).map((t,n)=>`  <div${n?"":' class="-flex--grow1"'}>Item</div>`).join(`
`)}
</div>`;return(a,t)=>{const n=g,f=b;return l(),s("div",null,[p(f,{title:"Grow",id:"grow",titleSize:"h3",padding:"-p--0",tabs:i,showSnippetTabs:!1},{"example-description":c(()=>t[0]||(t[0]=[e("p",{class:"-text"},[u("Use the "),e("code",null,"-flex--grow*"),u(" class to toggle a flex item's ability to grow and take up all available space.")],-1)])),example:c(()=>t[1]||(t[1]=[e("div",{class:"-mb--2 -p--3 -d--flex -show--example"},[e("div",{class:"-text -p--2 -flex--grow1"},"Item"),e("div",{class:"-text -p--2"},"Item"),e("div",{class:"-text -p--2"},"Item")],-1)])),"code-htmlblueprint":c(()=>[p(n,{class:"html",lang:"html",code:m()},null,8,["code"])]),_:1}),p(w)])}}});export{T as _};
