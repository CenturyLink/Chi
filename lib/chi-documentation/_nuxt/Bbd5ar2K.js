import{_ as m}from"./tYJG4N2n.js";import{u}from"./DD-5D3CJ.js";import{e as c,c as p,o as r,a as n,b as o,j as _,f as v,w as x,i as k,n as g,t as $,F as h,d as i}from"./CmP53kv-.js";import{_ as w}from"./C_gFFCTR.js";import{_ as C}from"./CmWk2xIH.js";const T=c({__name:"_target-specific-breakpoints",setup(d){const t=["sm","md","lg","xl"],s=(l,e)=>{switch(l.key){case"class":return`<code>-d--${e}--none</code>`;case"value":return`<div class="-text">Hidden only on <code>${e}</code></div>`;default:return""}};return(l,e)=>{const a=m;return r(),p("div",null,[e[0]||(e[0]=n("h3",null,"Target specific breakpoints",-1)),e[1]||(e[1]=n("p",{class:"-text"},"To target a specific breakpoint, add the breakpoint abbreviation to the class. As a mobile first framework, it will apply to that specific breakpoint and up.",-1)),o(a,{data:t,columns:_(u),getContent:s},null,8,["columns"])])}}}),N=c({__name:"_special-display-classes",setup(d){const t=[{name:"-sr--only",value:"Screen reader only"},{name:"-d-screen--only",value:["display: block;","on @media screen,","display: none;","on @media print."]},{name:"-d-print--only",value:["display: none;","on @media screen,","display: block;","on @media print."]}],s=(l,e)=>{switch(l.key){case"class":return`<code>-d--${e.name}--none</code>`;case"value":return typeof e.value=="string"?e.value:`<code>${e.value[0]}</code>${e.value[1]} <code>${e.value[2]}</code>${e.value[3]}`;default:return""}};return(l,e)=>{const a=m;return r(),p("div",null,[e[0]||(e[0]=n("h3",null,"Special display classes",-1)),e[1]||(e[1]=n("p",{class:"-text"},"To target screen readers only or a specific media type (@media screen or @media print), use the below classes.",-1)),o(a,{data:t,columns:_(u),getContent:s},null,8,["columns"])])}}}),S=c({__name:"_target-all-breakpoints",setup(d){const t=["none","inline","inline-block","block","table","table-cell","table-row","flex","inline-flex"],s=(l,e)=>{switch(l.key){case"class":return`<code>-d--${e}</code>`;case"value":return`<code>display:  ${e};</code>`;default:return""}};return(l,e)=>{const a=m;return r(),p("div",null,[e[0]||(e[0]=n("h3",null,"Target all breakpoints",-1)),e[1]||(e[1]=n("p",{class:"-text"},"Display utility classes with no breakpoint defined apply to all screen sizes.",-1)),o(a,{data:t,columns:_(u),getContent:s},null,8,["columns"])])}}}),B={class:"-show--example"},D=c({__name:"_display-examples",setup(d){const t=[{className:"-d--none -d-xl--inline-flex",comment:"hidden on all breakpoints except xl"},{className:"-d-sm--none",comment:"hidden on sm breakpoints"},{className:"-d--inline-flex",comment:"inline-flex on all breakpoints"},{className:"-d--flex",comment:"flex on all breakpoints"}],l={htmlblueprint:t.map(({className:e,comment:a})=>`<!-- ${a} -->
<div class="${e}"></div>`).join(`
`)};return(e,a)=>{const b=w,y=C;return r(),v(y,{title:"Examples",id:"display-examples",showSnippetTabs:!1,titleSize:"h2"},{example:x(()=>[n("div",B,[(r(),p(h,null,k(t,({className:f})=>n("div",{class:g(["-text -p--3 -m--1",f])},$(f),3)),64))])]),"code-htmlblueprint":x(()=>[o(b,{class:"html",lang:"html",code:l.htmlblueprint},null,8,["code"])]),_:1})}}}),z={class:"chi-grid__container -pt--3"},A=c({__name:"index",setup(d){return(t,s)=>(r(),p("div",z,[s[0]||(s[0]=n("h2",null,"Notation",-1)),s[1]||(s[1]=n("p",{class:"-text"},[i("Display utility classes can be defined using the format "),n("code",null,"-d-{breakpoint}--{value}"),i(". Breakpoints supported are "),n("code",null,"sm"),i(", "),n("code",null,"md"),i(", "),n("code",null,"lg"),i(", and "),n("code",null,"xl"),i(".")],-1)),o(S),o(T),o(N),o(D)]))}});export{A as _};
