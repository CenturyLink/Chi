import{_ as h}from"./BJfyOiY6.js";import{_ as y}from"./onyWiYp2.js";import{_ as v}from"./CAQzZ0uH.js";import{m as T}from"./Cq1bO1Ih.js";import{e as N,o as s,h as w,w as r,a as t,d as l,b as m,c as o,i as p,t as a,k as B,F as u,n as C}from"./CEIPSiTs.js";const S={class:"-text"},$={class:"-text"},j={class:"-mb--3"},z={class:"-m--3"},M=N({__name:"_alignment-responsiveness",setup(H){const g=[{active:!0,id:"htmlblueprint",label:"HTML Blueprint"}],d=[{className:"md--justify",value:"justified from md and larger"},{className:"lg--left",value:"left aligned from lg and larger"},{className:"sm--center",value:"center aligned from sm and larger"},{className:"xl--right",value:"right aligned from xl and larger"}],x=["justify","center","left","right"],f={htmlblueprint:d.map(({className:c,value:e})=>`<p class="-text-${c}">This text will render as ${e} breakpoints</p>`).join(`
`)};return(c,e)=>{const b=h,_=y,k=v;return s(),w(k,{padding:"-p--0",title:"Text alignment",id:"text-alignment-responsiveness",tabs:g,showSnippetTabs:!1},{"example-description":r(()=>[e[6]||(e[6]=t("p",{class:"-text"},[l("Text utility classes can be used with the format "),t("code",null,"-text[-{breakpoint}]--{alignment}"),l(".")],-1)),m(b,{title:"{breakpoint}",id:"text-breakpoint",titleSize:"h4"}),e[7]||(e[7]=t("p",{class:"-text"},"Optionally, include -{breakpoint} to apply the utility behaviour to some breakpoints. As a mobile-first library, any applying to smaller breakpoints will also modify larger ones unless another class overrides this behaviour.",-1)),t("ul",S,[e[2]||(e[2]=t("li",null,[l("blank - leave blank to apply "),t("code",null,"alignment"),l(" to all breakpoints.")],-1)),(s(!0),o(u,null,p(B(T),({name:n,value:i})=>(s(),o("li",null,[t("code",null,a(n),1),e[0]||(e[0]=l(" - use to apply ")),e[1]||(e[1]=t("code",null,"alignment",-1)),l(" to "+a(i)+" breakpoints.",1)]))),256))]),m(b,{title:"{alignment}",id:"text-sizes-inner",titleSize:"h4"}),t("ul",$,[(s(),o(u,null,p(x,n=>t("li",null,[t("code",null,a(n),1),e[3]||(e[3]=l(" - use to set ")),t("code",null,a(n),1),e[4]||(e[4]=l(" the ")),e[5]||(e[5]=t("code",null,"text",-1))])),64))])]),example:r(()=>[t("div",j,[t("div",z,[(s(),o(u,null,p(d,({className:n,value:i})=>t("p",{class:C(["-text",`-text-${n}`])},"This text will render as "+a(i)+" breakpoints",3)),64))])])]),"code-htmlblueprint":r(()=>[m(_,{class:"html",lang:"html",code:f.htmlblueprint},null,8,["code"])]),_:1})}}});export{M as _};
