import{_ as b}from"./CwWdfYK8.js";import{_ as g}from"./DlQipW05.js";import{T as l}from"./DUA-YDj1.js";import{e as p,c as v,o as h,m as r,a as i,d as s,j as d,F as y,y as _,f as w,w as c,b as u}from"./CmP53kv-.js";import"./CDht6vRo.js";import"./C3x5fPEm.js";import"./tYJG4N2n.js";import"./BngLxHOz.js";import"./DlAUqK2U.js";import"./C_gFFCTR.js";import"./CmWk2xIH.js";import"./GMWfc-pl.js";const A={class:"-text"},k=["href"],x={class:"-text"},q=["href"],W=p({__name:"_accessibility",setup(f){return(o,e)=>(h(),v(y,null,[e[4]||(e[4]=r('<h2>Accessibility</h2><h3>Keyboard Navigation</h3><table class="chi-table"><thead><tr><th>Key</th><th>Function</th></tr></thead><tbody><tr><td><code>Tab</code></td><td>Moves focus to the next focusable element </td></tr><tr><td><code>Shift + Tab</code></td><td>Moves focus to the previous focusable element </td></tr><tr><td><code>Enter or Space</code></td><td>Opens the file picker dialog when the file input is focused</td></tr></tbody></table>',3)),i("p",A,[e[0]||(e[0]=s("For comprehensive details on keyboard support for input fields, refer to our ")),i("a",{href:`${d(l)}/foundations/accessibility/using-keyboard/`,target:"_blank"},"Keyboard Control Guide",8,k),e[1]||(e[1]=s("."))]),e[5]||(e[5]=r('<p class="-text">Visit <a href="https://webaim.org/techniques/keyboard/" target="_blank">WebAIM</a> for keyboard techniques.</p><div class="chi-grid"><div class="chi-col -w-sm--12 -w-md--6 -w-lg--6 -mb--3"><div class="chi-card -widget"><div class="chi-card__header"><div class="chi-card__title -text--normal">Guidance for developers</div></div><div class="chi-card__content"><div class="chi-card__caption"></div><ul class="-text"><li>Use clear and descriptive labels for file inputs to help users understand their purpose.</li><li>Ensure each file input has an associated <code>label</code> element using the <code>for</code> attribute to match the <code>id</code> attribute of the file input.</li><li>Assign unique <code>id</code> attributes to each file input to maintain accessibility and prevent conflicts.</li><li>The <code>fieldset</code> surrounds the entire grouping of file inputs or radio buttons. The <code>legend</code> provides a description for the grouping.</li><li>Use the <code>aria-describedby</code> attribute to associate error messages with file inputs for accessibility.</li><li>Ensure that error messages are tagged with unique id attributes and referenced correctly with <code>aria-describedby</code> on corresponding file inputs.</li></ul></div></div></div><div class="chi-col -w-sm--12 -w-md--6 -w-lg--6 -mb--3"><div class="chi-card -widget"><div class="chi-card__header"><div class="chi-card__title -text--normal">Guidance for designers</div></div><div class="chi-card__content"><div class="chi-card__caption"></div><ul class="-text"><li>Ensure focus indicators are clearly visible to aid navigation for keyboard users.</li><li>Keep input labels visible, even when fields are focused.</li><li>Use contrasting colors for text and backgrounds to enhance readability.</li><li>Design clear error states and feedback for accessibility.</li><li>Use spacing, typography, and visual cues effectively.</li><li>Maintain consistency in the design of file inputs to provide a cohesive user experience.</li></ul></div></div></div></div><p class="-text"> Find live examples in the <a href="https://a11y-style-guide.com/style-guide/section-forms.html#kssref-forms-text-fields" target="_blank">A11y style guide</a>.</p><h3>Roles and attributes</h3><p class="-text"> WAI-ARIA provides a grouping role that functions similarly to fieldset and legend.</p><table class="chi-table"><thead><tr><th>Role</th><th>Element</th><th>Usage</th></tr></thead><tbody><tr><td><code>group</code></td><td><code>div</code></td><td>Identifies the <code>div</code>element as a group container for the file inputs.</td></tr></tbody></table><h3>Resources</h3><ul class="-text"><li><a href="https://a11y-style-guide.com/style-guide/" target="_blank">A11y Style Guide</a>: Gives core recommendations for accessible forms.</li><li><a href="https://www.w3.org/WAI/tutorials/forms/" target="_blank">W3C Forms Tutorial</a>: Provides guidance on creating accessible forms.</li><li><a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#technical_summary" target="_blank">Mozilla Developer Guides</a>: Find technical summary for the file inputs.</li></ul><h3>Other recommendations</h3>',9)),i("p",x,[e[2]||(e[2]=s("Explore additional accessibility tips in the general ")),i("a",{href:`${d(l)}/foundations/accessibility/overview`,target:"_blank"},"Accessibility Guide",8,q),e[3]||(e[3]=s("."))]),e[6]||(e[6]=r('<h3>WCAG 2.2 Guidelines</h3><ul class="-text"><li><a href="https://www.w3.org/WAI/WCAG22/quickref/?versions=2.2#non-text-content" target="_blank">Non-text Content</a>: All non-text content that is presented to the user has a text alternative that serves the equivalent purpose. (Level A)</li><li><a href="https://www.w3.org/WAI/WCAG22/quickref/?versions=2.2#qr-content-structure-separation-programmatic" target="_blank">Info and Relationships</a>: Information, structure, and relationships conveyed through presentation can be programmatically determined or are available in text. (Level A)</li><li><a href="https://www.w3.org/WAI/WCAG22/quickref/?versions=2.2#qr-navigation-mechanisms-descriptive" target="_blank">Headings and Labels</a>: Headings and labels describe topic or purpose. (Level AA)</li><li><a href="https://www.w3.org/WAI/WCAG22/quickref/?versions=2.2#qr-minimize-error-cues" target="_blank">Labels or Instructions</a>: Labels or instructions are provided when content requires user input. (Level A)</li><li><a href="https://www.w3.org/WAI/WCAG22/quickref/?versions=2.2#qr-ensure-compat-rsv" target="_blank">Name, Role, Value</a>: For all user interface components (including but not limited to: form elements, links and components generated by scripts), the name and role can be programmatically determined; states, properties, and values that can be set by the user can be programmatically set; and notification of changes to these items is available to user agents, including assistive technologies. (Level A)</li></ul>',2))],64))}}),V=p({__name:"index",setup(f){const o=()=>{document.querySelectorAll('input[type="file"].chi-file-input').forEach(a=>{const t=a.nextElementSibling;a.addEventListener("change",m=>{const n=m.target.value.split("\\").pop();t&&n&&(t.innerHTML=n)})})};return _(()=>{o()}),(e,a)=>{const t=b;return h(),w(t,{"hide-builder":"",title:"File input",description:"File inputs are used to select one or more files from a user's device storage."},{examples:c(()=>[u(g)]),accessibility:c(()=>[u(W)]),_:1})}}});export{V as default};
