import{_ as d}from"./BJfyOiY6.js";import{_ as u}from"./BQrEJqwa.js";import{l}from"./Cq1bO1Ih.js";import{e as _,o as f,c as b,b as o,a as c,k as a}from"./CEIPSiTs.js";const B=_({__name:"_height",setup(g){const n=["auto","25","50","75","100"],r=["sm","md","lg","xl"],p=n.map(t=>({class:`<code>-h--${t}</code>`,value:`<code>height: ${t}${t!=="auto"?"%":""};</code>`})),m=r.map(t=>n.map(e=>({class:`<code>-h-${t}--${e}</code>`,value:`Visible only from <code>${t}</code>`}))).flat();return(t,e)=>{const s=d,i=u;return f(),b("div",null,[o(s,{title:"Height",id:"height",titleSize:"h2"}),o(s,{title:"Target all breakpoints",id:"target-all-breakpoints-1"}),e[0]||(e[0]=c("p",{class:"-text"},"Sizing utility classes with no breakpoint defined apply to all screen sizes.",-1)),o(i,{data:a(p),columns:a(l)},null,8,["data","columns"]),o(s,{title:"Target specific breakpoints",id:"target-specific-breakpoints-1"}),e[1]||(e[1]=c("p",{class:"-text"},"To target a specific breakpoint, add the breakpoint abbreviation to the class.",-1)),o(i,{data:a(m),columns:a(l)},null,8,["data","columns"])])}}});export{B as _};
