import{_ as p}from"./CwhRWPbj.js";import{_ as m}from"./DlAy_Xl6.js";import{T as s}from"./Dh0js0RM.js";import{e as n,o as c,c as v,m as i,a as t,d as a,k as r,F as f,f as b,w as o,b as l}from"./DbZ0H-_C.js";import"./CuuzEXM3.js";import"./C6_eHtQE.js";import"./DqzXqar1.js";import"./DyIhxqzR.js";import"./DlAUqK2U.js";import"./COVoLJ_Y.js";import"./B7NIkgJJ.js";import"./CFktYPGR.js";import"./BlEjq2Oq.js";import"./CrIbijoJ.js";const g={class:"-text"},_=["href"],A={class:"-text"},w=["href"],y=n({__name:"_accessibility",setup(d){return(u,e)=>(c(),v(f,null,[e[2]||(e[2]=i('<h2>Accessibility</h2><h3>Keyboard Navigation</h3><table class="chi-table"><thead><tr><th>Key</th><th>Function</th></tr></thead><tbody><tr><td><code>Tab</code></td><td>Moves focus to the next focusable element. If focus is on the alert, moves to the next interactive element.</td></tr><tr><td><code>Shift + Tab</code></td><td>Moves focus to the previous focusable element.</td></tr><tr><td><code>Enter</code>,<code>Space</code></td><td>Activates interactive elements within the alert, such as dismiss buttons or links.</td></tr><tr><td><code>Esc</code></td><td>Closes the alert if it is dismissible.</td></tr></tbody></table>',3)),t("p",g,[e[0]||(e[0]=a("For detailed keyboard interactions, refer to our ")),t("a",{href:`${r(s)}/foundations/accessibility/using-keyboard/`,target:"_blank"},"Keyboard Control Guide.",8,_)]),e[3]||(e[3]=i('<p class="-text">Visit <a href="https://webaim.org/techniques/keyboard/" target="_blank">WebAIM</a> for general keyboard techniques.</p><div class="chi-grid"><div class="chi-col -w-sm--12 -w-md--6 -w-lg--6 -mb--3"><div class="chi-card -widget"><div class="chi-card__header"><div class="chi-card__title -text--normal">Guidance for developers</div></div><div class="chi-card__content"><div class="chi-card__caption"><ul class="-text"><li>Ensure that alerts use appropriate ARIA roles such as <code>role=&quot;alert&quot;</code> for important messages.</li><li>Provide a clear and meaningful message in the alert content.</li><li>If an alert is dismissible, ensure the close button is keyboard accessible and has a descriptive <code>aria-label</code>.</li><li>Use <code>aria-live=&quot;polite&quot;</code> or <code>aria-live=&quot;assertive&quot;</code> to notify assistive technologies of dynamic alerts.</li><li>Avoid using alerts for non-essential notifications that could disrupt user experience.</li></ul></div></div></div></div><div class="chi-col -w-sm--12 -w-md--6 -w-lg--6 -mb--3"><div class="chi-card -widget"><div class="chi-card__header"><div class="chi-card__title -text--normal">Guidance for designers</div></div><div class="chi-card__content"><div class="chi-card__caption"><ul class="-text"><li>Alerts should be visually distinct from other content using color, iconography, and typography.</li><li>Ensure a high contrast ratio between the text and background colors.</li><li>Dismiss buttons should be clearly visible and easy to interact with.</li><li>Consider the appropriate level of urgency when choosing alert styles (info, success, warning, danger).</li><li>Avoid using color alone to convey meaningâ€”include an icon or textual explanation.</li></ul></div></div></div></div></div><p class="-text"> Explore live examples in the <a href="https://www.w3.org/WAI/ARIA/apg/patterns/" target="_blank">ARIA Practices Guide</a>. </p><h3>Resources</h3><ul class="-text"><li><a href="https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/Alert_Role" target="_blank">Mozilla Resources for Developers:</a> Best practices for implementing the <code>role=&quot;alert&quot;</code>.</li><li><a href="https://webaim.org/techniques/aria/" target="_blank">WebAIM ARIA Guide:</a> Techniques for using ARIA effectively.</li></ul><h3>Other recommendations</h3>',6)),t("p",A,[e[1]||(e[1]=a("Find additional accessibility tips in our ")),t("a",{href:`${r(s)}/foundations/accessibility/overview`,target:"_blank"},"Accessibility Guide.",8,w)]),e[4]||(e[4]=i('<h3>WCAG 2.2 Guidelines</h3><ul class="-text"><li><a href="https://www.w3.org/WAI/WCAG22/quickref/?versions=2.2#non-text-content" target="_blank">Non-text Content:</a> Ensure all badges conveying information have a text alternative. (Level A)</li><li><a href="https://www.w3.org/WAI/WCAG22/quickref/?versions=2.2#qr-content-structure-separation-programmatic" target="_blank">Info and Relationships:</a> Maintain semantic structure for screen readers. (Level A)</li><li><a href="https://www.w3.org/WAI/WCAG22/quickref/?versions=2.2#qr-navigation-mechanisms-descriptive" target="_blank">Headings and Labels:</a> Ensure badges have meaningful labels. (Level AA)</li><li><a href="https://www.w3.org/WAI/WCAG22/quickref/?versions=2.2#qr-minimize-error-cues" target="_blank">Labels or Instructions:</a> Provide clear instructions for dismissible badges. (Level A)</li><li><a href="https://www.w3.org/WAI/WCAG22/quickref/?versions=2.2#qr-ensure-compat-rsv" target="_blank">Name, Role, Value:</a> Define ARIA attributes correctly for badges. (Level A) </li></ul>',2))],64))}}),B=n({__name:"index",setup(d){return(u,e)=>{const h=p;return c(),b(h,{"hide-builder":"",title:"Alert",description:"Alert messages provide contextual feedback for user actions.","properties-tag":"chi-alert"},{examples:o(()=>[l(m)]),accessibility:o(()=>[l(y)]),_:1})}}});export{B as default};
