ARG BASE_VERSION=latest
FROM nexusprod.corp.intranet:4567/jsl-docker-standard-images/base_agent:$BASE_VERSION AS base_agent
FROM nexusprod.corp.intranet:4567/jsl-docker-standard-images/sonarqube_agent:$BASE_VERSION AS sonar_agent
FROM nexusprod.corp.intranet:4567/jsl-docker-standard-images/jira_agent:$BASE_VERSION AS jira_agent
FROM nexusprod.corp.intranet:4567/node:erbium-buster

LABEL Description="This is a base image, which provides a cypress environment"

ARG user=jenkins
ARG group=jenkins
ARG uid=1341
ARG gid=1341
RUN getent group ${gid} || groupadd -g ${gid} ${group}
RUN useradd -c "Jenkins user" -d /home/${user} -u ${uid} -g ${gid} -m ${user}

WORKDIR /home/${user}
ENV CURLOPTIONS "-SsLk --fail"
SHELL ["/bin/bash", "-o", "pipefail", "-c"]

USER root

# https://www.slimjet.com/chrome/download-chrome.php?file=files%2F86.0.4240.75%2Fgoogle-chrome-stable_current_amd64.deb
# https://www.slimjet.com/chrome/download-chrome.php?file=files%2F71.0.3578.80%2Fgoogle-chrome-stable_current_amd64.deb

RUN apt-get update && \
    apt-get --no-install-recommends -yqq install wget yajl-tools software-properties-common build-essential zip git curl default-jre python3 python3-setuptools ssh shellcheck sysstat make python3-pip pylint gnupg rsync bash gettext-base unzip git curl jq pylint gnupg cpio sshpass libmagic1 && \
    curl ${CURLOPTIONS} https://www.slimjet.com/chrome/download-chrome.php?file=files%2F71.0.3578.80%2Fgoogle-chrome-stable_current_amd64.deb -o google-chrome-stable_current_amd64.deb && \
    apt-get update && \
    apt-get upgrade -y && \
    apt-get --no-install-recommends -yqq install ./google-chrome-stable_current_amd64.deb expect libgconf-2-4 xvfb busybox && \
    rm ./google-chrome-stable_current_amd64.deb && \
    apt-get autoremove -y && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* && \
    update-alternatives --install /usr/bin/python python /usr/bin/python2 1 && \
    update-alternatives --install /usr/bin/python python /usr/bin/python3 2 && \
    pip3 install --no-cache-dir xunitmerge==1.0.4 attrdict==2.0.1 pysnow==0.7.17 jsonschema==3.2.0 nose==1.3.7 mock==4.0.3 coverage==5.5 junitparser==2.8.0  python-magic==0.4.27

RUN wget "https://github.com/github/hub/releases/download/v2.14.2/hub-linux-amd64-2.14.2.tgz" -O hub.tgz \
    && tar xzvf hub.tgz \
    && mv hub-linux-amd64-2.14.2/bin/hub /usr/local/bin \
    && chmod +x /usr/local/bin/hub

ENV QT_X11_NO_MITSHM=1
ENV _X11_NO_MITSHM=1
ENV _MITSHM=0
ENV TERM=xterm-256color

# interal CA certificates
RUN mkdir -pv /home/${user}/lumen_certs
COPY --from=base_agent /etc/ssl/certs/java/cacerts /etc/ssl/certs/java/cacerts
COPY --from=base_agent /usr/local/share/ca-certificates /usr/local/share/ca-certificates
COPY --from=base_agent /home/${user}/lumen_certs /home/${user}/lumen_certs

# dependencies for Sonar analysis
ARG SONAR_VERSION=4.3.0.2102

COPY --chown=${user}:${group} --from=sonar_agent /home/${user}/sonar-scanner-${SONAR_VERSION}-linux /home/${user}/sonar-scanner-${SONAR_VERSION}-linux
COPY --chown=${user}:${group} --from=sonar_agent /home/${user}/.sonar/cache /home/${user}/.sonar/cache
ENV PATH="/home/${user}/sonar-scanner-${SONAR_VERSION}-linux/bin:${PATH}"
ENV JAVA_HOME="/usr/lib/jvm/java-11-openjdk-amd64/jre"
ENV SONAR_SCANNER_OPTS="-Dcom.sun.net.ssl.checkRevocation=false -Djavax.net.ssl.trustStore=/etc/ssl/certs/java/cacerts -Djavax.net.ssl.keyStore=/etc/ssl/certs/java/cacerts"


ENV NODE_PATH=/usr/local/lib/node_modules
ENV NODE_EXTRA_CA_CERTS /home/${user}/lumen_certs/cacert.pem

RUN ls -la /root
RUN chmod 755 /root

RUN usermod -a -G staff node && \
    usermod -a -G staff ${user} && \
    usermod -aG root ${user}

USER ${user}

RUN mkdir -m=0700 /home/${user}/.ssh && \
    ssh-keyscan -t rsa github.com >> /home/${user}/.ssh/known_hosts
