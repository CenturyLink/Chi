import{V as h,N as m}from"./uJTUijt2.js";import{o as n,c as a,a as e,F as p,i as _,d as t,a3 as f,t as s}from"./B5CYXVwa.js";import{_ as v}from"./DlAUqK2U.js";var y=Object.defineProperty,x=Object.getOwnPropertyDescriptor,g=(r,d,c,i)=>{for(var l=i>1?void 0:i?x(d,c):d,u=r.length-1,o;u>=0;u--)(o=r[u])&&(l=(i?o(d,c,l):o(l))||l);return i&&l&&y(d,c,l),l};let b=class extends h{};b=g([m({data:()=>({breakpoints:["sm","md","lg","xl"],sides:[{value:"t",name:"border-top"},{value:"b",name:"border-bottom"},{value:"l",name:"border-left"},{value:"r",name:"border-right"}]})})],b);const k=e("h2",null,"Notation",-1),N=e("p",{class:"-text"},[t("Border utility classes can be defined using the format "),e("code",null,"-b{sides}[-{breakpoint}]--{size}"),t(".")],-1),$=e("h4",null,"{sides}",-1),O={class:"-text"},V=f("<li><code>x</code> - use to apply <code>border-left</code> and <code>border-right</code></li><li><code>y</code> - use to apply <code>border-top</code> and <code>border-bottom</code></li><li>blank - leave blank to apply <code>border</code> to all 4 sides.</li>",3),B=e("h4",null,"{breakpoint}",-1),P=e("p",{class:"-text"},"Optionally, include -{breakpoint} to apply the utility behaviour to some breakpoints. As a mobile-first library, any applying to smaller breakpoints will also modify larger ones unless another class overrides this behaviour.",-1),w={class:"-text"},D=e("li",null,[t("blank - leave blank to apply "),e("code",null,"border"),t(" to all breakpoints.")],-1),j=e("code",null,"border",-1),z=e("h4",null,"{size}",-1),C={class:"-text"},F=e("li",null,[e("code",null,"0"),t(" - use to eliminate existing "),e("code",null,"border"),t(" and set to "),e("code",null,"0")],-1),S=e("code",null,"border",-1);function A(r,d,c,i,l,u){return n(),a("div",null,[k,N,$,e("ul",O,[(n(!0),a(p,null,_(r.sides,o=>(n(),a("li",null,[e("code",null,s(o.value),1),t(" - use to apply "),e("code",null,s(o.name),1)]))),256)),V]),B,P,e("ul",w,[D,(n(!0),a(p,null,_(r.breakpoints,o=>(n(),a("li",null,[e("code",null,s(o),1),t(" - use to apply "),j,t(" to "+s(o)+" "+s(`${o==="xl"?"":"and larger"}`)+" breakpoints.",1)]))),256))]),z,e("ul",C,[F,(n(),a(p,null,_(4,o=>e("li",{key:o},[e("code",null,s(o),1),t(" - use to set "),S,t(" to "),e("code",null,s(o)+"px",1)])),64))])])}const G=v(b,[["render",A]]);export{G as default};
