var _=Object.defineProperty;var h=(o,e,t)=>e in o?_(o,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):o[e]=t;var r=(o,e,t)=>h(o,typeof e!="symbol"?e+"":e,t);import{V as g,N as v}from"./uJTUijt2.js";import{_ as x}from"./D8GK0F__.js";import{_ as f}from"./DKu8Jd2y.js";import{o as a,f as b,w as m,c as d,i as C,a as u,n as S,F as N,b as V}from"./B5CYXVwa.js";import{_ as $}from"./DlAUqK2U.js";import"./C-hgEc7b.js";import"./drvuhYu1.js";import"./2EwpEKcw.js";var z=Object.defineProperty,y=Object.getOwnPropertyDescriptor,B=(o,e,t,s)=>{for(var n=s>1?void 0:s?y(e,t):e,l=o.length-1,i;l>=0;l--)(i=o[l])&&(n=(s?i(e,t,n):i(n))||n);return s&&n&&z(e,t,n),n};let p=class extends g{constructor(){super(...arguments);r(this,"exampleTabs",[{active:!0,id:"htmlblueprint",label:"HTML Blueprint"}]);r(this,"gridColumns",[{comment:"<!-- 50% on xs viewports; 100% on sm, md, lg and xl viewports -->",className:"-w-sm--12"},{comment:"<!-- 50% on xs and sm viewports; 100% on md, lg and xl viewports -->",className:"-w-md--12"},{comment:"<!-- 50% on xs, sm and md viewports; 100% on lg and xl viewports -->",className:"-w-lg--12"},{comment:"<!-- 50% on xs, sm, md and lg viewports; 100% on xl viewports -->",className:"-w-xl--12"}])}get codeSnippets(){return{htmlblueprint:this.generateHtml()}}generateHtml(){return this.gridColumns.map(t=>`${t.comment}
<div class="chi-grid">
  <div class="chi-col -w--6 ${t.className}"></div>
</div>
`).join(`
`)}};p=B([v({})],p);const T=u("p",{class:"-text"},"The columns in the following rows will be 50% wide until they are in the configured viewport, at which point they will become 12 column units wide.",-1);function O(o,e,t,s,n,l){const i=x,w=f;return a(),b(w,{title:"Viewport-Specific Column Sizing",id:"viewport-specific-column-sizing",tabs:o.exampleTabs,showSnippetTabs:!1,padding:"-p--0",additionalStyle:"border: none;"},{"example-description":m(()=>[T]),example:m(()=>[(a(!0),d(N,null,C(o.gridColumns,({className:c})=>(a(),d("div",{class:"-show--example chi-grid -mb--3",key:c},[u("div",{class:S(["chi-col -w--6",c])},null,2)]))),128))]),"code-htmlblueprint":m(()=>[V(i,{lang:"html",code:o.codeSnippets.htmlblueprint},null,8,["code"])]),_:1},8,["tabs"])}const G=$(p,[["render",O]]);export{G as default};
