var x=Object.defineProperty;var g=(t,e,s)=>e in t?x(t,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[e]=s;var i=(t,e,s)=>g(t,typeof e!="symbol"?e+"":e,s);import{V as b,N as f}from"./uJTUijt2.js";import{_ as H}from"./D8GK0F__.js";import{_ as v}from"./DKu8Jd2y.js";import{o as r,f as $,w as p,a as m,c as u,i as w,n as C,t as L,F as T,b as B,d as _}from"./B5CYXVwa.js";import{_ as N}from"./DlAUqK2U.js";import"./C-hgEc7b.js";import"./drvuhYu1.js";import"./2EwpEKcw.js";var S=Object.defineProperty,V=Object.getOwnPropertyDescriptor,z=(t,e,s,l)=>{for(var n=l>1?void 0:l?V(e,s):e,o=t.length-1,a;o>=0;o--)(a=t[o])&&(n=(l?a(e,s,n):a(n))||n);return l&&n&&S(e,s,n),n};let c=class extends b{constructor(){super(...arguments);i(this,"exampleTabs",[{active:!0,id:"htmlblueprint",label:"HTML Blueprint"}]);i(this,"lineHeights",["-lh--1","-lh--2","-lh--3","-lh--4","-lh--5","-lh--6","-lh--7","-lh--8","-lh--9"])}get codeSnippets(){return{htmlblueprint:this.generateHtml()}}generateHtml(){return this.lineHeights.map(s=>`<p class="-text ${s}">${s}</p>`).join(`
`)}};c=z([f({})],c);const O=m("p",{class:"-text"},[_("Use shorthand utility classes to control an element's line-height. Line height sizes are equal to "),m("code",null,"$base-unit * {size}"),_(" and illustrated in green in the example below.")],-1),P={class:"-m--3 -show--example"};function j(t,e,s,l,n,o){const a=H,d=v;return r(),$(d,{padding:"-p--0",title:"Text line height",id:"text-line-height",titleSize:"h2",tabs:t.exampleTabs,showSnippetTabs:!1},{"example-description":p(()=>[O]),example:p(()=>[m("div",P,[(r(!0),u(T,null,w(t.lineHeights,h=>(r(),u("p",{class:C(["-text -pl--1",h])},L(h),3))),256))])]),"code-htmlblueprint":p(()=>[B(a,{class:"html",lang:"html",code:t.codeSnippets.htmlblueprint},null,8,["code"])]),_:1},8,["tabs"])}const J=N(c,[["render",j]]);export{J as default};
