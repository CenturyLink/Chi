var m=Object.defineProperty;var d=(o,e,t)=>e in o?m(o,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):o[e]=t;var p=(o,e,t)=>d(o,typeof e!="symbol"?e+"":e,t);import{V as u,N as f}from"./uJTUijt2.js";import{_ as h}from"./drvuhYu1.js";import{_ as v}from"./D8GK0F__.js";import{o as S,c as g,b as l,F as x,a}from"./B5CYXVwa.js";import{_ as y}from"./DlAUqK2U.js";import"./C-hgEc7b.js";var b=Object.defineProperty,w=Object.getOwnPropertyDescriptor,C=(o,e,t,s)=>{for(var n=s>1?void 0:s?w(e,t):e,i=o.length-1,r;i>=0;i--)(r=o[i])&&(n=(s?r(e,t,n):r(n))||n);return s&&n&&b(e,t,n),n};let c=class extends u{constructor(){super(...arguments);p(this,"codeSnippets",{htmlblueprint:`@NuxtComponent({
  tag: 'chi-icon',
  styleUrl: 'icon.scss',
  scoped: true
})`})}};c=C([f({})],c);const $=a("p",{class:"-text"},"Chi components will have scoped CSS, to prevent collisions when using in non-chi compatible environments.",-1),N=a("p",{class:"-text"},"As of now, there is no support for per-version scoped CSS. This means that rules from two different versions of chi components will collide, so it should be avoided.",-1);function O(o,e,t,s,n,i){const r=h,_=v;return S(),g(x,null,[l(r,{title:"Styling",id:"styling",titleSize:"h2"}),$,l(_,{id:"styling",code:o.codeSnippets.htmlblueprint},null,8,["code"]),N],64)}const z=y(c,[["render",O]]);export{z as default};
