import{V as h,N as g}from"./uJTUijt2.js";import E from"./D35ARWjf.js";import k from"./CbG9SKP8.js";import V from"./CMfYQuZm.js";import C from"./DAasb17C.js";import N from"./BWDxCW7D.js";import S from"./DtE4ps8a.js";import $ from"./B-cxQLqV.js";import O from"./FuRijPkp.js";import P from"./Clg2iIHE.js";import{_ as w}from"./drvuhYu1.js";import{o as M,c as j,b as e,a as n,d as i,r as t}from"./B5CYXVwa.js";import{_ as y}from"./DlAUqK2U.js";import"./DAzwSQBh.js";import"./2EwpEKcw.js";import"./DdvxCeKp.js";import"./D8GK0F__.js";import"./C-hgEc7b.js";import"./DKu8Jd2y.js";var z=Object.defineProperty,D=Object.getOwnPropertyDescriptor,A=(p,r,c,s)=>{for(var o=s>1?void 0:s?D(r,c):r,a=p.length-1,l;a>=0;a--)(l=p[a])&&(o=(s?l(r,c,o):l(o))||o);return s&&o&&z(r,c,o),o};let m=class extends h{};m=A([g({components:{Breakpoints:E,BreakpointsSpecific:k,Baseline:V,Top:C,Middle:N,Bottom:S,TextTop:$,TextBottom:O,TableCellElements:P}})],m);const I={class:"chi-grid__container -pt--3"},q=n("p",{class:"-text"},[i("Vertical-align classes can be defined using the format "),n("code",null,"-vertical-align[-{breakpoint}]--{value}"),i(". Breakpoints supported are "),n("code",null,"sm"),i(", "),n("code",null,"md"),i(", "),n("code",null,"lg"),i(", and "),n("code",null,"xl"),i(".")],-1),F=n("p",{class:"-text"},"Vertical-align is only compatible with inline, inline-block, inline-table, and table cell elements. It cannot be used to vertically align block-level elements.",-1);function G(p,r,c,s,o,a){const l=w,_=t("Breakpoints"),d=t("BreakpointsSpecific"),f=t("Baseline"),x=t("Top"),B=t("Middle"),u=t("Bottom"),T=t("TextTop"),b=t("TextBottom"),v=t("TableCellElements");return M(),j("div",I,[e(l,{title:"Notation",id:"vertical-align-title",titleSize:"h2"}),q,e(_),e(d),e(l,{title:"Examples",id:"vertical-align-examples",titleSize:"h2"}),F,e(f),e(x),e(B),e(u),e(T),e(b),e(v)])}const ce=y(m,[["render",G]]);export{ce as default};
