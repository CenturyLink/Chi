var _=Object.defineProperty;var d=(s,e,t)=>e in s?_(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t;var r=(s,e,t)=>d(s,typeof e!="symbol"?e+"":e,t);import{V as m,N as u}from"./uJTUijt2.js";import{_ as f}from"./drvuhYu1.js";import{_ as b}from"./DdvxCeKp.js";import{o as x,c as h,b as i,a as v}from"./B5CYXVwa.js";import{_ as w}from"./DlAUqK2U.js";var $=Object.defineProperty,B=Object.getOwnPropertyDescriptor,k=(s,e,t,l)=>{for(var o=l>1?void 0:l?B(e,t):e,n=s.length-1,a;n>=0;n--)(a=s[n])&&(o=(l?a(e,t,o):a(o))||o);return l&&o&&$(e,t,o),o};let c=class extends m{constructor(){super(...arguments);r(this,"columns",[{title:"Flex-basis Class",key:"cell1",width:"40%"},{title:"Value",key:"cell2",width:""}]);r(this,"types",["auto","0","*"])}getRows(){return this.types.map(t=>({cell1:`<code>-flex-basis--${t}</code>`,cell2:t==="*"?"can be incremented by 5%":`<code>flex-basis: ${t};</code>`}))}};c=k([u({})],c);const y=v("p",{class:"-text"},"Flex-basis utility classes with no breakpoint defined apply to all screen sizes.",-1);function C(s,e,t,l,o,n){const a=f,p=b;return x(),h("div",null,[i(a,{title:"Target all breakpoints",id:"basis-all-breakpoints",titleSize:"h4"}),y,i(p,{data:s.getRows(),columns:s.columns,additionalClasses:"-bordered"},null,8,["data","columns"])])}const j=w(c,[["render",C]]);export{j as default};
