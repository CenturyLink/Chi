import{V as _,N as f}from"./uJTUijt2.js";import{_ as h}from"./DKu8Jd2y.js";import{o as n,f as v,w as u,c as i,i as w,n as x,F as b,a as c,d as p}from"./B5CYXVwa.js";import{_ as C}from"./DlAUqK2U.js";import"./drvuhYu1.js";import"./2EwpEKcw.js";var z=Object.defineProperty,S=Object.getOwnPropertyDescriptor,$=(s,o,r,a)=>{for(var e=a>1?void 0:a?S(o,r):o,l=s.length-1,t;l>=0;l--)(t=s[l])&&(e=(a?t(o,r,e):t(e))||e);return a&&e&&z(o,r,e),e};let m=class extends _{};m=$([f({data:()=>({columns:Array.from({length:12},(s,o)=>o+1).reverse()})})],m);const A=c("p",{class:"-text"},[p("The size classes are defined from "),c("code",null,"-w--1"),p(", which takes up ~8.3% of the width to "),c("code",null,"-w--12"),p(", which consumes the entire row.")],-1),g={class:"-show--example chi-grid -mb--3"};function B(s,o,r,a,e,l){const t=h;return n(),v(t,{title:"Available Column Sizes",id:"available-column-sizes",showSnippetTabs:!1,padding:"-p--0",additionalStyle:"border: none;"},{"example-description":u(()=>[A]),example:u(()=>[(n(!0),i(b,null,w(s.columns,d=>(n(),i("div",g,[(n(),i("div",{class:x(["chi-col",`-w--${d}`]),key:d},null,2))]))),256))]),_:1})}const D=C(m,[["render",B]]);export{D as default};
