import{V as f,N as x}from"./uJTUijt2.js";import u from"./C8WMNdV1.js";import g from"./BBwt4NRR.js";import v from"./CAYte-hM.js";import E from"./B-6yeehZ.js";import H from"./zENdhEi6.js";import{_ as W}from"./drvuhYu1.js";import{o as b,c as N,b as e,a3 as $,r as n}from"./B5CYXVwa.js";import{_ as w}from"./DlAUqK2U.js";import"./DAzwSQBh.js";import"./2EwpEKcw.js";import"./DdvxCeKp.js";import"./D8GK0F__.js";import"./C-hgEc7b.js";import"./DKu8Jd2y.js";var O=Object.defineProperty,P=Object.getOwnPropertyDescriptor,V=(s,o,p,i)=>{for(var t=i>1?void 0:i?P(o,p):o,m=s.length-1,r;m>=0;m--)(r=s[m])&&(t=(i?r(o,p,t):r(t))||t);return i&&t&&O(o,p,t),t};let c=class extends f{};c=V([x({components:{Width:u,WidthExamples:g,Height:v,HeightExamples:E,MaximumWidthHeight:H}})],c);const B={class:"chi-grid__container -pt--3"},C=$('<p class="-text">Sizing utility classes can be defined using the format <code>-w-{breakpoint}--{value}</code> for widths and <code>-h-{breakpoint}--{value}</code> for heights. Breakpoints supported are <code>sm</code>, <code>md</code>, <code>lg</code>, and <code>xl</code>.</p>',1);function M(s,o,p,i,t,m){const r=W,a=n("Width"),d=n("WidthExamples"),_=n("Height"),h=n("HeightExamples"),l=n("MaximumWidthHeight");return b(),N("div",B,[e(r,{title:"Notation",id:"notation",titleSize:"h2"}),C,e(a),e(d),e(_),e(h),e(l)])}const R=w(c,[["render",M]]);export{R as default};
