var l=Object.defineProperty;var u=(t,e,o)=>e in t?l(t,e,{enumerable:!0,configurable:!0,writable:!0,value:o}):t[e]=o;var c=(t,e,o)=>u(t,typeof e!="symbol"?e+"":e,o);import{V as d,N as f}from"./uJTUijt2.js";import"./DAzwSQBh.js";import{_ as m}from"./DdvxCeKp.js";import{o as _,c as v,b,a as p}from"./B5CYXVwa.js";import{_ as g}from"./DlAUqK2U.js";import"./2EwpEKcw.js";var h=Object.defineProperty,C=Object.getOwnPropertyDescriptor,$=(t,e,o,a)=>{for(var n=a>1?void 0:a?C(e,o):e,s=t.length-1,r;s>=0;s--)(r=t[s])&&(n=(a?r(e,o,n):r(n))||n);return a&&n&&h(e,o,n),n};let i=class extends d{constructor(){super(...arguments);c(this,"values");c(this,"columns")}getContent(o,a){switch(o.key){case"class":return`<code>-d--${a}--none</code>`;case"value":return`<div class="-text">Hidden only on <code>${a}</code></div>`;default:return""}}};i=$([f({})],i);const k=p("h3",null,"Target specific breakpoints",-1),B=p("p",{class:"-text"},"To target a specific breakpoint, add the breakpoint abbreviation to the class. As a mobile first framework, it will apply to that specific breakpoint and up.",-1);function T(t,e,o,a,n,s){const r=m;return _(),v("div",null,[k,B,b(r,{data:t.values,columns:t.columns,getContent:t.getContent},null,8,["data","columns","getContent"])])}const j=g(i,[["render",T]]);export{j as default};
