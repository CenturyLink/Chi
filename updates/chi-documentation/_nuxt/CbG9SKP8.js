var m=Object.defineProperty;var u=(t,e,a)=>e in t?m(t,e,{enumerable:!0,configurable:!0,writable:!0,value:a}):t[e]=a;var i=(t,e,a)=>u(t,typeof e!="symbol"?e+"":e,a);import{V as d,N as f}from"./uJTUijt2.js";import{j as _}from"./DAzwSQBh.js";import{_ as v}from"./drvuhYu1.js";import{_ as b}from"./DdvxCeKp.js";import{o as g,c as h,b as l,a as C}from"./B5CYXVwa.js";import{_ as x}from"./DlAUqK2U.js";import"./2EwpEKcw.js";var $=Object.defineProperty,k=Object.getOwnPropertyDescriptor,B=(t,e,a,o)=>{for(var n=o>1?void 0:o?k(e,a):e,r=t.length-1,s;r>=0;r--)(s=t[r])&&(n=(o?s(e,a,n):s(n))||n);return o&&n&&$(e,a,n),n};let c=class extends d{constructor(){super(...arguments);i(this,"columns",_);i(this,"sizes",[{name:"sm",value:"sm"},{name:"md",value:"md"},{name:"lg",value:"lg"},{name:"xl",value:"xl"}])}getContent(a,o){switch(a.key){case"class":return`<code>-vertical-align-${o.name}--middle</code>`;case"value":return`<div class="-text">Vertical middle aligned on <code>${o.value}</code> and up.</div>`;default:return""}}};c=B([f({})],c);const V=C("p",{class:"-text"},"To target a specific breakpoint, add the breakpoint abbreviation to the class. As Chi is a mobile first library, the value will apply to that specific breakpoint and up.",-1);function w(t,e,a,o,n,r){const s=v,p=b;return g(),h("div",null,[l(s,{title:"Target specific breakpoints",id:"breakpoints-specific-vertical"}),V,l(p,{columns:t.columns,data:t.sizes,getContent:t.getContent},null,8,["columns","data","getContent"])])}const D=x(c,[["render",w]]);export{D as default};
