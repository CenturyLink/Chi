var _=Object.defineProperty;var w=(e,t,p)=>t in e?_(e,t,{enumerable:!0,configurable:!0,writable:!0,value:p}):e[t]=p;var i=(e,t,p)=>w(e,typeof t!="symbol"?t+"":t,p);import{V as h,N as u}from"./uJTUijt2.js";import{_ as x}from"./D8GK0F__.js";import{_ as d}from"./DKu8Jd2y.js";import{o as f,f as b,w as l,b as g,a}from"./B5CYXVwa.js";import{_ as v}from"./DlAUqK2U.js";import"./C-hgEc7b.js";import"./drvuhYu1.js";import"./2EwpEKcw.js";var T=Object.defineProperty,C=Object.getOwnPropertyDescriptor,P=(e,t,p,o)=>{for(var r=o>1?void 0:o?C(t,p):t,s=e.length-1,n;s>=0;s--)(n=e[s])&&(r=(o?n(t,p,r):n(r))||r);return o&&r&&T(t,p,r),r};let c=class extends h{constructor(){super(...arguments);i(this,"exampleTabs",[{active:!0,id:"htmlblueprint",label:"HTML Blueprint"}]);i(this,"codeSnippets",{htmlblueprint:`<p class="-text--nowrap">This text will render without wrapping</p>
<p class="-text--truncate">This text will truncate with an ellipsis</p>`})}};c=P([u({})],c);const $=a("p",{class:"-text"},"Prevent text wrapping with nowrap or control overflow with truncate.",-1),B=a("div",{class:"-m--3"},[a("p",{class:"-text -text--nowrap",style:{width:"11rem",background:"#eeeeee"}},"This text will render without wrapping"),a("p",{class:"-text -text--truncate",style:{width:"11rem"}},"This text will truncate with an ellipsis")],-1);function N(e,t,p,o,r,s){const n=x,m=d;return f(),b(m,{padding:"-p--0",title:"Text wrapping",id:"text-wrapping",titleSize:"h2",tabs:e.exampleTabs,showSnippetTabs:!1},{"example-description":l(()=>[$]),example:l(()=>[B]),"code-htmlblueprint":l(()=>[g(n,{class:"html",lang:"html",code:e.codeSnippets.htmlblueprint},null,8,["code"])]),_:1},8,["tabs"])}const L=v(c,[["render",N]]);export{L as default};
