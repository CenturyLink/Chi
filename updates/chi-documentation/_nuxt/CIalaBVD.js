var i=Object.defineProperty;var u=(a,e,o)=>e in a?i(a,e,{enumerable:!0,configurable:!0,writable:!0,value:o}):a[e]=o;var t=(a,e,o)=>u(a,typeof e!="symbol"?e+"":e,o);import{V as d,N as m}from"./uJTUijt2.js";import{k as v}from"./DAzwSQBh.js";import{_}from"./DdvxCeKp.js";import{o as f,c as y,b as C,a as c}from"./B5CYXVwa.js";import{_ as $}from"./DlAUqK2U.js";import"./2EwpEKcw.js";var b=Object.defineProperty,h=Object.getOwnPropertyDescriptor,g=(a,e,o,s)=>{for(var l=s>1?void 0:s?h(e,o):e,r=a.length-1,n;r>=0;r--)(n=a[r])&&(l=(s?n(e,o,l):n(l))||l);return s&&l&&b(e,o,l),l};let p=class extends d{constructor(){super(...arguments);t(this,"values",[{name:"-sr--only",value:"Screen reader only"},{name:"-d-screen--only",value:["display: block;","on @media screen,","display: none;","on @media print."]},{name:"-d-print--only",value:["display: none;","on @media screen,","display: block;","on @media print."]}]);t(this,"columns",v)}getContent(o,s){switch(o.key){case"class":return`<code>-d--${s.name}--none</code>`;case"value":return typeof s.value=="string"?s.value:`<code>${s.value[0]}</code>${s.value[1]} <code>${s.value[2]}</code>${s.value[3]}`;default:return""}}};p=g([m({})],p);const D=c("h3",null,"Special display classes",-1),S=c("p",{class:"-text"},"To target screen readers only or a specific media type (@media screen or @media print), use the below classes.",-1);function w(a,e,o,s,l,r){const n=_;return f(),y("div",null,[D,S,C(n,{data:a.values,columns:a.columns,getContent:a.getContent},null,8,["data","columns","getContent"])])}const k=$(p,[["render",w]]);export{k as default};
