@import '_global-variables';
@import '_global-mixins';

$sizes: (
  xs: (
    height: $select-xs-height,
    font-size: $select-xs-font-size,
    line-height: $select-xs-line-height,
    background-position: $select-xs-arrow-background-position,
    background-size: $select-xs-arrow-background-size,
    padding: $select-xs-padding,
  ),
  sm: (
    height: $select-sm-height,
    font-size: $select-sm-font-size,
    line-height: $select-sm-line-height,
    background-position: $select-sm-arrow-background-position,
    background-size: $select-sm-arrow-background-size,
    padding: $select-sm-padding,
  ),
  md: (
    height: $select-md-height,
    font-size: $select-md-font-size,
    line-height: $select-md-line-height,
    background-position: $select-md-arrow-background-position,
    background-size: $select-md-arrow-background-size,
    padding: $select-md-padding,
  ),
  lg: (
    height: $select-lg-height,
    font-size: $select-lg-font-size,
    line-height: $select-lg-line-height,
    background-position: $select-lg-arrow-background-position,
    background-size: $select-lg-arrow-background-size,
    padding: $select-lg-padding,
  ),
  xl: (
    height: $select-xl-height,
    font-size: $select-xl-font-size,
    line-height: $select-xl-line-height,
    background-position: $select-xl-arrow-background-position,
    background-size: $select-xl-arrow-background-size,
    padding: $select-xl-padding,
  )
);

.chi-select,
select.chi-input { // sass-lint:disable-line force-element-nesting
  appearance: none;
  background-color: $select-background-color;
  border: 0.0625rem solid $select-border-color;
  border-radius: $border-radius-base;
  box-shadow: $select-box-shadow;
  color: $select-text-color;
  cursor: pointer;
  font-size: map-get(map-get($sizes, md), font-size);
  height: map-get(map-get($sizes, md), height);
  line-height: map-get(map-get($sizes, md), line-height);
  outline: none;
  text-overflow: ellipsis;
  transition: background-color 0.12s ease-in, border-color 0.1s ease-in;
  width: 100%;

  &:not([multiple]) {
    background-image: $select-background-image;
    background-position: map-get(map-get($sizes, md), background-position);
    background-repeat: no-repeat;
    background-size: map-get(map-get($sizes, md), background-size);
    padding: map-get(map-get($sizes, md), padding);
  }

  // sass-lint:disable no-vendor-prefixes
  &::-ms-expand {
    display: none;
  }

  &::-moz-focus-outer,
  &::-moz-focus-inner {
    border: 0;
  }
  // sass-lint:enable no-vendor-prefixes

  &:hover,
  &.-hover,
  &:active,
  &.-active {
    border-color: $select-hover-border-color;
  }

  &:focus,
  &.-focus {
    border-color: $select-focus-border-color;
    box-shadow: 0 0 0 1px rgba($select-focus-border-color, 1);
  }

  &[disabled] {
    opacity: $select-disabled-opacity;
    pointer-events: none;
  }

  @each $type in map-keys($sizes) {
    &.-#{$type} {
      background-position: map-get(map-get($sizes, $type), background-position);
      background-size: map-get(map-get($sizes, $type), background-size);
      font-size: map-get(map-get($sizes, $type), font-size);
      height: map-get(map-get($sizes, $type), height);
      line-height: map-get(map-get($sizes, $type), line-height);
      padding: map-get(map-get($sizes, $type), padding);
    }
  }

  &:not([disabled]) {
    &.-danger {
      border-color: $select-danger-border-color;
    }
  }

  &.-danger {
    color: $select-danger-text-color;

    &:focus,
    &.-focus {
      box-shadow: 0 0 0 1px $select-danger-border-color;
    }
  }
}
