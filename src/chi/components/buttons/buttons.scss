@import '_global-mixins';
@import '_global-variables';

$button-colors: (
  primary: (
    background-color: $button-primary-solid-background-color,
    background-color-hover: $button-primary-solid-hover-background-color,
    background-color-active: $button-primary-solid-active-background-color,
    background-color-outline: $button-primary-outline-background-color,
    border-color: $button-primary-solid-border-color,
    border-color-hover: $button-primary-solid-hover-border-color,
    border-color-active: $button-primary-solid-active-border-color,
    text-color: $button-primary-solid-text-color,
    text-color-outline: $button-primary-outline-text-color,
    text-color-outline-hover: $button-primary-outline-hover-text-color,
    text-color-outline-active: $button-primary-outline-active-text-color,
  ),
  secondary: (
    background-color: $button-secondary-solid-background-color,
    background-color-hover: $button-secondary-solid-hover-background-color,
    background-color-active: $button-secondary-solid-active-background-color,
    background-color-outline: $button-secondary-outline-background-color,
    border-color: $button-secondary-solid-border-color,
    border-color-hover: $button-secondary-solid-hover-border-color,
    border-color-active: $button-secondary-solid-active-border-color,
    text-color: $button-secondary-solid-text-color,
    text-color-outline: $button-secondary-outline-text-color,
    text-color-outline-hover: $button-secondary-outline-hover-text-color,
    text-color-outline-active: $button-secondary-outline-active-text-color,
  ),
  dark: (
    background-color: $button-dark-solid-background-color,
    background-color-hover: $button-dark-solid-hover-background-color,
    background-color-active: $button-dark-solid-active-background-color,
    background-color-outline: $button-dark-outline-background-color,
    border-color: $button-dark-solid-border-color,
    border-color-hover: $button-dark-solid-hover-border-color,
    border-color-active: $button-dark-solid-active-border-color,
    text-color: $button-dark-solid-text-color,
    text-color-outline: $button-dark-outline-text-color,
    text-color-outline-hover: $button-dark-outline-hover-text-color,
    text-color-outline-active: $button-dark-outline-active-text-color,
  ),
  danger: (
    background-color: $button-danger-solid-background-color,
    background-color-hover: $button-danger-solid-hover-background-color,
    background-color-active: $button-danger-solid-active-background-color,
    background-color-outline: $button-danger-outline-background-color,
    border-color: $button-danger-solid-border-color,
    border-color-hover: $button-danger-solid-hover-border-color,
    border-color-active: $button-danger-solid-active-border-color,
    text-color: $button-danger-solid-text-color,
    text-color-outline: $button-danger-outline-text-color,
    text-color-outline-hover: $button-danger-outline-hover-text-color,
    text-color-outline-active: $button-danger-outline-active-text-color,
  ),
  light: (
    background-color: $button-light-solid-background-color,
    background-color-hover: $button-light-solid-hover-background-color,
    background-color-active: $button-light-solid-active-background-color,
    background-color-outline: $button-light-outline-background-color,
    border-color: $button-light-solid-border-color,
    border-color-hover: $button-light-solid-hover-border-color,
    border-color-active: $button-light-solid-active-border-color,
    text-color: $button-light-solid-text-color,
    text-color-outline: $button-light-outline-text-color,
    text-color-outline-hover: $button-light-outline-hover-text-color,
    text-color-outline-active: $button-light-outline-active-text-color,
  )
);

$border: 0.0625rem;

$sizes: (
  xs: (
    font-size: $button-xs-font-size,
    line-height: $button-xs-line-height,
    padding: $button-xs-padding,
    text-transform: $button-xs-text-transform,
    icons: (
      height: $button-icon-xs-height,
      padding: $button-icon-xs-padding,
      width: $button-icon-xs-width,
      line-height: $button-icon-xs-line-height,
      font-size: $button-icon-xs-font-size,
    )
  ),
  sm: (
    font-size: $button-sm-font-size,
    line-height: $button-sm-line-height,
    padding: $button-sm-padding,
    text-transform: $button-sm-text-transform,
    icons: (
      height: $button-icon-sm-height,
      padding: $button-icon-sm-padding,
      width: $button-icon-sm-width,
      line-height: $button-icon-sm-line-height,
      font-size: $button-icon-sm-font-size,
    )
  ),
  md: (
    font-size: $button-md-font-size,
    line-height: $button-md-line-height,
    padding: $button-md-padding,
    text-transform: $button-md-text-transform,
    icons: (
      height: $button-icon-md-height,
      padding: $button-icon-md-padding,
      width: $button-icon-md-width,
      line-height: $button-icon-md-line-height,
      font-size: $button-icon-md-font-size,
    )
  ),
  lg: (
    font-size: $button-lg-font-size,
    line-height: $button-lg-line-height,
    padding: $button-lg-padding,
    text-transform: $button-lg-text-transform,
    icons: (
      height: $button-icon-lg-height,
      padding: $button-icon-lg-padding,
      width: $button-icon-lg-width,
      line-height: $button-icon-lg-line-height,
      font-size: $button-icon-lg-font-size,
    )
  ),
  xl: (
    font-size: $button-xl-font-size,
    line-height: $button-xl-line-height,
    padding: $button-xl-padding,
    text-transform: $button-xl-text-transform,
    icons: (
      height: $button-icon-xl-height,
      padding: $button-icon-xl-padding,
      width: $button-icon-xl-width,
      line-height: $button-icon-xl-line-height,
      font-size: $button-icon-xl-font-size,
    )
  )
);

.chi-button {
  & {
    align-items: center;
    background-color: $button-solid-background-color;
    border: $border solid $button-solid-border-color;
    border-radius: $border-radius;
    box-shadow: $button-solid-box-shadow;
    color: $button-solid-text-color;
    cursor: pointer;
    display: inline-flex;
    font-size: $button-md-font-size;
    font-weight: $font-weight-semi-bold;
    line-height: $button-md-line-height;
    padding: $button-md-padding;
    text-align: center;
    text-transform: $button-md-text-transform;
    transition: background-color 0.12s ease-in, border-color 0.1s ease-in, color 0.12s ease-in;
    vertical-align: middle;
    white-space: nowrap;

    &[disabled],
    &.-disabled {
      @include button-disabled;
    }

    .chi-icon,
    .chi-spinner {
      color: $button-solid-icon-color;
      font-size: $button-icon-md-font-size;
      height: $button-icon-md-height;
      line-height: $button-icon-md-line-height;
      width: $button-icon-md-width;
    }

    &__content {
      align-items: center;
      display: inline-flex;
      justify-content: center;

      & > :not(:last-child) {
        margin-right: 0.5rem;
      }
    }

    @each $type in map-keys($sizes) {
      &.-#{$type} {
        font-size: map-get(map-get($sizes, $type), font-size);
        line-height: map-get(map-get($sizes, $type), line-height);
        padding: map-get(map-get($sizes, $type), padding);
        text-transform: map-get(map-get($sizes, $type), text-transform);

        .chi-icon {
          height: map-get(map-get(map-get($sizes, $type), icons), height);
          width: map-get(map-get(map-get($sizes, $type), icons), width);

          &[class^='icon-'],
          &[class*=' icon-'] {
            font-size: map-get(map-get(map-get($sizes, $type), icons), font-size);
            line-height: map-get(map-get(map-get($sizes, $type), icons), line-height);
          }
        }

        .chi-spinner {
          height: map-get(map-get(map-get($sizes, $type), icons), height);
          width: map-get(map-get(map-get($sizes, $type), icons), width);
        }

        &.-icon {
          padding: map-get(map-get(map-get($sizes, $type), icons), padding);
        }
      }
    }

    &:hover,
    &.-hover {
      background-color: $button-solid-hover-background-color;
      border: $border solid $button-solid-hover-border-color;
      color: $button-solid-hover-text-color;
      text-decoration: none;
    }

    &:focus,
    &.-focus {
      border: $border solid $button-solid-focus-border-color;
      outline: 0.125rem solid $button-solid-focus-outline;
      outline-offset: 0.0625rem;
      z-index: $zindex-prominent;
    }

    &:active,
    &.-active {
      background-color: $button-solid-active-background-color;
      border: $border solid $button-solid-active-border-color;
      color: $button-solid-active-text-color;
      outline: none;
    }

    &.-icon {
      padding: $button-icon-md-padding;
    }

    &.-float {
      border-color: $button-float-border-color;
      border-radius: 50%;
      box-shadow: 0 2px 4px -1px rgba(0, 0, 0, 0.24),
      0 6px 10px 0 rgba(0, 0, 0, 0.14),
      0 1px 16px 0 rgba(0, 0, 0, 0.12);
      padding: $button-float-padding;
      transition: box-shadow 0.15s ease-in, background-color 0.15s ease-in;

      &:active,
      &.-active {
        box-shadow: 0 4px 4px -2px rgba(0, 0, 0, 0.2),
        0 8px 10px 1px rgba(0, 0, 0, 0.14),
        0 2px 14px 1px rgba(0, 0, 0, 0.12);
      }

      .chi-icon {
        height: $button-icon-md-height;
        width: $button-icon-md-width;
      }

      &[disabled],
      &.-disabled {
        @include button-disabled;
      }
    }

    &.-fluid:not(.-float) {
      width: 100%;
    }

    &.-uppercase {
      text-transform: uppercase;
    }

    &.-close {

      &,
      .chi-icon {
        color: $button-close-icon-color;
      }

      &,
      &:hover,
      &.-hover,
      &:active,
      &.-active {
        background-color: $button-close-background-color;
        border-color: $button-close-border-color;
        box-shadow: none;
      }

      &:hover {
        opacity: $button-close-hover-icon-opacity;
      }
    }

    &.-outline {
      background-color: $button-outline-background-color;
      border: $border solid $button-outline-border-color;

      &:hover,
      &.-hover {
        background-color: $button-outline-hover-background-color;
        border-color: $button-outline-hover-border-color;
      }

      &:active,
      &.-active {
        border-color: $button-outline-active-border-color;
      }


      &[disabled],
      &.-disabled {
        background-color: $button-outline-disabled-background-color;
        border-color: $button-outline-disabled-border-color;
        box-shadow: none;
        color: $button-outline-disabled-text-color;
        opacity: $opacity-100;
        pointer-events: $button-outline-disabled-opacity;

        & .chi-icon {
          color: $button-outline-disabled-icon-color;
          opacity: $button-outline-disabled-opacity;
        }
      }
    }

    &.-flat {
      background-color: $button-flat-background-color;
      border: $border solid $button-flat-border-color;
      box-shadow: none;
      color: $button-flat-text-color;

      @each $type in map-keys($sizes) {
        &.-#{$type} {
          font-size: map-get(map-get($sizes, $type), font-size);
          line-height: map-get(map-get($sizes, $type), line-height);

          .chi-icon {
            height: map-get(map-get(map-get($sizes, $type), icons), height);
            width: map-get(map-get(map-get($sizes, $type), icons), width);

            &[class^='icon-'],
            &[class*=' icon-'] {
              font-size: map-get(map-get(map-get($sizes, $type), icons), font-size);
              line-height: map-get(map-get(map-get($sizes, $type), icons), line-height);
            }
          }

          .chi-spinner {
            height: map-get(map-get(map-get($sizes, $type), icons), height);
            width: map-get(map-get(map-get($sizes, $type), icons), width);
          }
        }
      }

      &:hover,
      &.-hover {
        background-color: $button-flat-hover-background-color;
        border: $border solid $button-flat-hover-border-color;
        box-shadow: none;

        .chi-icon {
          opacity: $button-flat-hover-icon-opacity;
        }

        @each $type in map-keys($sizes) {
          &.-#{$type} {
            font-size: map-get(map-get($sizes, $type), font-size);
            line-height: map-get(map-get($sizes, $type), line-height);

            .chi-icon {
              height: map-get(map-get(map-get($sizes, $type), icons), height);
              width: map-get(map-get(map-get($sizes, $type), icons), width);

              &[class^='icon-'],
              &[class*=' icon-'] {
                font-size: map-get(map-get(map-get($sizes, $type), icons), font-size);
                line-height: map-get(map-get(map-get($sizes, $type), icons), line-height);
              }
            }

            .chi-spinner {
              height: map-get(map-get(map-get($sizes, $type), icons), height);
              width: map-get(map-get(map-get($sizes, $type), icons), width);
            }
          }
        }
      }

      &:active,
      &.-active {
        background-color: $button-flat-active-background-color;
        border: $border solid $button-flat-active-border-color;

        &.-icon {
          padding: $button-icon-md-padding;
        }

        @each $type in map-keys($sizes) {
          &.-#{$type} {
            font-size: map-get(map-get($sizes, $type), font-size);
            line-height: map-get(map-get($sizes, $type), line-height);

            .chi-icon {
              height: map-get(map-get(map-get($sizes, $type), icons), height);
              width: map-get(map-get(map-get($sizes, $type), icons), width);

              &[class^='icon-'],
              &[class*=' icon-'] {
                font-size: map-get(map-get(map-get($sizes, $type), icons), font-size);
                line-height: map-get(map-get(map-get($sizes, $type), icons), line-height);
              }
            }

            .chi-spinner {
              height: map-get(map-get(map-get($sizes, $type), icons), height);
              width: map-get(map-get(map-get($sizes, $type), icons), width);
            }

            &.-icon {
              padding: map-get(map-get(map-get($sizes, $type), icons), padding);
              line-height: map-get(map-get(map-get($sizes, $type), icons), line-height);
            }
          }
        }
      }

      &[disabled],
      &.-disabled {
        background-color: $button-flat-disabled-background-color;
        border-color: $button-flat-disabled-border-color;
        opacity: $button-flat-disabled-opacity;

        & .chi-icon {
          opacity: $button-flat-disabled-opacity;
        }
      }

      &.-no-hover {
        &:hover,
        &.-hover,
        &:active,
        &.-active {
          background-color: transparent;
          border-color: transparent;
          box-shadow: none;
        }
      }
    }
  }

  @each $color in map-keys($button-colors) {
    &.-#{$color} {
      background-color: map-get(map-get($button-colors, $color), background-color);
      border: $border solid transparent;
      box-shadow: 0 1px 1px 0 rgba($color-black, 0.04);
      color: map-get(map-get($button-colors, $color), text-color);

      .chi-icon {
        color: inherit;
      }

      .chi-spinner__icon {
        .path {
          stroke: map-get(map-get($button-colors, $color), text-color);
        }
      }

      &:hover,
      &.-hover {
        background-color: map-get(map-get($button-colors, $color), background-color-hover);
        border: $border solid transparent;
        box-shadow: 0 1px 4px 0 rgba($color-black, 0.15);
      }

      &:active,
      &.-active {
        background-color: map-get(map-get($button-colors, $color), background-color-active);
        border: $border solid transparent;
        box-shadow: none;
      }

      &[disabled],
      &.-disabled {
        @include button-disabled;
      }

      &.-outline {
        background-color: map-get(map-get($button-colors, $color), background-color-outline);
        border: $border solid map-get(map-get($button-colors, $color), border-color);
        box-shadow: none;
        color: map-get(map-get($button-colors, $color), text-color-outline);

        .chi-spinner__icon {
          .path {
            stroke: map-get(map-get($button-colors, $color), text-color-outline);
          }
        }

        &:hover,
        &.-hover {
          border: $border solid map-get(map-get($button-colors, $color), border-color-hover);
          color: map-get(map-get($button-colors, $color), text-color-outline-hover);
        }

        &:active,
        &.-active {
          border: $border solid map-get(map-get($button-colors, $color), border-color-active);
          color: map-get(map-get($button-colors, $color), text-color-outline-active);
        }

        &[disabled],
        &.-disabled {
          @include button-disabled;
        }
      }

      &.-flat {
        background-color: $button-flat-background-color;
        border: $border solid transparent;
        box-shadow: none;
        color: map-get(map-get($button-colors, $color), text-color-outline);

        &:not(.-no-hover) {
          &:hover,
          &.-hover {
            border: $border solid map-get(map-get($button-colors, $color), border-color);
          }

          &:active,
          &.-active {
            background-color: transparent;
            border: $border solid map-get(map-get($button-colors, $color), border-color);
            box-shadow: none;
          }
        }

        &[disabled],
        &.-disabled {
          background-color: transparent;
          border-color: transparent;
          opacity: $opacity-60;

          & .chi-icon {
            color: inherit;
            opacity: $opacity-60;
          }
        }
      }

      &.-float {
        box-shadow: 0 2px 4px -1px rgba(0, 0, 0, 0.24),
        0 6px 10px 0 rgba(0, 0, 0, 0.14),
        0 1px 16px 0 rgba(0, 0, 0, 0.12);

        &:active,
        &.-active {
          box-shadow: 0 4px 4px -2px rgba(0, 0, 0, 0.2),
          0 8px 10px 1px rgba(0, 0, 0, 0.14),
          0 2px 14px 1px rgba(0, 0, 0, 0.12);
        }

        &[disabled],
        &.-disabled {
          @include button-disabled;
        }
      }
    }
  }
}
