@import '_global-mixins';
@import '_global-variables';

$attributes: (
  gap: g,
  margin: m,
  padding: p
);

$values: (
  gap: 0 1 2 3 4 5 6 7 8 9 10,
  margin: 0 1 2 3 4 5 6 7 8 9 10 auto,
  padding: 0 1 2 3 4 5 6 7 8 9 10
);

$positions: (
  a: '',
  b: '-bottom',
  l: '-left',
  r: '-right',
  t: '-top',
  x: '-x',
  y: '-y'
);

$screen-sizes-prefixes: (
  xs: '',
  sm: '-sm',
  md: '-md',
  lg: '-lg',
  xl: '-xl',
  xxl: '-xxl'
);

@function space($i) {
  @return if($i == 'auto', $i, ($i / 2) + rem);
}

@mixin decl($prop, $index) {
  @if $index == 'auto' {
    #{$prop}: space($index);
  } @else {
    #{$prop}: space($index) !important;
  }
}

@function is-valid-position($attribute, $position) {
  @if $attribute == gap {
    @return index(a x y, $position) != null;
  }
  @return true;
}

@mixin create-spacing($attribute, $attr-prefix, $screen-size, $size-infix) {
  $value-list: map-get($values, $attribute);

  @each $index in $value-list {
    @each $position, $pos-suffix in $positions {

      @if is-valid-position($attribute, $position) {
        $pos-infix: if($position == a, '', $position);
        .-#{$attr-prefix}#{$pos-infix}#{$size-infix}--#{$index} {

          @if $attribute == gap {
            @if $position == a {
              gap: space($index) !important;
            } @else if $position == x {
              column-gap: space($index) !important;
            } @else if $position == y {
              row-gap: space($index) !important;
            }

          } @else {
            @if $position == a {
              @include decl(#{$attribute}, $index);

            } @else if $position == x {
              @include decl(#{$attribute}-left, $index);
              @include decl(#{$attribute}-right, $index);

            } @else if $position == y {
              @include decl(#{$attribute}-bottom, $index);
              @include decl(#{$attribute}-top, $index);

            } @else {
              @include decl(#{$attribute}#{$pos-suffix}, $index);
            }
          }
        }
      }
    }
  }
}

@each $attribute, $attr-prefix in $attributes {
  @each $screen-size, $size-infix in $screen-sizes-prefixes {
    @if ($screen-size == 'xs') {
      @include create-spacing($attribute, $attr-prefix, $screen-size, $size-infix);
    } @else {
      @include respond-to($screen-size) {
        @include create-spacing($attribute, $attr-prefix, $screen-size, $size-infix);
      }
    }
  }
}