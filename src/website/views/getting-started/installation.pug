---
title: Installation
order: 2
---

h2.-text--h2.-text--bold CSS
p.-text
  | Add Chi CSS by copying and pasting the stylesheet below into the header of your project.
  | Chi's stylesheet is hosted on Lumen's Assets Server which is a highly available and 
  | performant option for loading assets into your Lumen project.
.-mb--2
  .-lumen--show
    :sriDoc(name='css-lumen')
  .-centurylink--show
    :sriDoc(name='css-centurylink')
  .-portal--show
    :sriDoc(name='css-portal')

p.-text
  | Next, add the <code>chi</code> CSS class to the <code>&lt;html&gt;</code> tag of your document to properly scope the styles.
  | This allows Chi to override any existing styles that have been defined by legacy markup.

  .-mb--2
  :code(lang='html')
    <html class="chi">
      ...
    </html>

p.-text.-mb--3
  | At this point you can now start using Chi. The documentation includes a wealth of templates and code samples
  | to get you started.

h2.-text--h2.-text--bold Favicon
.chi-badge.-dark.-outline.-xs.-mb--1
  span Optional
p.-text
  | A favicon is a small icon associated with a webpage that is typically displayed in a browser's
  | address bar, bookmarks, and tabs. To add a Lumen favicon to your project, insert the following
  | code before the closing <code>&lt;head&gt;</code> tag.
  .-mb--2
    .-centurylink--hide
      :sriDoc(name='favicon-lumen')
    .-centurylink--show
      :sriDoc(name='favicon-centurylink')

h2.-text--h2.-text--bold JavaScript
.chi-badge.-dark.-outline.-xs.-mb--1
  span Optional
p.-text
  | Although Chi can be used as a pure HTML and CSS library with only the stylesheet above, many advanced components
  | like tabs, drop downs, date pickers, and others require JavaScript to function. In most cases the need is minimal.
  | You may write your own JavaScript to integrate Chi's CSS and blueprints into your project, or use Chi's JavaScript library
  | which was written to provide a complete solution.
p.-text
  | Chi's JavaScript library depends on Popper.js for positioning components like Popovers and Dropdown menus, and Day.js
  | for calculating dates in the Datepicker component. For the rest, the library is entirely independent.
p.-text
  | Chi's JavaScript library is developed as an ES6 component, but with the help of Webpack, it is available in several flavors.
  | Choose the method that best fits your project.
ul#chi-js-tabs.chi-tabs.-border
  li.-active
    a(href='#chi-js-tabs--file') JavaScript file
  li
    a(href='#chi-js-tabs--amd') AMD module
  li
    a(href='#chi-js-tabs--es6') ES6 modules
#chi-js-tabs--file.chi-tabs-panel.-active
  p.-text
    | To use the old method of including Chi in your project, include the ES5, browser prepared, JavaScript
    | file from the Lumen Assets Server. In this solution Popper.js and Day.js are bundled into the file.
  .-mb--2
    :sriDoc(name='js')
#chi-js-tabs--amd.chi-tabs-panel
  p.-text
    | If you use RequireJS or any other AMD compatible module loader in your project, you will find the AMD compatible
    | version in the <code>amd</code> folder. Then, you will have to update your require configuration:
  :code(lang='javascript')
    'chi': {
      path: [CHI_PATH, 'amd', 'chi'].join('/'),
      shim: {
        deps: ['Popper'],
        exports: 'chi'
      }
    }
#chi-js-tabs--es6.chi-tabs-panel
  p.-text
    | For recent projects already using ES6 modules, will find their version in the <code>es6</code> folder. In this case, there is no
    | need for importing the whole Chi library as you can import each component separately by using ES6 import syntax.
  :code(lang='javascript')
    import {Dropdown} from "route/to/chi/es6/dropdown.js";

h2.-text--h2.-text--bold.-mt--4 Web Components
.chi-badge.-dark.-outline.-xs.-mb--1
  span Optional
p.-text
  | Chi Web Components are <a target="_blank" href="https://html.spec.whatwg.org/multipage/custom-elements.html#custom-elements" rel="noopener">Custom Elements</a>
  | designed to Lumen's specifications and built according to the HTML Living Standard.
  | They are written in vanilla Javascript for compatibility with major frameworks including
  | AngularJS, ReactJS, VueJS, or no framework at all.

p.-text
  | Add Chi Web Components by copying and pasting the JavaScript files below into the header of your
  | web application. Placing the files in the header is important as it will load any Polyfill if the browser
  | doesn't support Web Components.

.-mb--2
  :sriDoc(name='web-components')

p.-text.-mb--3
  | After placing the files in your header, you are now ready to use the Web Components described in this documentation.

.chi-expansion-panel.-web-components
  .chi-epanel.-no-step(data-chi-epanel-group="web-component-details")
    .chi-epanel__header
      .chi-epanel__title.-w--100(data-chi-epanel-action="toggle")
        i.chi-icon.icon-chevron-right.-mr--2(aria-hidden="true")
        | HTML attributes and DOM properties
    .chi-epanel__collapse
      .-active--only
        .chi-epanel__body
          .chi-epanel__content
            .chi-epanel__text
              p.-text
                | Chi Web Components can be used in several different ways. The most common are the HTML attributes
                | and the DOM properties. In most cases, we keep them synchronized. For example, the <code>chi-button</code> element has
                | a <code>size</code> attribute that can be accessed and modified in two ways.
              h3.-text--h5.-mt--3 Modifying the HTML attribute
              :code(lang='html')
                <chi-button id="close-btn" size="md">Close</chi-button>
                <script>
                  document.getElementById("close-btn").setAttribute("size", "xl");
                </script>
              h3.-text--h5.-mt--3 Setting the DOM property
              :code(lang='html')
                <chi-button id="close-btn" size="md">Close</chi-button>
                <script>
                  document.getElementById("close-btn").size="xl";
                </script>
  .chi-epanel.-no-step(data-chi-epanel-group="web-component-details")
    .chi-epanel__header
      .chi-epanel__title.-w--100(data-chi-epanel-action="toggle")
        i.chi-icon.icon-chevron-right.-mr--2(aria-hidden="true")
        | Boolean attributes and properties
    .chi-epanel__collapse
      .-active--only
        .chi-epanel__body
          .chi-epanel__content
            .chi-epanel__text
              p.-text
                | Some Chi components have boolean attributes which function the same way as the well known <code>disabled</code>
                | attribute. Boolean attributes are <code>true</code> when the HTML element has the attribute and <code>false</code> when not.
              p.-text
                | Boolean attributes can be set to true this way:
              .-mb--2
                :code(lang='html')
                  <input type="text" disabled />
                  <chi-drawer id="drawer" active />
                  <script>
                    document.getElementById("drawer").active = true;
                    document.getElementById("drawer").setAttribute("active", "active");
                  </script>
              p.-text
                | And set to false this way:
              .-mb--2
                :code(lang='html')
                  <input type="text"  />
                  <chi-drawer id="drawer" />
                  <script>
                    document.getElementById("drawer").active = false;
                    document.getElementById("drawer").removeAttribute("active");
                  </script>
              p.-text
                | Some components, like <code>chi-drawer</code>, have helper methods in order to change the state of commonly modified attributes:
              .-mb--2
                :code(lang='html')
                  <chi-drawer id="drawer" />
                  <script>
                    document.getElementById("drawer").show();   // This sets the active property to true
                    document.getElementById("drawer").hide();   // This sets the active property to false
                    document.getElementById("drawer").toggle(); // This toggles the state of the active property
                  </script>

h2.-text--h2.-text--bold Chi Vue
.chi-badge.-dark.-outline.-xs.-mb--1
  span Optional
p.-text
  | Chi supports a set of native Vue components.
  | Chi Vue can be installed via Github npm registry or included from CDN as a UMD library.
ul#chi-vue-tabs.chi-tabs.-border
  li.-active
    a(href='#chi-vue-tabs--npm') NPM
  li
    a(href='#chi-vue-tabs--umd') UMD
.-no-example-code-snippet
  #chi-vue-tabs--npm.chi-tabs-panel.-active
    .-d--flex.-no-gutter.-bg--grey-15
      .-bg--grey-15.-py--3.-br--1(style="width: 14rem;")
        ul#chi-vue-npm-tabs.chi-tabs.-vertical(role='tablist' aria-label='chi-tabs-vertical-base')
          li.-active
            a(href='#npm--npmrc' role='tab' aria-selected='true' aria-controls='vertical-base-1') .npmrc
          li
            a(href='#npm--package' role='tab' aria-selected='false' tabindex='-1' aria-controls='vertical-base-2') package.json
          li
            a(href='#npm--main' role='tab' aria-selected='false' tabindex='-1' aria-controls='vertical-base-3') main.ts
          li
            a(href='#npm--vueconfig' role='tab' aria-selected='false' tabindex='-1' aria-controls='vertical-base-3') vue.config.js

      .-flex--grow1.-h--100
        #npm--npmrc.chi-tabs-panel.-active(role='tabpanel')
          :code(lang='javascript')
            registry=https://registry.npmjs.org
            @centurylink:registry=https://npm.pkg.github.com/centurylink
            //npm.pkg.github.com/:_authToken=${GH_TOKEN}
        #npm--package.chi-tabs-panel(role='tabpanel')
          :code(lang='javascript')
            "@centurylink/chi-vue": "2.1.2",
            "copy-webpack-plugin": "^5.1.1",
        #npm--main.chi-tabs-panel(role='tabpanel')
          .chi-tab__description
            | Import Chi Vue and register its components globally
          :code(lang='javascript')
            import(/* webpackChunkName: "chi-vue" */ '@centurylink/chi-vue').then(chiVue => {
              Object.keys(chiVue.library.components).forEach((name: string) => {
                Vue.component(name, chiVue.library.components[name]);
              });
            }).finally(() =>{
              new Vue({
                render: h => h(App),
              }).$mount('#app')
            }).catch(() => {
              throw('@centurylink/chi-vue library is not loaded correctly!');
            }); 
        #npm--vueconfig.chi-tabs-panel(role='tabpanel')
          .chi-tab__description
            | Use <code>CopyWebpackPlugin</code> in vue.config.js to copy Chi Vue assets to dist
          :code(lang='javascript')
            const CopyWebpackPlugin = require('copy-webpack-plugin');

            module.exports = {
                configureWebpack: config => {
                  if (!config.externals) {
                    config.externals = {};
                  }

                  config.output.filename = '[name].js';
                  config.output.chunkFilename = '[name].js';

                  let plugins = [{ from: '@centurylink/chi-vue/dist' }];
                  config.plugins.push(
                    new CopyWebpackPlugin(plugins, {
                      context: 'node_modules',
                      ignore: ['.DS_Store'],
                    }));
                },
              };

  #chi-vue-tabs--umd.chi-tabs-panel
    .chi-tab__description
      | Include Chi Vue UMD library from CDN and register the components you need.
    :code(lang='html')
      <!-- UMD asset -->
      <script src="https://assets.ctl.io/chi/5.35.0/chi-vue/umd/chi-vue.umd.js"></script>

      <!-- Vue component example -->
      new Vue({
        components: {
          chiVuePagination: window['chi-vue'].library.components.ChiPagination,
        }
      });

      <!-- Vue template example -->
      <chi-vue-pagination :pages="5" :current-page="currentPage"></chi-vue-pagination>

.-lumen-show.-mt--5
  h2.-text--h2.-mt--3 Framework specific boilerplates
  table.chi-table.-bordered.-text--center.-mb--5
    caption.-text.-text--left.-mb--2
      | Boilerplates include:
    thead
      tr
        th.-text--center
          .-sr--only Framework
        th.-text--center chi.css
        th.-text--center chi.js
        th.-text--center Web components
        th.-text--center Favicon
        th.-text--center Download
    tbody
      tr
        td.-text--bold Vue
        td
          i.chi-icon.icon-check.-icon--success(aria-hidden="true")
        td
          i.chi-icon.icon-check.-icon--success(aria-hidden="true")
        td
          i.chi-icon.icon-check.-icon--success(aria-hidden="true")
        td
          i.chi-icon.icon-check.-icon--success(aria-hidden="true")
        td
          a.chi-button(href='../../boilerplates/chi-vue-boilerplate.zip')
            .chi-button__content
              i.chi-icon.icon-circle-arrow-down-outline(aria-hidden="true")
              span Download
      tr
        td.-text--bold Stencil
        td
          i.chi-icon.icon-check.-icon--success(aria-hidden="true")
        td
          i.chi-icon.icon-check.-icon--success(aria-hidden="true")
        td
          i.chi-icon.icon-check.-icon--success(aria-hidden="true")
        td
          i.chi-icon.icon-check.-icon--success(aria-hidden="true")
        td
          a.chi-button(href='../../boilerplates/chi-stencil-boilerplate.zip')
            .chi-button__content
              i.chi-icon.icon-circle-arrow-down-outline(aria-hidden="true")
              span Download
      tr
        td.-text--bold Angular
        td
          i.chi-icon.icon-check.-icon--success(aria-hidden="true")
        td
          i.chi-icon.icon-check.-icon--success(aria-hidden="true")
        td
          i.chi-icon.icon-check.-icon--success(aria-hidden="true")
        td
          i.chi-icon.icon-check.-icon--success(aria-hidden="true")
        td
          a.chi-button(href='../../boilerplates/chi-angular-boilerplate.zip')
            .chi-button__content
              i.chi-icon.icon-circle-arrow-down-outline(aria-hidden="true")
              span Download
      tr
        td.-text--bold React
        td
          i.chi-icon.icon-check.-icon--success(aria-hidden="true")
        td
          i.chi-icon.icon-check.-icon--success(aria-hidden="true")
        td
          i.chi-icon.icon-check.-icon--success(aria-hidden="true")
        td
          i.chi-icon.icon-check.-icon--success(aria-hidden="true")
        td
          a.chi-button(href='../../boilerplates/chi-react-boilerplate.zip')
            .chi-button__content
              i.chi-icon.icon-circle-arrow-down-outline(aria-hidden="true")
              span Download
      tr
        td.-text--bold Vue + ES6
        td
          i.chi-icon.icon-check.-icon--success(aria-hidden="true")
        td
          i.chi-icon.icon-check.-icon--success(aria-hidden="true")
        td
          i.chi-icon.icon-check.-icon--success(aria-hidden="true")
        td
          i.chi-icon.icon-check.-icon--success(aria-hidden="true")
        td
          a.chi-button(href='../../boilerplates/chi-vue-es6-boilerplate.zip')
            .chi-button__content
              i.chi-icon.icon-circle-arrow-down-outline(aria-hidden="true")
              span Download

script.
  chi.tab(document.getElementById('chi-js-tabs'));
  chi.tab(document.getElementById('chi-vue-tabs'));
  chi.tab(document.getElementById('chi-vue-npm-tabs'));
  chi.expansionPanel(
    document.querySelectorAll('[data-chi-epanel-group="web-component-details"]'),
    {mode: 'accordion'}
  );
