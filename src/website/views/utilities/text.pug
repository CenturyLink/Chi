---
title: Text
description: Use text utility classes to control sizing, color, alignment and more.
---
-
  var sizes = {
    'xl': {font:'18px (1.125rem)',    line:'28px (1.75rem)'},
    'lg': {font:'16px (1rem)',        line:'24px (1.5rem)'},
    'md': {font:'14px (0.875rem)',    line:'24px (1.5rem)'},
    'sm': {font:'13px (0.8125rem)',   line:'20px (1.25rem)'},
    'xs': {font:'12px (0.75rem)',     line:'16px (1rem)'},
    '2xs': {font:'11px (0.6875rem)',  line:'16px (1rem)'}
  }

  var headings = {
    'h1': {font:'48px (3rem)',        line:'64px (4rem)'},
    'h2': {font:'32px (2rem)',        line:'48px (3rem)'},
    'h3': {font:'24px (1.5rem)',      line:'32px (2rem)'},
    'h4': {font:'18px (1.125rem)',    line:'32px (2rem)'},
    'h5': {font:'16px (1rem)',        line:'24px (1.5rem)'},
    'h6': {font:'14px (0.875rem)',    line:'24px (1.5rem)'}
  }

h2 Text size
p.-text
  | Text size supports the following sizes: <code>-text--2xs</code>, <code>-text--xs</code>, <code>-text--sm</code>, <code>-text--md</code>,
  | <code>-text--lg</code>, and <code>-text--xl</code>. The default size is <code>-text--md</code>.
.example.-b--0
  section.chi-table.-bordered.-mt--3
    div
      table(cellpadding='0', cellspacing='0')
        thead
          tr
            th
              div Size
            th
              div Example
        tbody
          each value, index in sizes
            tr
              td.-w--30.-w-md--20
                code=`-text--${index}`
                dl.-text.-text--xs.-mt--2
                  dt.-text--bold Font-size:
                  dd=value.font
                  dt.-text--bold.-mt--1 Line-height:
                  dt=value.line
              td
                p(class=`-text--${index}`)
                  | The quick brown fox jumps over the lazy dog.
.example.-bt--0.-mb--3
  :code(lang="html")
    <p class="-text--xl">The quick brown fox jumps over the lazy dog.</p>
    <p class="-text--lg">The quick brown fox jumps over the lazy dog.</p>
    <p class="-text--md">The quick brown fox jumps over the lazy dog.</p>
    <p class="-text--sm">The quick brown fox jumps over the lazy dog.</p>
    <p class="-text--xs">The quick brown fox jumps over the lazy dog.</p>
    <p class="-text--2xs">The quick brown fox jumps over the lazy dog.</p>

h2 Text headings
p.-text Use classes <code>-text--h1</code> through <code>-text--h6</code> to match Chi's default heading sizes.
.example.-b--0
  section.chi-table.-bordered.-mt--3
    div
      table(cellpadding='0', cellspacing='0')
        thead
          tr
            th
              div Size
            th
              div Example
        tbody
          each value, index in headings
            tr
              td.-w--30.-w-md--20
                code=`-text--${index}`
                dl.-text.-text--xs.-mt--2
                  dt.-text--bold Font-size:
                  dd=value.font
                  dt.-text--bold.-mt--1 Line-height:
                  dt=value.line
              td
                p(class=`-text--${index} -px--2`)
                  | The quick brown fox jumps over the lazy dog.
.example.-bt--0.-mb--3
  :code(lang="html")
    <p class="-text--h1">The quick brown fox jumps over the lazy dog.</p>
    <p class="-text--h2">The quick brown fox jumps over the lazy dog.</p>
    <p class="-text--h3">The quick brown fox jumps over the lazy dog.</p>
    <p class="-text--h4">The quick brown fox jumps over the lazy dog.</p>
    <p class="-text--h5">The quick brown fox jumps over the lazy dog.</p>
    <p class="-text--h6">The quick brown fox jumps over the lazy dog.</p>

h2 Text line height
p.-text
  | Use shorthand utility classes to control an element's line-height. Line height sizes are equal to <code>$base-unit * {size}</code>
  | and illustrated in green in the example below.
.example.-mb--3
  .-m--3.-show--example
    each type in ['lh--1', 'lh--2', 'lh--3', 'lh--4', 'lh--5', 'lh--6', 'lh--7', 'lh--8', 'lh--9']
      p.-text.-pl--1(class=`-${type}`)
        = `-${type}`
  :code(lang="html")
    <p class="-text -lh--1">-lh--1</p>
    <p class="-text -lh--2">-lh--2</p>
    <p class="-text -lh--3">-lh--3</p>
    <p class="-text -lh--4">-lh--4</p>
    <p class="-text -lh--5">-lh--5</p>
    <p class="-text -lh--6">-lh--6</p>
    <p class="-text -lh--7">-lh--7</p>
    <p class="-text -lh--8">-lh--8</p>
    <p class="-text -lh--9">-lh--9</p>

h2 Text alignment
p.-text Change text alignment to justified, left, center, or right.
.example.-mb--3
  .-m--3
    p.-text.-text--justify This text will render as justified
    p.-text.-text--left This text will render as left aligned
    p.-text.-text--center This text will render as center aligned
    p.-text.-text--right This text will render as right aligned
  :code(lang="html")
      <p class="-text--justify">This text will render as justified</p>
      <p class="-text--left">This text will render as left aligned</p>
      <p class="-text--center">This text will render as center aligned</p>
      <p class="-text--right">This text will render as right aligned</p>

h2 Text decoration
p.-text Change text decoration to no-decoration, underline, or line-through.
.example.-mb--3
  .-m--3
    p.-text.-text--no-decoration This text will render with no decoration
    p.-text.-text--underline This text will render with an underline
    p.-text.-text--line-through This text will render with a line through
  :code(lang="html")
      <p class="-text--no-decoration">This text will render with no decoration</p>
      <p class="-text--underline">This text will render with an underline</p>
      <p class="-text--line-through">This text will render with a line through</p>

h2 Text transform
p.-text Change text transform to lowercase, uppercase, or capitalize.
.example.-mb--3
  .-m--3
    p.-text.-text--lowercase This text will render as lowercase
    p.-text.-text--uppercase This text will render as uppercase
    p.-text.-text--capitalize This text will render as capitalize
    p.-text.-text--no-transform This text will render with no transform
  :code(lang="html")
      <p class="-text--lowercase">This text will render as lowercase</p>
      <p class="-text--uppercase">This text will render as uppercase</p>
      <p class="-text--capitalize">This text will render as capitalize</p>
      <p class="-text--no-transform">This text will render with no transform</p>

h2 Text weight
p.-text Change text weight to thin, normal, semi-bold, bold, bolder, or boldest.
.example.-mb--3
  .-m--3
    p.-text.-text--thin This text will render as thin
    p.-text.-text--normal This text will render as normal
    p.-text.-text--semi-bold This text will render as semi-bold
    p.-text.-text--bold This text will render as bold
    p.-text.-text--bolder This text will render as bolder
    p.-text.-text--boldest This text will render as boldest
  :code(lang="html")
      <p class="-text--thin">This text will render as thin</p>
      <p class="-text--normal">This text will render as normal</p>
      <p class="-text--semi-bold">This text will render as semi-bold</p>
      <p class="-text--bold">This text will render as bold</p>
      <p class="-text--bolder">This text will render as bolder</p>
      <p class="-text--boldest">This text will render as boldest</p>

h2 Text wrapping
p.-text Prevent text wrapping with nowrap or control overflow with truncate.
.example.-mb--3
  .-m--3
    p.-text.-text--nowrap(style="width: 11rem;background:#eeeeee;") This text will render without wrapping
    p.-text.-text--truncate(style="width: 11rem;") This text will truncate with an ellipsis
  :code(lang="html")
      <p class="-text--nowrap">This text will render without wrapping</p>
      <p class="-text--truncate">This text will truncate with an ellipsis</p>

h2 Text colors
p.-text Change text colors with contextual classes.
h3 Brand
p.-text
  | Brand text colors reinforce Lumen's brand. Use primary and secondary as accents and body and light as neutrals.
.example.-mb--3
  .chi-grid.-no-gutter
    .chi-col.-w--12.-w-md--6.-p--1.-d--flex.-justify-content--center
      each type in ['text--body', 'text--primary']
        div.-p--1.-p-sm--2.-text--center
          p.-text(class=`-${type}`)
            = `-${type}`
    .chi-col.-w--12.-w-md--6.-bg--black.-p--1.-d--flex.-justify-content--center
      each type in ['text--secondary', 'text--light']
        if (type === 'text--secondary')
          div.-p--1.-p-sm--2.-text--center
            p.-text.-text--secondary -text--secondary
        else if (type === 'text--light')
          div.-p--1.-p-sm--2.-text--center
            p.-text.-text--light -text--light
  :code(lang="html")
    <!-- For light backgrounds -->
    <p class="-text--body">-text--body</p>
    <p class="-text--primary">-text--primary</p>
    <!-- For dark backgrounds -->
    <p class="-text--secondary">-text--secondary</p>
    <p class="-text--light">-text--light</p>
h3 Semantic
p.-text
  | Use semantic text colors to communicate meaning to users. Examples include displaying alerts, form field
  | validation, user status, application state and more. Use green (success) for positive, blue (info)
  | for informative, red (danger) for negative, yellow (warning) for needs attention, and grey (muted)
  | for neutral. Semantic colors should never be used for decorative purposes.
.example.-mb--3
  .chi-grid.-no-gutter
    .chi-col.-w--12.-p--1.-d--flex.-justify-content--center.-flex--wrap
      each type in ['text--success', 'text--info', 'text--danger', 'text--warning', 'text--muted']
        div.-p--1.-p-sm--2.-text--center
          p.-text(class=`-${type}`)
            = `-${type}`
  :code(lang="html")
    <p class="-text--success">-text--success</p>
    <p class="-text--info">-text--info</p>
    <p class="-text--warning">-text--warning</p>
    <p class="-text--danger">-text--danger</p>
    <p class="-text--muted">-text--muted</p>

.-lumen--show
  h3 Brand complimentary
  p.-text More text colors that can be used to compliment the primary brand palette.
  .example.-mb--3
    .chi-grid.-no-gutter
      .chi-col.-w--12.-p--1.-d--flex.-justify-content--center.-flex--wrap
        each type in ['text--navy', 'text--orange']
          div.-p--1.-p-sm--2.-text--center
            p.-text(class=`-${type}`)
              = `-${type}`
    :code(lang="html")
      <p class="-text--navy">-text--navy</p>
      <p class="-text--orange">-text--orange</p>

h2 Responsiveness
h3 Sizes
p.-text Text utility classes can be defined using the format <code>-text[-{breakpoint}]--{size}</code>.
h4 {breakpoint}
p.-text
  | Optionally, include -{breakpoint} to apply the utility behaviour to some breakpoints. As a mobile-first library,
  | any applying to smaller breakpoints will also modify larger ones unless another class overrides this behaviour.
ul.-text
  li blank - leave blank to apply <code>text</code> to all breakpoints.
  li <code>sm</code> - use to apply <code>text</code> to sm and larger breakpoints.
  li <code>md</code> - use to apply <code>text</code> to md and larger breakpoints.
  li <code>lg</code> - use to apply <code>text</code> to lg and larger breakpoints.
  li <code>xl</code> - use to apply <code>text</code> to xl breakpoints.
h4 {size}
ul.-text
  li <code>xs</code> - use to apply an <code>x-small</code> size to <code>text</code>
  li <code>sm</code> - use to apply an <code>small</code> size to <code>text</code>
  li <code>md</code> - use to apply an <code>medium</code> size to <code>text</code>
  li <code>lg</code> - use to apply an <code>large</code> size to <code>text</code>
  li <code>xl</code> - use to apply an <code>x-large</code> size to <code>text</code>
ul.-text
  li <code>h6</code> - use to apply an <code>h6</code> size to <code>text</code>
  li <code>h5</code> - use to apply an <code>h5</code> size to <code>text</code>
  li <code>h4</code> - use to apply an <code>h4</code> size to <code>text</code>
  li <code>h3</code> - use to apply an <code>h3</code> size to <code>text</code>
  li <code>h2</code> - use to apply an <code>h2</code> size to <code>text</code>
  li <code>h1</code> - use to apply an <code>h1</code> size to <code>text</code>
.example.-mb--3
  p.-text.-text-md--lg.-m--3
    | Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum lacus lacus, dictum quis mauris vel,
    | commodo condimentum odio. Praesent lacus metus, vehicula at orci ac, fringilla mollis mauris.
  p.-text.-text-xl--xs.-m--3
    | Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum lacus lacus, dictum quis mauris vel,
    | commodo condimentum odio. Praesent lacus metus, vehicula at orci ac, fringilla mollis mauris.
  p.-text.-text-lg--xl.-m--3
    | Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum lacus lacus, dictum quis mauris vel,
    | commodo condimentum odio. Praesent lacus metus, vehicula at orci ac, fringilla mollis mauris.
  :code(lang="html")
    <p class="-text-md--lg"></p>
    <p class="-text-xl--xs"></p>
    <p class="-text-lg--xl"></p>

h3 Line heights
p.-text Line height sizes can be defined using the format <code>-lh[-{breakpoint}]--{size}</code>.
h4 {breakpoint}
p.-text
  | Optionally, include -{breakpoint} to apply the utility behaviour to some breakpoints. As a mobile-first library,
  | any applying to smaller breakpoints will also modify larger ones unless another class overrides this behaviour.
ul.-text
  li blank - leave blank to apply <code>text</code> to all breakpoints.
  li <code>sm</code> - use to apply <code>line-height</code> to sm and larger breakpoints.
  li <code>md</code> - use to apply <code>line-height</code> to md and larger breakpoints.
  li <code>lg</code> - use to apply <code>line-height</code> to lg and larger breakpoints.
  li <code>xl</code> - use to apply <code>line-height</code> to xl breakpoints.
h4 {size}
ul.-text
  li <code>0</code> - use to set <code>line-height</code> and set to <code>0</code>
  li <code>1</code> - use to set <code>line-height</code> to <code>$base-unit * 1</code>
  li <code>2</code> - use to set <code>line-height</code> to <code>$base-unit * 2</code>
  li <code>3</code> - use to set <code>line-height</code> to <code>$base-unit * 3</code>
  li <code>4</code> - use to set <code>line-height</code> to <code>$base-unit * 4</code>
  li <code>5</code> - use to set <code>line-height</code> to <code>$base-unit * 5</code>
  li <code>6</code> - use to set <code>line-height</code> to <code>$base-unit * 6</code>
  li <code>7</code> - use to set <code>line-height</code> to <code>$base-unit * 7</code>
  li <code>8</code> - use to set <code>line-height</code> to <code>$base-unit * 8</code>
  li <code>9</code> - use to set <code>line-height</code> to <code>$base-unit * 9</code>
.example.-mb--3
  .-m--3.-show--example
    p.-text.-pl--1.-lh-md--2 -lh-md--2
    p.-text.-pl--1.-lh-lg--4 -lh-lg--4
    p.-text.-pl--1.-lh-sm--5 -lh-sm--5
    p.-text.-pl--1.-lh-xl--7 -lh-xl--7
  :code(lang="html")
    <p class="-text -lh-md--2">-lh-md--2</p>
    <p class="-text -lh-lg--4">-lh-lg--4</p>
    <p class="-text -lh-sm--5">-lh-sm--5</p>
    <p class="-text -lh-xl--7">-lh-xl--7</p>

h3 Text alignment
p.-text Text utility classes can be align using the format <code>-text[-{breakpoint}]--{alignment}</code>.
h4 {breakpoint}
p.-text
  | Optionally, include -{breakpoint} to apply the utility behaviour to some breakpoints. As a mobile-first library,
  | any applying to smaller breakpoints will also modify larger ones unless another class overrides this behaviour.
ul.-text
  li blank - leave blank to apply <code>alignment</code> to all breakpoints.
  li <code>sm</code> - use to apply <code>alignment</code> to sm and larger breakpoints.
  li <code>md</code> - use to apply <code>alignment</code> to md and larger breakpoints.
  li <code>lg</code> - use to apply <code>alignment</code> to lg and larger breakpoints.
  li <code>xl</code> - use to apply <code>alignment</code> to xl breakpoints.
h4 {alignment}
ul.-text
  li <code>justify</code> - use to set <code>justify</code> the <code>text</code>
  li <code>center</code> - use to set <code>center</code> the <code>text</code>
  li <code>left</code> - use to set <code>left</code> the <code>text</code>
  li <code>right</code> - use to set <code>right</code> the <code>text</code>
.example.-mb--3
  .-m--3
    p.-text.-text-md--justify This text will render as justified from md and larger breakpoints
    p.-text.-text-lg--left This text will render as left aligned from lg and larger breakpoints
    p.-text.-text-sm--center This text will render as center aligned from sm and larger breakpoints
    p.-text.-text-xl--right This text will render as right aligned from xl and larger breakpoints
  :code(lang="html")
    <p class="-text-md--justify">This text will render as justified from md and larger breakpoints</p>
    <p class="-text-lg--left">This text will render as left aligned from lg and larger breakpoints</p>
    <p class="-text-sm--center">This text will render as center aligned from sm and larger breakpoints</p>
    <p class="-text-xl--right">This text will render as right aligned from xl and larger breakpoints</p>
