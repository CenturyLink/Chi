h2 Accessibility
h3 Keyboard Navigation
table.chi-table
  thead
    tr  
      th Key
      th Function
  tbody
    tr
      td <code>Tab</code>
      td Moves focus to next element in Tab sequence. If focus is on the pop-over, moves focus to the first chevron.         
    tr
      td <code>Shift + Tab</code>
      td Moves focus to the previous focusable element.       
    tr
      td <code>Enter</code>,<code>Space</code>
      td Selects the option and closes the dropdown.
    tr
      td <code>Up Arrow</code>
      td Moves focus to the same day of the previous week.
    tr 
      td <code>Down Arrow</code>
      td Moves focus to the same day of the next week.
    tr 
      td <code>Right Arrow</code>
      td Moves focus to the next day.
    tr 
      td <code>Left Arrow</code>
      td Moves focus to the previous day.
    tr 
      td <code>Esc</code>
      td Closes the popup.


p.-text
  | For comprehensive details on keyboard support, refer to our <a href="https://lib.lumen.com/chi/5.70.0/foundations/accessibility/using-keyboard/" target="_blank">Keyboard Control Guide.</a>
p.-text
  | Visit <a href="https://webaim.org/techniques/keyboard/" target="_blank">WebAIM</a> for keyboard techniques.

.chi-grid
  .chi-col.-w-sm--12.-w-md--6.-w-lg--6.-mb--3
    .chi-card.-widget
      .chi-card__header 
        .chi-card__title.-text--normal Guidance for developers
      .chi-card__content 
        .chi-card__caption
          ul.-text
            li Keyboard Navigation: Support navigation through days, months, and years using arrow keys, and allow selection with the "Enter" key.
            li Use <code>label</code> elements to provide descriptive labels for each select component. Ensure the <code>for</code> attribute of the label matches the <code>id</code> of the select box to support screen readers.
            li Use appropriate ARIA roles and attributes to enhance accessibility. For example, <code>role="listbox"</code> for the select element and <code>role="option"</code> for each option.
            li Error Handling and Feedback: Provide clear and immediate feedback for actions such as selection errors. Use ARIA live regions to announce updates or errors dynamically.
            li Test compatibility with various screen readers (like JAWS, NVDA, or VoiceOver) to ensure the date picker component is announced correctly. Options should be clearly read out when navigated.
            li Implement visible focus styles to help keyboard users determine which element has focus. 
  
  .chi-col.-w-sm--12.-w-md--6.-w-lg--6.-mb--3
    .chi-card.-widget
      .chi-card__header 
        .chi-card__title.-text--normal Guidance for designers
      .chi-card__content 
        .chi-card__caption 
          ul.-text
            li Ensure all interactive elements in the date picker, like day selections and navigation buttons, meet the minimum target size of 44x44 pixels, as recommended by WCAG 2.5.5.
            li Design elements with adequate spacing to prevent accidental activations.
            li Design the date picker with high contrast between text and background colors, ensuring a minimum contrast ratio of 4.5:1 for text.
            li Employ distinct visual styles for error states using icons, text styles, and colors to clearly denote and explain errors like invalid dates or format issues.
            li Implement noticeable focus indicators on interactive elements, using enhanced borders, outlines, or shadows to clearly mark the active element during keyboard navigation.
            li Use spacing, typography, and visual cues effectively.
            li Maintain consistency in the design of the date picker to provide a cohesive user experience.

p.-text 
  | Find live examples in the <a href="https://www.w3.org/WAI/ARIA/apg/patterns/dialog-modal/examples/datepicker-dialog/" target="_blank">W3 Date Picker Example</a>.  

h3 Resources
ul.-text
  li
    a(href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/date" target="_blank") Mozilla Resources for Developers: 
    | Information about the HTML <code>input-type=date</code>.
  li  
    a(href="https://www.magentaa11y.com/checklist-web/date-picker/" target="_blank") MagentaA11y: 
    | How to test a date picker dialog.

h3 Other recommendations
p.-text
  | Explore additional accessibility tips in the general <a href="https://lib.lumen.com/chi/5.70.0/foundations/accessibility/overview" target="_blank">Accessibility Guide.</a>

h3 WCAG 2.2 Guidelines
ul.-text
  li
    a(href="https://www.w3.org/WAI/WCAG22/quickref/?versions=2.2#non-text-content" target="_blank") Non-text Content: 
    | All non-text content that is presented to the user has a text alternative that serves the equivalent purpose. (Level A)
  li
    a(href="https://www.w3.org/WAI/WCAG22/quickref/?versions=2.2#qr-content-structure-separation-programmatic" target="_blank") Info and Relationships: 
    | Information, structure, and relationships conveyed through presentation can be programmatically determined or are available in text. (Level A)
  li 
    a(href="https://www.w3.org/WAI/WCAG22/quickref/?versions=2.2#qr-navigation-mechanisms-descriptive" target="_blank") Headings and Labels: 
    | Headings and labels describe topic or purpose. (Level AA)
  li
    a(href="https://www.w3.org/WAI/WCAG22/quickref/?versions=2.2#qr-minimize-error-cues" target="_blank") Labels or Instructions: 
    | Labels or instructions are provided when content requires user input. (Level A)
  li
    a(href="https://www.w3.org/WAI/WCAG22/quickref/?versions=2.2#qr-ensure-compat-rsv" target="_blank") Name, Role, Value: 
    | For all user interface components (including but not limited to: form elements, links and components generated by scripts), the name and role can be programmatically determined; states, properties, and values that can be set by the user can be programmatically set; and notification of changes to these items is available to user agents, including assistive technologies. (Level A) 