h2 Examples

h3 Backdrop
h4 Base
.example.-mb--3
  .-p--6(style="position:relative;height:25rem;")
    chi-spinner(color='light', backdrop)
  .example-tabs.-pl--2
    ul.chi-tabs#examples-default
      li.-active
        a(href=`#webcomponent`) Web Component
      li
        a(href=`#html`) HTML Blueprint
  .chi-tabs-panel.-active#webcomponent
    .chi-tab__description
      | To render a spinner, use the tag <code>&lt;chi-spinner&gt;</code>.
      br
      | An optional backdrop can be added to focus the user's attention on a spinner. To set a backdrop, use the <code>backdrop</code> attribute.
    :code(lang="html")
      <chi-spinner color="light" backdrop></chi-spinner>
  .chi-tabs-panel#html
    .chi-tab__description
      | To render a spinner, use the class <code>chi-spinner</code>.
      br
      | Wrap spinners in <code>chi-backdrop</code> to overlay content similar to a modal, and add <code>-center</code> class to position it in the middle of the page.
    :code(lang="html")
      <div class="chi-backdrop -center">
        <div class="chi-backdrop__wrapper">
          <svg class="chi-spinner -icon--light" viewBox="0 0 66 66">
            <title>Loading</title>
            <circle class="path" cx="33" cy="33" r="30" fill="none" stroke-width="6"></circle>
          </svg>
        </div>
      </div>

h4 Inverse
.example.-mb--3
  .-p--6(style="position:relative;height:25rem;")
    chi-spinner(color='primary', backdrop='inverse')
  .example-tabs.-pl--2
    ul.chi-tabs#examples-inverse
      li.-active
        a(href=`#webcomponent-inverse`) Web Component
      li
        a(href=`#html-inverse`) HTML Blueprint
  .chi-tabs-panel.-active#webcomponent-inverse
    .chi-tab__description
      | Set the <code>backdrop</code> value to <code>inverse</code> to render spinners on light backgrounds.
    :code(lang="html")
      <chi-spinner color="primary" backdrop="inverse"></chi-spinner>
  .chi-tabs-panel#html-inverse
    .chi-tab__description
      | Apply the class <code>-inverse</code> to render spinners on light backgrounds.
    :code(lang="html")
      <div class="chi-backdrop -center -inverse">
        <div class="chi-backdrop__wrapper">
          <svg class="chi-spinner -icon--primary" viewBox="0 0 66 66">
            <title>Loading</title>
            <circle class="path" cx="33" cy="33" r="30" fill="none" stroke-width="6"></circle>
          </svg>
        </div>
      </div>

h3 Contextual

.-portal--hide
  h4 Spinners in Buttons
  .example.-mb--3
    .-p--3
      chi-button(class='-mr--3')
        span= 'Button'
        chi-spinner(color='muted')
      chi-button(class='-mr--3', size='sm')
        span= 'Small'
        chi-spinner(color='muted', size='xs')
      chi-button(class='-mr--3', size='lg')
        span= 'Large'
        chi-spinner(color='muted', size='sm--2')
    .example-tabs.-pl--2
      ul.chi-tabs#examples-contextual
        li.-active
          a(href=`#webcomponent-contextual`) Web Component
        li
          a(href=`#html-contextual`) HTML Blueprint
    .chi-tabs-panel.-active#webcomponent-contextual
      :code(lang="html")
        <chi-button>
          <span>Button</span>
          <chi-spinner color="muted"></chi-spinner>
        </chi-button>
        <chi-button size="sm">
          <span>Small</span>
          <chi-spinner color="muted" size="xs"></chi-spinner>
        </chi-button>
        <chi-button size="lg">
          <span>Large</span>
          <chi-spinner color="muted" size="sm--2"></chi-spinner>
        </chi-button>
    .chi-tabs-panel#html-contextual
      :code(lang="html")
        <button class="chi-button">
          <div class="chi-button__content">
            <span>Button</span>
            <svg class="chi-spinner -icon--muted" viewBox="0 0 66 66">
              <title>Loading</title>
              <circle class="path" cx="33" cy="33" r="30" fill="none" stroke-width="6"></circle>
            </svg>
          </div>
        </button>
        <button class="chi-button">
          <div class="chi-button__content">
            <span>Small</span>
            <svg class="chi-spinner -icon--muted -xs" viewBox="0 0 66 66">
              <title>Loading</title>
              <circle class="path" cx="33" cy="33" r="30" fill="none" stroke-width="6"></circle>
            </svg>
          </div>
        </button>
        <button class="chi-button">
          <div class="chi-button__content">
            <span>Large</span>
            <svg class="chi-spinner -icon--muted -sm--2" viewBox="0 0 66 66">
              <title>Loading</title>
              <circle class="path" cx="33" cy="33" r="30" fill="none" stroke-width="6"></circle>
            </svg>
          </div>
        </button>

.-portal--show
  h4 Spinners in Buttons
  .example.-mb--3
    .-p--3
      chi-button(color='primary', variant='outline', class='-mr--3')
        span= 'Button'
        chi-spinner(color='primary')
      chi-button(color='primary', variant='outline', class='-mr--3', size='sm')
        span= 'Small'
        chi-spinner(color='primary', size='xs')
      chi-button(color='primary', variant='outline', class='-mr--3', size='lg')
        span= 'Large'
        chi-spinner(color='primary', size='sm--2')
    .example-tabs.-pl--2
      ul.chi-tabs#examples-contextual
        li.-active
          a(href=`#webcomponent-portal-contextual`) Web Component
        li
          a(href=`#html-portal-contextual`) HTML Blueprint
    .chi-tabs-panel.-active#webcomponent-portal-contextual
      :code(lang="html")
        <chi-button color="primary" variant="outline">
          <span>Button</span>
          <chi-spinner color="primary"></chi-spinner>
        </chi-button>
        <chi-button size="sm" color="primary" variant="outline">
          <span>Small</span>
          <chi-spinner color="primary" size="xs"></chi-spinner>
        </chi-button>
        <chi-button size="lg" color="primary" variant="outline">
          <span>Large</span>
          <chi-spinner color="primary" size="sm--2"></chi-spinner>
        </chi-button>
    .chi-tabs-panel#html-portal-contextual
      :code(lang="html")
        <button class="chi-button -primary -outline">
          <div class="chi-button__content">
            <span>Button</span>
            <svg class="chi-spinner -icon--primary" viewBox="0 0 66 66">
              <title>Loading</title>
              <circle class="path" cx="33" cy="33" r="30" fill="none" stroke-width="6"></circle>
            </svg>
          </div>
        </button>
        <button class="chi-button -primary -outline">
          <div class="chi-button__content">
            <span>Small</span>
            <svg class="chi-spinner -icon--primary -xs" viewBox="0 0 66 66">
              <title>Loading</title>
              <circle class="path" cx="33" cy="33" r="30" fill="none" stroke-width="6"></circle>
            </svg>
          </div>
        </button>
        <button class="chi-button -primary -outline">
          <div class="chi-button__content">
            <span>Large</span>
            <svg class="chi-spinner -icon--primary -sm--2" viewBox="0 0 66 66">
              <title>Loading</title>
              <circle class="path" cx="33" cy="33" r="30" fill="none" stroke-width="6"></circle>
            </svg>
          </div>
        </button>


h4 Spinners in Text Inputs
.example.-mb--3
  .-p--3
    .chi-form__item.-mb--2(style="max-width:20rem")
      chi-label(for="spinner-input-01") Label
      chi-text-input(id="spinner-input-01" spinner)
    .chi-form__item.-mb--2(style="max-width:20rem")
      chi-label(for="spinner-input-02") Label
      chi-text-input(id="spinner-input-02" spinner size="sm")
    .chi-form__item.-mb--2(style="max-width:20rem")
      chi-label(for="spinner-input-03") Label
      chi-text-input(id="spinner-input-03" spinner size="lg")
  .example-tabs.-pl--2
    ul.chi-tabs#example-spinner-text
      li.-active
        a(href=`#webcomponent-spinner-text`) Web Component
      li
        a(href=`#html-spinner-text`) HTML Blueprint
  .chi-tabs-panel.-active#webcomponent-spinner-text
    .chi-tab__description
      | Use the <code>spinner</code> attribute to render a spinner inside a text input. This lets users know when information is saving or loading.
    :code(lang="html")
      <!-- Medium (Base) -->
      <div class="chi-form__item">
        <chi-label for="spinner-input-01">Label</chi-label>
        <chi-text-input id="spinner-input-01" spinner></chi-text-input>
      </div>
      <!-- Small -->
      <div class="chi-form__item">
        <chi-label for="spinner-input-02">Label</chi-label>
        <chi-text-input id="spinner-input-02" spinner size="sm"></chi-text-input>
      </div>
      <!-- Large -->
      <div class="chi-form__item">
        <chi-label for="spinner-input-03">Label</chi-label>
        <chi-text-input id="spinner-input-03" spinner size="lg"></chi-text-input>
      </div>
  .chi-tabs-panel#html-spinner-text
    :code(lang="html")
      <!-- Medium (Base) -->
      <div class="chi-form__item">
        <label class="chi-label" for="spinner-input-01">Label</label>
        <div class="chi-input__wrapper">
          <input type="text" class="chi-input" placeholder="Placeholder" value="Sample text" id="spinner-input-01">
          <svg class="chi-spinner -icon--muted" viewBox="0 0 66 66">
            <title>Loading</title>
            <circle class="path" cx="33" cy="33" r="30" fill="none" stroke-width="6"></circle>
          </svg>
        </div>
      </div>
      <!-- Small -->
      <div class="chi-form__item">
        <label class="chi-label" for="spinner-input-02">Label</label>
        <div class="chi-input__wrapper">
          <input type="text" class="chi-input -sm" placeholder="Placeholder" value="Sample text" id="spinner-input-02">
          <svg class="chi-spinner -icon--muted -xs" viewBox="0 0 66 66">
            <title>Loading</title>
            <circle class="path" cx="33" cy="33" r="30" fill="none" stroke-width="6"></circle>
          </svg>
        </div>
      </div>
      <!-- Large -->
      <div class="chi-form__item">
        <label class="chi-label" for="spinner-input-03">Label</label>
        <div class="chi-input__wrapper">
          <input type="text" class="chi-input -lg" placeholder="Placeholder" value="Sample text" id="spinner-input-03">
          <svg class="chi-spinner -icon--muted -sm--2" viewBox="0 0 66 66">
            <title>Loading</title>
            <circle class="path" cx="33" cy="33" r="30" fill="none" stroke-width="6"></circle>
          </svg>
          </div>
        </div>
      </div>

.-portal--hide
  h3 Sizes
  .example.-mb--3
    .-p--3
      .chi-grid.-align-items--end
        each size in ['xs', 'sm', 'sm--2', 'sm--3', 'md', 'lg', 'xl', 'xxl']
          div.-p--2
            chi-spinner(size=size, class='-m--1')
            p.-text.-text--center= size
    .example-tabs.-pl--2
      ul.chi-tabs#examples-sizes
        li.-active
          a(href=`#webcomponent-sizes`) Web Component
        li
          a(href=`#html-sizes`) HTML Blueprint
    .chi-tabs-panel.-active#webcomponent-sizes
      .chi-tab__description
        | By default, spinners are rendered at 16x16px (<code>sm</code>).
        | Set <code>size</code> attribute to render spinners larger or smaller: <code>xs</code>,
        | <code>sm</code>, <code>sm--2</code>, <code>sm--3</code>, <code>md</code>, <code>lg</code>, <code>xl</code>, <code>xxl</code>.
      :code(lang="html")
        <!-- xs : 12x12px -->
        <chi-spinner size="xs"></chi-spinner>
        <!-- sm : 16x16px -->
        <chi-spinner size="sm"></chi-spinner>
        <!-- sm--2 : 20x20px -->
        <chi-spinner size="sm--2"></chi-spinner>
        <!-- sm--3 : 24x24px -->
        <chi-spinner size="sm--3"></chi-spinner>
        <!-- md : 32x32px -->
        <chi-spinner size="md"></chi-spinner>
        <!-- lg : 64x64px -->
        <chi-spinner size="lg"></chi-spinner>
        <!-- xl : 96x96px -->
        <chi-spinner size="xl"></chi-spinner>
        <!-- xxl : 128x128px -->
        <chi-spinner size="xxl"></chi-spinner>
    .chi-tabs-panel#html-sizes
      .chi-tab__description
        | By default, spinners render at 16x16px (<code>-sm</code>).
        | Apply size classes to render spinners larger or smaller: <code>-xs</code>,
        | <code>-sm</code>, <code>-sm--2</code>, <code>-sm--3</code>, <code>-md</code>, <code>-lg</code>, <code>-xl</code>, <code>-xxl</code>.
      :code(lang="html")
        <!-- -xs : 12x12px -->
        <svg class="chi-spinner -xs" viewBox="0 0 66 66">
          <title>Loading</title>
          <circle class="path" cx="33" cy="33" r="30" fill="none" stroke-width="6"></circle>
        </svg>
        <!-- -sm : 16x16px -->
        <svg class="chi-spinner -sm" viewBox="0 0 66 66">
          <title>Loading</title>
          <circle class="path" cx="33" cy="33" r="30" fill="none" stroke-width="6"></circle>
        </svg>
        <!-- -sm--2 : 20x20px -->
        <svg class="chi-spinner -sm--2" viewBox="0 0 66 66">
          <title>Loading</title>
          <circle class="path" cx="33" cy="33" r="30" fill="none" stroke-width="6"></circle>
        </svg>
        <!-- -sm--3 : 24x24px -->
        <svg class="chi-spinner -sm--3" viewBox="0 0 66 66">
          <title>Loading</title>
          <circle class="path" cx="33" cy="33" r="30" fill="none" stroke-width="6"></circle>
        </svg>
        <!-- -md : 32x32px -->
        <svg class="chi-spinner -md" viewBox="0 0 66 66">
          <title>Loading</title>
          <circle class="path" cx="33" cy="33" r="30" fill="none" stroke-width="6"></circle>
        </svg>
        <!-- -lg : 64x64px -->
        <svg class="chi-spinner -lg" viewBox="0 0 66 66">
          <title>Loading</title>
          <circle class="path" cx="33" cy="33" r="30" fill="none" stroke-width="6"></circle>
        </svg>
        <!-- -xl : 96x96px -->
        <svg class="chi-spinner -xl" viewBox="0 0 66 66">
          <title>Loading</title>
          <circle class="path" cx="33" cy="33" r="30" fill="none" stroke-width="6"></circle>
        </svg>
        </div>
        <!-- -xxl : 128x128px -->
        <svg class="chi-spinner -xxl" viewBox="0 0 66 66">
          <title>Loading</title>
          <circle class="path" cx="33" cy="33" r="30" fill="none" stroke-width="6"></circle>
        </svg>

.-portal--show
  h3 Sizes
  .example.-mb--3
    .-p--3
      .chi-grid.-align-items--end
        each size in ['xs', 'sm', 'sm--2', 'sm--3', 'md', 'lg', 'xl', 'xxl']
          div.-p--2
            chi-spinner(size=size, color='primary' class='-m--1')
            p.-text.-text--center= size
    .example-tabs.-pl--2
      ul.chi-tabs#examples-portal-sizes
        li.-active
          a(href=`#webcomponent-portal-sizes`) Web Component
        li
          a(href=`#html-portal-sizes`) HTML Blueprint
    .chi-tabs-panel.-active#webcomponent-portal-sizes
      .chi-tab__description
        | By default, spinners are rendered at 16x16px (<code>sm</code>).
        | Set <code>size</code> attribute to render spinners larger or smaller: <code>xs</code>,
        | <code>sm</code>, <code>sm--2</code>, <code>sm--3</code>, <code>md</code>, <code>lg</code>, <code>xl</code>, <code>xxl</code>.
      :code(lang="html")
        <!-- xs : 12x12px -->
        <chi-spinner color='primary' size="xs"></chi-spinner>
        <!-- sm : 16x16px -->
        <chi-spinner color='primary' size="sm"></chi-spinner>
        <!-- sm--2 : 20x20px -->
        <chi-spinner color='primary' size="sm--2"></chi-spinner>
        <!-- sm--3 : 24x24px -->
        <chi-spinner color='primary' size="sm--3"></chi-spinner>
        <!-- md : 32x32px -->
        <chi-spinner color='primary' size="md"></chi-spinner>
        <!-- lg : 64x64px -->
        <chi-spinner color='primary' size="lg"></chi-spinner>
        <!-- xl : 96x96px -->
        <chi-spinner color='primary' size="xl"></chi-spinner>
        <!-- xxl : 128x128px -->
        <chi-spinner color='primary' size="xxl"></chi-spinner>
    .chi-tabs-panel#html-portal-sizes
      .chi-tab__description
        | By default, spinners render at 16x16px (<code>-sm</code>).
        | Apply size classes to render spinners larger or smaller: <code>-xs</code>,
        | <code>-sm</code>, <code>-sm--2</code>, <code>-sm--3</code>, <code>-md</code>, <code>-lg</code>, <code>-xl</code>, <code>-xxl</code>.
      :code(lang="html")
        <!-- -xs : 12x12px -->
        <svg class="chi-spinner -icon--primary -xs" viewBox="0 0 66 66">
          <title>Loading</title>
          <circle class="path" cx="33" cy="33" r="30" fill="none" stroke-width="6"></circle>
        </svg>
        <!-- -sm : 16x16px -->
        <svg class="chi-spinner -icon--primary -sm" viewBox="0 0 66 66">
          <title>Loading</title>
          <circle class="path" cx="33" cy="33" r="30" fill="none" stroke-width="6"></circle>
        </svg>
        <!-- -sm--2 : 20x20px -->
        <svg class="chi-spinner -icon--primary -sm--2" viewBox="0 0 66 66">
          <title>Loading</title>
          <circle class="path" cx="33" cy="33" r="30" fill="none" stroke-width="6"></circle>
        </svg>
        <!-- -sm--3 : 24x24px -->
        <svg class="chi-spinner -icon--primary -sm--3" viewBox="0 0 66 66">
          <title>Loading</title>
          <circle class="path" cx="33" cy="33" r="30" fill="none" stroke-width="6"></circle>
        </svg>
        <!-- -md : 32x32px -->
        <svg class="chi-spinner -icon--primary -md" viewBox="0 0 66 66">
          <title>Loading</title>
          <circle class="path" cx="33" cy="33" r="30" fill="none" stroke-width="6"></circle>
        </svg>
        <!-- -lg : 64x64px -->
        <svg class="chi-spinner -icon--primary -lg" viewBox="0 0 66 66">
          <title>Loading</title>
          <circle class="path" cx="33" cy="33" r="30" fill="none" stroke-width="6"></circle>
        </svg>
        <!-- -xl : 96x96px -->
        <svg class="chi-spinner -icon--primary -xl" viewBox="0 0 66 66">
          <title>Loading</title>
          <circle class="path" cx="33" cy="33" r="30" fill="none" stroke-width="6"></circle>
        </svg>
        </div>
        <!-- -xxl : 128x128px -->
        <svg class="chi-spinner -icon--primary -xxl" viewBox="0 0 66 66">
          <title>Loading</title>
          <circle class="path" cx="33" cy="33" r="30" fill="none" stroke-width="6"></circle>
        </svg>



h3 Colors
p.-text
  | By default, spinners are rendered in the same color as the text color defined on their parent container.
  | Easily change a spinners color using the examples below.
h4 Brand
p.-text
  | Brand spinner colors reinforce Lumen's brand. Use primary or dark for light themes and secondary or light for dark themes.
.example.-mb--3
  .chi-grid.-no-gutter
    .chi-col.-w--12.-w-md--6.-p--1.-d--flex.-justify-content--center
      each color in ['primary', 'dark']
        div.-p--2.-text--center
          chi-spinner(color=color, class='-m--1', size='md')
    .chi-col.-w--12.-w-md--6.-bg--black.-p--1.-d--flex.-justify-content--center
      each color in ['secondary', 'light']
        div.-p--2.-text--center
          chi-spinner(color=color, class='-m--1', size='md')
  .example-tabs.-pl--2
    ul.chi-tabs#examples-colors
      li.-active
        a(href=`#webcomponent-colors`) Web Component
      li
        a(href=`#html-colors`) HTML Blueprint
  .chi-tabs-panel.-active#webcomponent-colors
    .chi-tab__description
      | Use the <code>color</code> attribute to change a spinners color.
    :code(lang="html")
      <!-- For light backgrounds -->
      <chi-spinner color="primary"></chi-spinner>
      <chi-spinner color="dark"></chi-spinner>
      <!-- For dark backgrounds -->
      <chi-spinner color="secondary"></chi-spinner>
      <chi-spinner color="light"></chi-spinner>
  .chi-tabs-panel#html-colors
    .chi-tab__description
      | Use <a href="../../utilities/color">icon color utilities</a> such as <code>-icon--primary</code>
      | and <code>-icon--secondary</code> to change the color of any spinner.
    :code(lang="html")
      <!-- For light backgrounds -->
      <svg class="chi-spinner -icon--primary" viewBox="0 0 66 66">
        <title>Loading</title>
        <circle class="path" cx="33" cy="33" r="30" fill="none" stroke-width="6"></circle>
      </svg>
      <svg class="chi-spinner -icon--dark" viewBox="0 0 66 66">
        <title>Loading</title>
        <circle class="path" cx="33" cy="33" r="30" fill="none" stroke-width="6"></circle>
      </svg>
      <!-- For dark backgrounds -->
      <svg class="chi-spinner -icon--secondary" viewBox="0 0 66 66">
        <title>Loading</title>
        <circle class="path" cx="33" cy="33" r="30" fill="none" stroke-width="6"></circle>
      </svg>
      <svg class="chi-spinner -icon--light" viewBox="0 0 66 66">
        <title>Loading</title>
        <circle class="path" cx="33" cy="33" r="30" fill="none" stroke-width="6"></circle>
      </svg>

h4 Semantic
p.-text
  | Use semantic colors to communicate meaning to users. Use green (success) for positive,
  | red (danger) for negative, yellow (warning) for needs attention, and grey (muted)
  | for neutral. Semantic colors should never be used for decorative purposes.
.example.-mb--3
  .chi-grid.-no-gutter
    .chi-col.-w--12.-d--flex.-flex--row.-justify-content--center.-flex--wrap
      each color in ['success', 'warning', 'danger', 'muted']
        div.-p--2.-text--center
          chi-spinner(color=color, class='-m--3', size='md')
  .example-tabs.-pl--2
    ul.chi-tabs#examples-colors-semantic
      li.-active
        a(href=`#webcomponent-colors-semantic`) Web Component
      li
        a(href=`#html-colors-semantic`) HTML Blueprint
  .chi-tabs-panel.-active#webcomponent-colors-semantic
    .chi-tab__description
      | Use the <code>color</code> attribute to change a spinners color.
    :code(lang="html")
      <chi-spinner color="success"></chi-spinner>
      <chi-spinner color="warning"></chi-spinner>
      <chi-spinner color="danger"></chi-spinner>
      <chi-spinner color="muted"></chi-spinner>
  .chi-tabs-panel#html-colors-semantic
    .chi-tab__description
      | Use <a href="../../utilities/color">icon color utilities</a> such as <code>-icon--success</code>
      | and <code>-icon--danger</code> to change the color of any spinner.
    :code(lang="html")
      <svg class="chi-spinner -icon--success" viewBox="0 0 66 66">
        <title>Loading</title>
        <circle class="path" cx="33" cy="33" r="30" fill="none" stroke-width="6"></circle>
      </svg>
      <svg class="chi-spinner -icon--warning" viewBox="0 0 66 66">
        <title>Loading</title>
        <circle class="path" cx="33" cy="33" r="30" fill="none" stroke-width="6"></circle>
      </svg>
      <svg class="chi-spinner -icon--danger" viewBox="0 0 66 66">
        <title>Loading</title>
        <circle class="path" cx="33" cy="33" r="30" fill="none" stroke-width="6"></circle>
      </svg>
      <svg class="chi-spinner -icon--muted" viewBox="0 0 66 66">
        <title>Loading</title>
        <circle class="path" cx="33" cy="33" r="30" fill="none" stroke-width="6"></circle>
      </svg>

script.
    document.addEventListener(
    'DOMContentLoaded',
    function() {
      chi.tab(document.querySelectorAll('.chi-tabs-panel .chi-tabs'));
    }
  );
