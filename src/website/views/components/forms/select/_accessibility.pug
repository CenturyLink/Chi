h2 Accessibility
h3 Keyboard Navigation
table.chi-table
  thead
    tr  
      th Key
      th Function
  tbody
    tr
      td <code>Tab</code>
      td Moves focus to the next focusable element.          
    tr
      td <code>Shift + Tab</code>
      td Moves focus to the previous focusable element.       
    tr
      td <code>Space</code>,<code>Down Arrow</code>
      td When focus is on the trigger, opens the dropdown.
    tr
      td <code>Up Arrow</code>,<code>Down Arrow</code>
      td Moves focus between the options in the dropdown. If focus is on the last/first option, moves focus to the first/last option respectively.
    tr 
      td <code>Space</code>,<code>Enter</code>
      td Selects the option and closes the dropdown.
    tr 
      td <code>Esc</code>
      td Closes the dropdown and returns focus to the trigger.


p.-text
  | For comprehensive details on keyboard support, refer to our <a href="https://lib.lumen.com/chi/6.18.0/foundations/accessibility/using-keyboard/" target="_blank">Keyboard Control Guide.</a>
p.-text
  | Visit <a href="https://webaim.org/techniques/keyboard/" target="_blank">WebAIM</a> for keyboard techniques.

.chi-grid
  .chi-col.-w-sm--12.-w-md--6.-w-lg--6.-mb--3
    .chi-card.-widget
      .chi-card__header 
        .chi-card__title.-text--normal Guidance for developers
      .chi-card__content 
        .chi-card__caption
          ul.-text
            li Utilize the <code>select</code> and <code>option</code> elements to ensure proper structure and automatic accessibility features.
            li Use <code>label</code> elements to provide descriptive labels for each select component. Ensure the <code>for</code> attribute of the label matches the <code>id</code> of the select box to support screen readers.
            li Use appropriate ARIA roles and attributes to enhance accessibility. For example, <code>role="listbox"</code> for the select element and <code>role="option"</code> for each option.
            li Error Handling and Feedback: Provide clear and immediate feedback for actions such as selection errors. Use ARIA live regions to announce updates or errors dynamically.
            li Test compatibility with various screen readers (like JAWS, NVDA, or VoiceOver) to ensure the select component is announced correctly. Options should be clearly read out when navigated.
            li Implement visible focus styles to help keyboard users determine which element has focus. 
  
  .chi-col.-w-sm--12.-w-md--6.-w-lg--6.-mb--3
    .chi-card.-widget
      .chi-card__header 
        .chi-card__title.-text--normal Guidance for designers
      .chi-card__content 
        .chi-card__caption 
          ul.-text
            li Ensure high contrast between text and background colors to aid users with visual impairments. The Web Content Accessibility Guidelines (WCAG) recommend a contrast ratio of at least 4.5:1 for normal text.
            li Design clear, concise labels that are visually connected to their respective select components. Include additional instructional text if the component requires specific interaction methods or behaves uniquely.
            li Design clear and distinct styles for error states. Use icons, text styles, and colors to highlight errors related to select components.
            li Focus Indicators: Design noticeable focus indicators for active components. These can include changes in border color, an outline, or shadow effects that distinctly mark the focused element.
            li Use spacing, typography, and visual cues effectively.
            li Maintain consistency in the design of the select to provide a cohesive user experience.

p.-text 
  | Find live examples in the <a href="https://a11y-style-guide.com/style-guide/section-forms.html#kssref-forms-select-lists" target="_blank">A11y style guide</a>.  

h3 Roles and attributes
p.-text 
  | The following list provides essential roles and attributes you should consider to ensure our components are fully accessible across various interface scenarios.
table.chi-table
  thead
    tr
      th.-pr--6 Attribute
      th Element
      th Usage
  tbody
    tr
      td <code>aria-label</code>
      td <code>div</code>
      td Defines a string value that labels an interactive element. It is required props for select without text content.

h3 Resources
ul.-text
  li
    a(href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select" target="_blank") Mozilla Resources for Developers: 
    | Information about the HTML select element.
  li  
    a(href="https://www.w3.org/WAI/ARIA/apg/patterns/combobox/examples/combobox-select-only/" target="_blank") W3 Single-select Combobox:  
    | Single-select combobox widget that is functionally similar to an HTML <code>select</code> element.
  li  
    a(href="https://www.magentaa11y.com/checklist-web/select/" target="_blank") MagentaA11y: 
    | How to test the select element.

h3 Other recommendations
p.-text
  | Explore additional accessibility tips in the general <a href="https://lib.lumen.com/chi/6.18.0/foundations/accessibility/overview" target="_blank">Accessibility Guide.</a>

h3 WCAG 2.2 Guidelines
ul.-text
  li
    a(href="https://www.w3.org/WAI/WCAG22/quickref/?versions=2.2#non-text-content" target="_blank") Non-text Content: 
    | All non-text content that is presented to the user has a text alternative that serves the equivalent purpose. (Level A)
  li
    a(href="https://www.w3.org/WAI/WCAG22/quickref/?versions=2.2#qr-content-structure-separation-programmatic" target="_blank") Info and Relationships: 
    | Information, structure, and relationships conveyed through presentation can be programmatically determined or are available in text. (Level A)
  li 
    a(href="https://www.w3.org/WAI/WCAG22/quickref/?versions=2.2#qr-navigation-mechanisms-descriptive" target="_blank") Headings and Labels: 
    | Headings and labels describe topic or purpose. (Level AA)
  li
    a(href="https://www.w3.org/WAI/WCAG22/quickref/?versions=2.2#qr-minimize-error-cues" target="_blank") Labels or Instructions: 
    | Labels or instructions are provided when content requires user input. (Level A)
  li
    a(href="https://www.w3.org/WAI/WCAG22/quickref/?versions=2.2#qr-ensure-compat-rsv" target="_blank") Name, Role, Value: 
    | For all user interface components (including but not limited to: form elements, links and components generated by scripts), the name and role can be programmatically determined; states, properties, and values that can be set by the user can be programmatically set; and notification of changes to these items is available to user agents, including assistive technologies. (Level A) 