extends ../layout.pug

block scripts
  script(type="module" src='../../js/ce/ux-chi-ce/ux-chi-ce.esm.js')
  script(src='../../js/chi.js')

block variables
  - var title = 'Spinner'

block content
  h3 Backdrop
  h4 Base
  .test-backdrop-base(style="height:31rem;width:100%")
    .example.-mb--3(style="height:30rem;width:100%")
      .-p--6(style="position:relative;height:100%;")
        chi-spinner(color='light', backdrop, data-cy='base-backdrop-spinner')

  h4 Inverse Backdrop
  .test-backdrop-inverse(style="height:31rem;width:100%")
    .example.-mb--3(style="height:30rem;width:100%")
      .-p--6(style="position:relative;height:100%;")
        chi-spinner(color='primary', backdrop='inverse', data-cy='inverse-backdrop-spinner')

  h3 Contextual
  h4 Spinner Buttons
  .test-buttons
    .example.-mb--3
      .-p--3
        chi-button.-mr--3
          span Button
          chi-spinner(color='muted')
        chi-button.-mr--3(size='sm')
          span Small
          chi-spinner(color='muted', size='xs')
        chi-button.-mr--3(size='lg')
          span Large
          chi-spinner(color='muted', size='sm--2')

  // TODO: Change after we have input ce
  h4 Spinner Text Input
  .test-text-input
    .example.-mb--3
      .-p--3
        .chi-input__wrapper.-pb--2(style="max-width:20rem")
          input(type="text", class="chi-input", placeholder="Placeholder", value="Sample Text")
          svg(class='chi-spinner -icon--muted',viewBox='0 0 66 66')
            title Loading
            circle(class='path',cx='33',cy='33',r='30',fill='none',stroke-width='6')
        .chi-input__wrapper.-pb--2(style="max-width:20rem")
          input(type="text", class="chi-input -sm", placeholder="Placeholder", value="Sample Text")
          svg(class='chi-spinner -icon--muted -xs',viewBox='0 0 66 66')
            title Loading
            circle(class='path',cx='33',cy='33',r='30',fill='none',stroke-width='6')
        .chi-input__wrapper.-pb--2(style="max-width:20rem")
          input(type="text", class="chi-input -lg", placeholder="Placeholder", value="Sample Text")
          svg(class='chi-spinner -icon--muted -sm--2',viewBox='0 0 66 66')
            title Loading
            circle(class='path',cx='33',cy='33',r='30',fill='none',stroke-width='6')

  h4 Sizes
  .test-sizes
    .chi-grid
      each size in ['xs', 'sm', 'sm--2', 'sm--3', 'md', 'lg', 'xl', 'xxl']
        .chi-col.-w--1.-o--1.-middle
          h4= `-${size}`
        .chi-col.-w--2.-middle
          chi-spinner(color='muted', size=size, data-cy=`spinner-${size}`)

  h4 Colors
  .test-colors
    .chi-grid.-align-items--center
      each type in ['primary', 'success', 'warning', 'danger', 'muted', 'secondary', 'light']
        div.-p--2
          chi-spinner(color=type, size='lg', data-cy=`spinner-${type}`)
          p.-text(class=`-icon--${type}`)
            = `-icon--${type}`

  h3 Spinner alert
  each size in ['default', 'sm', 'lg']
    h4 Spinner banner / #{size}
    div(class=`test-banner-spinner-${size} -w--100`)
      each type in ['base', 'success', 'danger', 'warning', 'info', 'muted']
        if (type === 'base')
          chi-alert.-m--2(class=type, spinner, type='banner', size=`${size === 'default' ? '' : size}`, data-cy=`alert-banner-${type}-${size}`)
            =`This is ${type === 'info' ? 'an' : 'a'} ${type} alert`
        else
          chi-alert.-m--2(color=type, spinner, type='banner', size=`${size === 'default' ? '' : size}`, data-cy=`alert-banner-${type}-${size}`)
            =`This is ${type === 'info' ? 'an' : 'a'} ${type} alert`

    h4 Spinner bubble / #{size}
    div(class=`test-bubble-spinner-${size} -w--100`)
      each type in ['base', 'success', 'danger', 'warning', 'info', 'muted']
        if (type === 'base')
          chi-alert.-m--2(class=type, spinner, size=`${size === 'default' ? '' : size}`, data-cy=`alert-bubble-${type}-${size}`)
            =`This is ${type === 'info' ? 'an' : 'a'} ${type} alert`
        else
          chi-alert.-m--2(color=type, spinner, size=`${size === 'default' ? '' : size}`, data-cy=`alert-bubble-${type}-${size}`)
            =`This is ${type === 'info' ? 'an' : 'a'} ${type} alert`
    
    h4 Spinner toast / #{size}
    div(class=`test-toast-spinner-${size}`)
      each type in ['base', 'success', 'danger', 'warning', 'info', 'muted']
        if (type === 'base')
          chi-alert.-m--2(type='toast', spinner, size=`${size === 'default' ? '' : size}`, class=type, data-cy=`alert-toast-${type}-${size}`)
            =`This is ${type === 'info' ? 'an' : 'a'} ${type} alert`
        else
          chi-alert.-m--2(type='toast', spinner, size=`${size === 'default' ? '' : size}`, color=type, data-cy=`alert-toast-${type}-${size}`)
            =`This is ${type === 'info' ? 'an' : 'a'} ${type} alert`

  style.
    svg {
      animation: none !important;
    }
    .path {
      animation: none !important;
      stroke-dasharray: 0, 0 !important;
    }
